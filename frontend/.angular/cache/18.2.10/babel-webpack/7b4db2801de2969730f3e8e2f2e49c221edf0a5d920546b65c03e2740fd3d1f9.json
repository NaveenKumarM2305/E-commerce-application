{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { getOAuthUrls } from './oauth.js';\nfunction createEnrollAuthenticatorMeta(sdk, params) {\n  const issuer = sdk.options.issuer;\n  const urls = getOAuthUrls(sdk, params);\n  const oauthMeta = {\n    issuer,\n    urls,\n    clientId: params.clientId,\n    redirectUri: params.redirectUri,\n    responseType: params.responseType,\n    responseMode: params.responseMode,\n    state: params.state,\n    acrValues: params.acrValues,\n    enrollAmrValues: params.enrollAmrValues\n  };\n  return oauthMeta;\n}\nexport { createEnrollAuthenticatorMeta };","map":{"version":3,"names":["getOAuthUrls","createEnrollAuthenticatorMeta","sdk","params","issuer","options","urls","oauthMeta","clientId","redirectUri","responseType","responseMode","state","acrValues","enrollAmrValues"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/oidc/util/enrollAuthenticatorMeta.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { getOAuthUrls } from './oauth.js';\n\nfunction createEnrollAuthenticatorMeta(sdk, params) {\n    const issuer = sdk.options.issuer;\n    const urls = getOAuthUrls(sdk, params);\n    const oauthMeta = {\n        issuer,\n        urls,\n        clientId: params.clientId,\n        redirectUri: params.redirectUri,\n        responseType: params.responseType,\n        responseMode: params.responseMode,\n        state: params.state,\n        acrValues: params.acrValues,\n        enrollAmrValues: params.enrollAmrValues,\n    };\n    return oauthMeta;\n}\n\nexport { createEnrollAuthenticatorMeta };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,YAAY,QAAQ,YAAY;AAEzC,SAASC,6BAA6BA,CAACC,GAAG,EAAEC,MAAM,EAAE;EAChD,MAAMC,MAAM,GAAGF,GAAG,CAACG,OAAO,CAACD,MAAM;EACjC,MAAME,IAAI,GAAGN,YAAY,CAACE,GAAG,EAAEC,MAAM,CAAC;EACtC,MAAMI,SAAS,GAAG;IACdH,MAAM;IACNE,IAAI;IACJE,QAAQ,EAAEL,MAAM,CAACK,QAAQ;IACzBC,WAAW,EAAEN,MAAM,CAACM,WAAW;IAC/BC,YAAY,EAAEP,MAAM,CAACO,YAAY;IACjCC,YAAY,EAAER,MAAM,CAACQ,YAAY;IACjCC,KAAK,EAAET,MAAM,CAACS,KAAK;IACnBC,SAAS,EAAEV,MAAM,CAACU,SAAS;IAC3BC,eAAe,EAAEX,MAAM,CAACW;EAC5B,CAAC;EACD,OAAOP,SAAS;AACpB;AAEA,SAASN,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}