{"ast":null,"code":"import _asyncToGenerator from \"C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Form, loc } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport DeviceFingerprint from '../../util/DeviceFingerprint.js';\nimport TypingUtil from '../../util/TypingUtil.js';\nimport Util from '../../../util/Util.js';\nimport TextBox from '../shared/TextBox.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar PrimaryAuthForm = Form.extend({\n  className: 'primary-auth-form',\n  noCancelButton: true,\n  attributes: {\n    novalidate: 'novalidate'\n  },\n  save: function () {\n    if (this.settings.get('features.passwordlessAuth')) {\n      return loc('oform.next', 'login');\n    }\n    return loc('primaryauth.submit', 'login');\n  },\n  saveId: 'okta-signin-submit',\n  layout: 'o-form-theme',\n  // If socialAuth is configured, the title moves from the form to\n  // the top of the container (and is rendered in socialAuth).\n  title: function () {\n    let formTitle = loc('primaryauth.title', 'login');\n    if (this.settings.get('socialAuthPositionTop')) {\n      formTitle = '';\n    }\n    return formTitle;\n  },\n  initialize: function () {\n    const trackTypingPattern = this.settings.get('features.trackTypingPattern');\n    this.listenTo(this, 'save', /*#__PURE__*/_asyncToGenerator(function* () {\n      const {\n        appState: appState\n      } = this.options;\n      if (trackTypingPattern) {\n        const typingPattern = TypingUtil.getTypingPattern();\n        appState.set('typingPattern', typingPattern);\n      }\n      const creds = {\n        username: this.model.get('username')\n      };\n      if (!this.settings.get('features.passwordlessAuth')) {\n        creds.password = this.model.get('password');\n      }\n\n      // show loading spinner and disable submit button before processCreds hook runs\n      appState.trigger('loading', true);\n      this.state.trigger('togglePrimaryAuthButton', true);\n      yield this.settings.processCreds(creds);\n      if (this.settings.get('features.deviceFingerprinting')) {\n        try {\n          const fingerprint = yield DeviceFingerprint.generateDeviceFingerprint(this.settings.getAuthClient(), this.$el[0]);\n          appState.set('deviceFingerprint', fingerprint);\n        } catch {\n          // Keep going even if device fingerprint fails\n        }\n      }\n      this.model.save();\n    }));\n    this.stateEnableChange();\n    this.stateUsernameChange();\n  },\n  stateEnableChange: function () {\n    this.listenTo(this.state, 'change:enabled', function (model, enable) {\n      if (enable) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    });\n  },\n  stateUsernameChange: function () {\n    this.listenTo(this.state, 'change:disableUsername', function (model, disable) {\n      if (disable) {\n        this.$el.find('#okta-signin-username').attr('disabled', true);\n      } else {\n        this.$el.find('#okta-signin-username').removeAttr('disabled');\n      }\n    });\n  },\n  inputs: function () {\n    const inputs = [];\n    inputs.push(this.getUsernameField());\n    if (!this.settings.get('features.passwordlessAuth')) {\n      inputs.push(this.getPasswordField());\n    }\n    if (this.settings.get('features.rememberMe')) {\n      inputs.push(this.getRemeberMeCheckbox());\n    }\n    return inputs;\n  },\n  getUsernameField: function () {\n    const userNameFieldObject = {\n      className: 'margin-btm-5',\n      label: loc('primaryauth.username.placeholder', 'login'),\n      'label-top': true,\n      explain: () => {\n        if (!this.isCustomized('primaryauth.username.tooltip')) {\n          return false;\n        }\n        return Util.createInputExplain('primaryauth.username.tooltip', 'primaryauth.username.placeholder', 'login');\n      },\n      'explain-top': true,\n      name: 'username',\n      input: TextBox,\n      inputId: 'okta-signin-username',\n      type: 'text',\n      disabled: this.options.appState.get('disableUsername'),\n      autoComplete: Util.getAutocompleteValue(this.settings, 'username'),\n      // TODO: support a11y attrs in Courage - OKTA-279025\n      render: function () {\n        const that = this;\n        function clearAriaInvalid() {\n          that.$(this).removeAttr('aria-invalid').off('focusout', clearAriaInvalid).off('change', clearAriaInvalid);\n        }\n        this.$(`input[name=${this.options.name}]`)\n        // OKTA-430928: to prevent NVDA and JAWS screen readers from\n        // announcing \"required invalid entry\" before the user has a chance to\n        // complete the field, aria-invalid is set to \"false\" initially and\n        // removed on focusout or change using clearAriaInvalid()\n        .attr({\n          'aria-invalid': 'false',\n          'aria-required': 'true'\n        }).prop({\n          required: true\n        }).focusout(clearAriaInvalid).change(clearAriaInvalid);\n      }\n    };\n    return userNameFieldObject;\n  },\n  getPasswordField: function () {\n    const passwordFieldObject = {\n      className: 'margin-btm-30',\n      label: loc('primaryauth.password.placeholder', 'login'),\n      'label-top': true,\n      explain: () => {\n        if (!this.isCustomized('primaryauth.password.tooltip')) {\n          return false;\n        }\n        return Util.createInputExplain('primaryauth.password.tooltip', 'primaryauth.password.placeholder', 'login');\n      },\n      'explain-top': true,\n      name: 'password',\n      inputId: 'okta-signin-password',\n      validateOnlyIfDirty: true,\n      type: 'password',\n      autoComplete: Util.getAutocompleteValue(this.settings, 'current-password'),\n      // TODO: support a11y attrs in Courage - OKTA-279025\n      render: function () {\n        const that = this;\n        function clearAriaInvalid() {\n          that.$(this).removeAttr('aria-invalid').off('focusout', clearAriaInvalid).off('change', clearAriaInvalid);\n        }\n        this.$(`input[name=${this.options.name}]`)\n        // OKTA-430928: to prevent NVDA and JAWS screen readers from\n        // announcing \"required invalid entry\" before the user has a chance to\n        // complete the field, aria-invalid is set to \"false\" initially and\n        // removed on focusout or change using clearAriaInvalid()\n        .attr({\n          'aria-invalid': 'false',\n          'aria-required': 'true'\n        }).prop({\n          required: true\n        }).focusout(clearAriaInvalid).change(clearAriaInvalid);\n      }\n    };\n    if (this.settings.get('features.showPasswordToggleOnSignInPage')) {\n      passwordFieldObject.params = {};\n      passwordFieldObject.params.showPasswordToggle = true;\n    }\n    return passwordFieldObject;\n  },\n  isCustomized: function (property) {\n    const language = this.settings.get('language');\n    const i18n = this.settings.get('i18n');\n    const customizedProperty = i18n && i18n[language] && i18n[language][property];\n    return !!customizedProperty;\n  },\n  // TODO fix method name typo\n  getRemeberMeCheckbox: function () {\n    return {\n      label: false,\n      placeholder: loc('remember', 'login'),\n      name: 'remember',\n      type: 'checkbox',\n      'label-top': true,\n      className: 'margin-btm-0',\n      initialize: function () {\n        this.listenTo(this.model, 'change:remember', function (model, val) {\n          // OKTA-98946: We normally re-render on changes to model values,\n          // but in this case we will manually update the checkbox due to\n          // iOS Safari and how it handles autofill - it will autofill the\n          // form anytime the dom elements are re-rendered, which prevents\n          // the user from editing their username.\n          this.$(':checkbox').prop('checked', val).trigger('updateState');\n        });\n      }\n    };\n  },\n  focus: function () {\n    if (!this.model.get('username')) {\n      this.getInputs().first().focus();\n    } else if (!this.settings.get('features.passwordlessAuth')) {\n      this.getInputs().toArray()[1].focus();\n    }\n    if (this.settings.get('features.trackTypingPattern')) {\n      TypingUtil.track('okta-signin-username');\n    }\n  }\n});\nexport { PrimaryAuthForm as default };","map":{"version":3,"names":["Form","loc","DeviceFingerprint","TypingUtil","Util","TextBox","PrimaryAuthForm","extend","className","noCancelButton","attributes","novalidate","save","settings","get","saveId","layout","title","formTitle","initialize","trackTypingPattern","listenTo","_asyncToGenerator","appState","options","typingPattern","getTypingPattern","set","creds","username","model","password","trigger","state","processCreds","fingerprint","generateDeviceFingerprint","getAuthClient","$el","stateEnableChange","stateUsernameChange","enable","disable","find","attr","removeAttr","inputs","push","getUsernameField","getPasswordField","getRemeberMeCheckbox","userNameFieldObject","label","explain","isCustomized","createInputExplain","name","input","inputId","type","disabled","autoComplete","getAutocompleteValue","render","that","clearAriaInvalid","$","off","prop","required","focusout","change","passwordFieldObject","validateOnlyIfDirty","params","showPasswordToggle","property","language","i18n","customizedProperty","placeholder","val","focus","getInputs","first","toArray","track","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/views/primary-auth/PrimaryAuthForm.js"],"sourcesContent":["import { Form, loc } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport DeviceFingerprint from '../../util/DeviceFingerprint.js';\nimport TypingUtil from '../../util/TypingUtil.js';\nimport Util from '../../../util/Util.js';\nimport TextBox from '../shared/TextBox.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar PrimaryAuthForm = Form.extend({\n  className: 'primary-auth-form',\n  noCancelButton: true,\n  attributes: {\n    novalidate: 'novalidate'\n  },\n  save: function () {\n    if (this.settings.get('features.passwordlessAuth')) {\n      return loc('oform.next', 'login');\n    }\n    return loc('primaryauth.submit', 'login');\n  },\n  saveId: 'okta-signin-submit',\n  layout: 'o-form-theme',\n  // If socialAuth is configured, the title moves from the form to\n  // the top of the container (and is rendered in socialAuth).\n  title: function () {\n    let formTitle = loc('primaryauth.title', 'login');\n    if (this.settings.get('socialAuthPositionTop')) {\n      formTitle = '';\n    }\n    return formTitle;\n  },\n  initialize: function () {\n    const trackTypingPattern = this.settings.get('features.trackTypingPattern');\n    this.listenTo(this, 'save', async function () {\n      const {\n        appState: appState\n      } = this.options;\n      if (trackTypingPattern) {\n        const typingPattern = TypingUtil.getTypingPattern();\n        appState.set('typingPattern', typingPattern);\n      }\n      const creds = {\n        username: this.model.get('username')\n      };\n      if (!this.settings.get('features.passwordlessAuth')) {\n        creds.password = this.model.get('password');\n      }\n\n      // show loading spinner and disable submit button before processCreds hook runs\n      appState.trigger('loading', true);\n      this.state.trigger('togglePrimaryAuthButton', true);\n      await this.settings.processCreds(creds);\n      if (this.settings.get('features.deviceFingerprinting')) {\n        try {\n          const fingerprint = await DeviceFingerprint.generateDeviceFingerprint(this.settings.getAuthClient(), this.$el[0]);\n          appState.set('deviceFingerprint', fingerprint);\n        } catch {\n          // Keep going even if device fingerprint fails\n        }\n      }\n      this.model.save();\n    });\n    this.stateEnableChange();\n    this.stateUsernameChange();\n  },\n  stateEnableChange: function () {\n    this.listenTo(this.state, 'change:enabled', function (model, enable) {\n      if (enable) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    });\n  },\n  stateUsernameChange: function () {\n    this.listenTo(this.state, 'change:disableUsername', function (model, disable) {\n      if (disable) {\n        this.$el.find('#okta-signin-username').attr('disabled', true);\n      } else {\n        this.$el.find('#okta-signin-username').removeAttr('disabled');\n      }\n    });\n  },\n  inputs: function () {\n    const inputs = [];\n    inputs.push(this.getUsernameField());\n    if (!this.settings.get('features.passwordlessAuth')) {\n      inputs.push(this.getPasswordField());\n    }\n    if (this.settings.get('features.rememberMe')) {\n      inputs.push(this.getRemeberMeCheckbox());\n    }\n    return inputs;\n  },\n  getUsernameField: function () {\n    const userNameFieldObject = {\n      className: 'margin-btm-5',\n      label: loc('primaryauth.username.placeholder', 'login'),\n      'label-top': true,\n      explain: () => {\n        if (!this.isCustomized('primaryauth.username.tooltip')) {\n          return false;\n        }\n        return Util.createInputExplain('primaryauth.username.tooltip', 'primaryauth.username.placeholder', 'login');\n      },\n      'explain-top': true,\n      name: 'username',\n      input: TextBox,\n      inputId: 'okta-signin-username',\n      type: 'text',\n      disabled: this.options.appState.get('disableUsername'),\n      autoComplete: Util.getAutocompleteValue(this.settings, 'username'),\n      // TODO: support a11y attrs in Courage - OKTA-279025\n      render: function () {\n        const that = this;\n        function clearAriaInvalid() {\n          that.$(this).removeAttr('aria-invalid').off('focusout', clearAriaInvalid).off('change', clearAriaInvalid);\n        }\n        this.$(`input[name=${this.options.name}]`)\n        // OKTA-430928: to prevent NVDA and JAWS screen readers from\n        // announcing \"required invalid entry\" before the user has a chance to\n        // complete the field, aria-invalid is set to \"false\" initially and\n        // removed on focusout or change using clearAriaInvalid()\n        .attr({\n          'aria-invalid': 'false',\n          'aria-required': 'true'\n        }).prop({\n          required: true\n        }).focusout(clearAriaInvalid).change(clearAriaInvalid);\n      }\n    };\n    return userNameFieldObject;\n  },\n  getPasswordField: function () {\n    const passwordFieldObject = {\n      className: 'margin-btm-30',\n      label: loc('primaryauth.password.placeholder', 'login'),\n      'label-top': true,\n      explain: () => {\n        if (!this.isCustomized('primaryauth.password.tooltip')) {\n          return false;\n        }\n        return Util.createInputExplain('primaryauth.password.tooltip', 'primaryauth.password.placeholder', 'login');\n      },\n      'explain-top': true,\n      name: 'password',\n      inputId: 'okta-signin-password',\n      validateOnlyIfDirty: true,\n      type: 'password',\n      autoComplete: Util.getAutocompleteValue(this.settings, 'current-password'),\n      // TODO: support a11y attrs in Courage - OKTA-279025\n      render: function () {\n        const that = this;\n        function clearAriaInvalid() {\n          that.$(this).removeAttr('aria-invalid').off('focusout', clearAriaInvalid).off('change', clearAriaInvalid);\n        }\n        this.$(`input[name=${this.options.name}]`)\n        // OKTA-430928: to prevent NVDA and JAWS screen readers from\n        // announcing \"required invalid entry\" before the user has a chance to\n        // complete the field, aria-invalid is set to \"false\" initially and\n        // removed on focusout or change using clearAriaInvalid()\n        .attr({\n          'aria-invalid': 'false',\n          'aria-required': 'true'\n        }).prop({\n          required: true\n        }).focusout(clearAriaInvalid).change(clearAriaInvalid);\n      }\n    };\n    if (this.settings.get('features.showPasswordToggleOnSignInPage')) {\n      passwordFieldObject.params = {};\n      passwordFieldObject.params.showPasswordToggle = true;\n    }\n    return passwordFieldObject;\n  },\n  isCustomized: function (property) {\n    const language = this.settings.get('language');\n    const i18n = this.settings.get('i18n');\n    const customizedProperty = i18n && i18n[language] && i18n[language][property];\n    return !!customizedProperty;\n  },\n  // TODO fix method name typo\n  getRemeberMeCheckbox: function () {\n    return {\n      label: false,\n      placeholder: loc('remember', 'login'),\n      name: 'remember',\n      type: 'checkbox',\n      'label-top': true,\n      className: 'margin-btm-0',\n      initialize: function () {\n        this.listenTo(this.model, 'change:remember', function (model, val) {\n          // OKTA-98946: We normally re-render on changes to model values,\n          // but in this case we will manually update the checkbox due to\n          // iOS Safari and how it handles autofill - it will autofill the\n          // form anytime the dom elements are re-rendered, which prevents\n          // the user from editing their username.\n          this.$(':checkbox').prop('checked', val).trigger('updateState');\n        });\n      }\n    };\n  },\n  focus: function () {\n    if (!this.model.get('username')) {\n      this.getInputs().first().focus();\n    } else if (!this.settings.get('features.passwordlessAuth')) {\n      this.getInputs().toArray()[1].focus();\n    }\n    if (this.settings.get('features.trackTypingPattern')) {\n      TypingUtil.track('okta-signin-username');\n    }\n  }\n});\n\nexport { PrimaryAuthForm as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}