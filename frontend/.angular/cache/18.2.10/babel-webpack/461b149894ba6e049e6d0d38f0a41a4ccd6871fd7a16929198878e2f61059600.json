{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport '../errors/WWWAuthError.js';\nimport { isFingerprintSupported } from '../features.js';\nimport { addListener, removeListener } from '../oidc/util/browser.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport '../oidc/types/Token.js';\nconst isMessageFromCorrectSource = (iframe, event) => event.source === iframe.contentWindow;\nfunction fingerprint(sdk, options) {\n  var _a;\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n  const container = (_a = options === null || options === void 0 ? void 0 : options.container) !== null && _a !== void 0 ? _a : document.body;\n  let timeout;\n  let iframe;\n  let listener;\n  const promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n    listener = function listener(e) {\n      var _a;\n      if (!isMessageFromCorrectSource(iframe, e)) {\n        return;\n      }\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n      let msg;\n      try {\n        msg = JSON.parse(e.data);\n      } catch (err) {\n        return;\n      }\n      if (!msg) {\n        return;\n      }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint);\n      } else if (msg.type === 'FingerprintServiceReady') {\n        (_a = iframe === null || iframe === void 0 ? void 0 : iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      } else {\n        return reject(new AuthSdkError('No data'));\n      }\n    };\n    addListener(window, 'message', listener);\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    container.appendChild(iframe);\n    timeout = setTimeout(function () {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, (options === null || options === void 0 ? void 0 : options.timeout) || 15000);\n  });\n  return promise.finally(function () {\n    var _a;\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (container.contains(iframe)) {\n      (_a = iframe.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(iframe);\n    }\n  });\n}\nexport { fingerprint as default };","map":{"version":3,"names":["AuthSdkError","isFingerprintSupported","addListener","removeListener","isMessageFromCorrectSource","iframe","event","source","contentWindow","fingerprint","sdk","options","_a","Promise","reject","container","document","body","timeout","listener","promise","resolve","createElement","style","display","e","data","origin","getIssuerOrigin","msg","JSON","parse","err","type","postMessage","stringify","window","src","appendChild","setTimeout","finally","clearTimeout","contains","parentElement","removeChild","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/browser/fingerprint.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport '../errors/WWWAuthError.js';\nimport { isFingerprintSupported } from '../features.js';\nimport { addListener, removeListener } from '../oidc/util/browser.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport '../oidc/types/Token.js';\n\nconst isMessageFromCorrectSource = (iframe, event) => event.source === iframe.contentWindow;\nfunction fingerprint(sdk, options) {\n    var _a;\n    if (!isFingerprintSupported()) {\n        return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n    }\n    const container = (_a = options === null || options === void 0 ? void 0 : options.container) !== null && _a !== void 0 ? _a : document.body;\n    let timeout;\n    let iframe;\n    let listener;\n    const promise = new Promise(function (resolve, reject) {\n        iframe = document.createElement('iframe');\n        iframe.style.display = 'none';\n        listener = function listener(e) {\n            var _a;\n            if (!isMessageFromCorrectSource(iframe, e)) {\n                return;\n            }\n            if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n                return;\n            }\n            let msg;\n            try {\n                msg = JSON.parse(e.data);\n            }\n            catch (err) {\n                return;\n            }\n            if (!msg) {\n                return;\n            }\n            if (msg.type === 'FingerprintAvailable') {\n                return resolve(msg.fingerprint);\n            }\n            else if (msg.type === 'FingerprintServiceReady') {\n                (_a = iframe === null || iframe === void 0 ? void 0 : iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.postMessage(JSON.stringify({\n                    type: 'GetFingerprint'\n                }), e.origin);\n            }\n            else {\n                return reject(new AuthSdkError('No data'));\n            }\n        };\n        addListener(window, 'message', listener);\n        iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n        container.appendChild(iframe);\n        timeout = setTimeout(function () {\n            reject(new AuthSdkError('Fingerprinting timed out'));\n        }, (options === null || options === void 0 ? void 0 : options.timeout) || 15000);\n    });\n    return promise.finally(function () {\n        var _a;\n        clearTimeout(timeout);\n        removeListener(window, 'message', listener);\n        if (container.contains(iframe)) {\n            (_a = iframe.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(iframe);\n        }\n    });\n}\n\nexport { fingerprint as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,YAAY,MAAM,2BAA2B;AACpD,OAAO,2BAA2B;AAClC,SAASC,sBAAsB,QAAQ,gBAAgB;AACvD,SAASC,WAAW,EAAEC,cAAc,QAAQ,yBAAyB;AACrE,OAAO,cAAc;AACrB,OAAO,WAAW;AAClB,OAAO,aAAa;AACpB,OAAO,wBAAwB;AAE/B,MAAMC,0BAA0B,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAKA,KAAK,CAACC,MAAM,KAAKF,MAAM,CAACG,aAAa;AAC3F,SAASC,WAAWA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC/B,IAAIC,EAAE;EACN,IAAI,CAACX,sBAAsB,CAAC,CAAC,EAAE;IAC3B,OAAOY,OAAO,CAACC,MAAM,CAAC,IAAId,YAAY,CAAC,gDAAgD,CAAC,CAAC;EAC7F;EACA,MAAMe,SAAS,GAAG,CAACH,EAAE,GAAGD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,SAAS,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGI,QAAQ,CAACC,IAAI;EAC3I,IAAIC,OAAO;EACX,IAAIb,MAAM;EACV,IAAIc,QAAQ;EACZ,MAAMC,OAAO,GAAG,IAAIP,OAAO,CAAC,UAAUQ,OAAO,EAAEP,MAAM,EAAE;IACnDT,MAAM,GAAGW,QAAQ,CAACM,aAAa,CAAC,QAAQ,CAAC;IACzCjB,MAAM,CAACkB,KAAK,CAACC,OAAO,GAAG,MAAM;IAC7BL,QAAQ,GAAG,SAASA,QAAQA,CAACM,CAAC,EAAE;MAC5B,IAAIb,EAAE;MACN,IAAI,CAACR,0BAA0B,CAACC,MAAM,EAAEoB,CAAC,CAAC,EAAE;QACxC;MACJ;MACA,IAAI,CAACA,CAAC,IAAI,CAACA,CAAC,CAACC,IAAI,IAAID,CAAC,CAACE,MAAM,KAAKjB,GAAG,CAACkB,eAAe,CAAC,CAAC,EAAE;QACrD;MACJ;MACA,IAAIC,GAAG;MACP,IAAI;QACAA,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACN,CAAC,CAACC,IAAI,CAAC;MAC5B,CAAC,CACD,OAAOM,GAAG,EAAE;QACR;MACJ;MACA,IAAI,CAACH,GAAG,EAAE;QACN;MACJ;MACA,IAAIA,GAAG,CAACI,IAAI,KAAK,sBAAsB,EAAE;QACrC,OAAOZ,OAAO,CAACQ,GAAG,CAACpB,WAAW,CAAC;MACnC,CAAC,MACI,IAAIoB,GAAG,CAACI,IAAI,KAAK,yBAAyB,EAAE;QAC7C,CAACrB,EAAE,GAAGP,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACG,aAAa,MAAM,IAAI,IAAII,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACsB,WAAW,CAACJ,IAAI,CAACK,SAAS,CAAC;UAC3IF,IAAI,EAAE;QACV,CAAC,CAAC,EAAER,CAAC,CAACE,MAAM,CAAC;MACjB,CAAC,MACI;QACD,OAAOb,MAAM,CAAC,IAAId,YAAY,CAAC,SAAS,CAAC,CAAC;MAC9C;IACJ,CAAC;IACDE,WAAW,CAACkC,MAAM,EAAE,SAAS,EAAEjB,QAAQ,CAAC;IACxCd,MAAM,CAACgC,GAAG,GAAG3B,GAAG,CAACkB,eAAe,CAAC,CAAC,GAAG,kCAAkC;IACvEb,SAAS,CAACuB,WAAW,CAACjC,MAAM,CAAC;IAC7Ba,OAAO,GAAGqB,UAAU,CAAC,YAAY;MAC7BzB,MAAM,CAAC,IAAId,YAAY,CAAC,0BAA0B,CAAC,CAAC;IACxD,CAAC,EAAE,CAACW,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACO,OAAO,KAAK,KAAK,CAAC;EACpF,CAAC,CAAC;EACF,OAAOE,OAAO,CAACoB,OAAO,CAAC,YAAY;IAC/B,IAAI5B,EAAE;IACN6B,YAAY,CAACvB,OAAO,CAAC;IACrBf,cAAc,CAACiC,MAAM,EAAE,SAAS,EAAEjB,QAAQ,CAAC;IAC3C,IAAIJ,SAAS,CAAC2B,QAAQ,CAACrC,MAAM,CAAC,EAAE;MAC5B,CAACO,EAAE,GAAGP,MAAM,CAACsC,aAAa,MAAM,IAAI,IAAI/B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACgC,WAAW,CAACvC,MAAM,CAAC;IAC3F;EACJ,CAAC,CAAC;AACN;AAEA,SAASI,WAAW,IAAIoC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}