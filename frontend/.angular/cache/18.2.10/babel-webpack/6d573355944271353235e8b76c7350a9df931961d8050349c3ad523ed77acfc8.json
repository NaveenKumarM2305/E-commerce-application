{"ast":null,"code":"import _asyncToGenerator from \"C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { loc, createCallout } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport { FORMS } from '../../ion/RemediationConstants.js';\nimport '../internals/BaseHeader.js';\nimport '../internals/BaseFooter.js';\nimport BaseForm from '../internals/BaseForm.js';\nimport '../internals/BaseFormWithPolling.js';\nimport '../internals/BaseOktaVerifyChallengeView.js';\nimport BaseView from '../internals/BaseView.js';\nimport { createIdpButtons, createCustomButtons } from '../internals/FormInputFactory.js';\nimport fn from '../../../util/CryptoUtil.js';\nimport DeviceFingerprinting from '../utils/DeviceFingerprinting.js';\nimport IdentifierFooter from '../components/IdentifierFooter.js';\nimport Link from '../components/Link.js';\nimport signInWithIdps from './signin/SignInWithIdps.js';\nimport customButtonsView from './signin/CustomButtons.js';\nimport SignInWithDeviceOption from './signin/SignInWithDeviceOption.js';\nimport signInWithWebAuthn from './signin/SignInWithWebAuthn.js';\nimport { isCustomizedI18nKey, getMessageFromBrowserError } from '../../ion/i18nUtils.js';\nimport { getForgotPasswordLink } from '../utils/LinksUtil.js';\nimport fn$1 from '../../../util/CookieUtil.js';\nimport CustomAccessDeniedErrorMessage from './shared/CustomAccessDeniedErrorMessage.js';\nimport Util from '../../../util/Util.js';\nimport webauthn from '../../../util/webauthn.js';\nconst CUSTOM_ACCESS_DENIED_KEY = 'security.access_denied_custom_message';\nconst Body = BaseForm.extend({\n  title: function () {\n    return loc('primaryauth.title', 'login');\n  },\n  save: function () {\n    return loc('oform.next', 'login');\n  },\n  initialize: function () {\n    BaseForm.prototype.initialize.apply(this, arguments);\n    const uiSchema = this.getUISchema();\n    if (uiSchema.find(schema => schema.name === 'credentials.passcode')) {\n      this.save = loc('oie.primaryauth.submit', 'login');\n    }\n\n    // Precedence for pre-filling identifier field:\n    // 1. Use username/identifier from the config.\n    // 2. Use identifier value returned in remediation response (model will have this attr set if it's there)\n    // 3. Use value from the \"remember my username\" cookie.\n    if (this._shouldAddUsername(uiSchema)) {\n      // Set username/identifier from the config (i.e. config.username)\n      this.model.set('identifier', this.settings.get('username'));\n    } else if (!this.model.get('identifier') && this._shouldApplyRememberMyUsername(uiSchema)) {\n      // Use value from cookie if the remediation did not return identifier value.\n      this._applyRememberMyUsername();\n    }\n  },\n  saveForm: function () {\n    // Before the XHR is made for \"identify\", we'll generate one-time use fingerprint via\n    // a hidden-iframe (similar to authn/v1 flows)\n\n    // Ideally this can be added to a \"preSaveForm\" handler - but keeping this here for now.\n    if (!this.settings.get('features.deviceFingerprinting')) {\n      BaseForm.prototype.saveForm.apply(this, arguments);\n      return;\n    }\n\n    // Toggle Form saving status (e.g. disabling save button, etc)\n    this.model.trigger('request');\n\n    // For certain flows, we need to generate a device fingerprint\n    // to determine if we need to send a \"New Device Sign-on Notification\".\n    const authClient = this.settings.getAuthClient();\n    DeviceFingerprinting.generateDeviceFingerprint(authClient, this.$el[0]).then(fingerprint => {\n      this.options.appState.set('deviceFingerprint', fingerprint);\n    }).catch(() => {/* Keep going even if device fingerprint fails */}).finally(() => {\n      BaseForm.prototype.saveForm.apply(this, arguments);\n    });\n  },\n  render: function () {\n    BaseForm.prototype.render.apply(this, arguments);\n\n    // Launch Device Authenticator\n    if (this.options.appState.hasRemediationObject(FORMS.LAUNCH_AUTHENTICATOR)) {\n      this.add(SignInWithDeviceOption, '.o-form-fieldset-container', false, true, {\n        isRequired: false\n      });\n    }\n    if (this.options.appState.hasRemediationObject(FORMS.LAUNCH_WEBAUTHN_AUTHENTICATOR)) {\n      this.add(signInWithWebAuthn, '.o-form-fieldset-container', false, true, {\n        isRequired: false\n      });\n    }\n\n    // add forgot password link and external idps buttons if needed\n    const idpButtons = createIdpButtons(this.options);\n    if (Array.isArray(idpButtons) && idpButtons.length) {\n      // Add the forgot password link before the buttons for multiple IDPs\n      this._addForgotPasswordView();\n      this._addIdpView(idpButtons);\n    }\n    const customButtons = createCustomButtons(this.options.settings);\n    if (Array.isArray(customButtons) && customButtons.length) {\n      this.add(customButtonsView, {\n        selector: '.o-form-button-bar',\n        options: {\n          customButtons: customButtons,\n          addSeparateLine: true\n        }\n      });\n    }\n  },\n  postRender: function () {\n    BaseForm.prototype.postRender.apply(this, arguments);\n    // When a user enters invalid credentials, /introspect returns an error,\n    // along with a user object containing the identifier entered by the user.\n    this.$el.find('.identifier-container').remove();\n    this.getCredentialsAndInvokeAction();\n  },\n  /**\n   * Update UI schemas for customization from .widgetrc.js or Admin Customization settings page.\n   * @returns Array\n   */\n  getUISchema: function () {\n    const schemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    const {\n      settings: settings\n    } = this.options;\n    const identifierExplainLabeli18nKey = 'primaryauth.username.tooltip';\n    const passwordExplainLabeli18nKey = 'primaryauth.password.tooltip';\n    let newSchemas = schemas.map(schema => {\n      let newSchema = {\n        ...schema\n      };\n      if (schema.name === 'identifier') {\n        if (isCustomizedI18nKey(identifierExplainLabeli18nKey, settings)) {\n          newSchema = {\n            ...newSchema,\n            explain: loc(identifierExplainLabeli18nKey, 'login'),\n            'explain-top': true\n          };\n        }\n        const isAutoFillUIChallenge = this.options.appState.hasRemediationObject(FORMS.CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR);\n        // Setting the autocomplete value to 'webauthn' allows the browser to list passkeys alongside usernames\n        const autoCompleteDefaultValue = isAutoFillUIChallenge && webauthn.isConditionalMediationAvailable() ? 'username webauthn' : 'username';\n        // We enable the browser's autocomplete for the identifier input\n        // because we want to allow the user to choose from previously used identifiers.\n        newSchema = {\n          ...newSchema,\n          autoComplete: Util.getAutocompleteValue(this.options.settings, autoCompleteDefaultValue)\n        };\n      } else if (schema.name === 'credentials.passcode') {\n        newSchema = {\n          ...newSchema,\n          autoComplete: Util.getAutocompleteValue(this.options.settings, 'current-password')\n        };\n        if (isCustomizedI18nKey(passwordExplainLabeli18nKey, settings)) {\n          newSchema = {\n            ...newSchema,\n            explain: loc(passwordExplainLabeli18nKey, 'login'),\n            'explain-top': true\n          };\n        }\n      }\n      return newSchema;\n    });\n\n    // If showKeepMeSignedIn is explicitly set to false, we ensure we don't display\n    // the \"Keep me signed in\" checkbox\n    if (this.settings.get('features.showKeepMeSignedIn') === false) {\n      newSchemas = newSchemas.filter(schema => schema.name !== 'rememberMe');\n    }\n    return newSchemas;\n  },\n  showCustomFormErrorCallout: function (error, messages) {\n    var _error$responseJSON, _error$responseJSON$e;\n    if (!(error !== null && error !== void 0 && (_error$responseJSON = error.responseJSON) !== null && _error$responseJSON !== void 0 && (_error$responseJSON$e = _error$responseJSON.errorSummaryKeys) !== null && _error$responseJSON$e !== void 0 && _error$responseJSON$e.includes(CUSTOM_ACCESS_DENIED_KEY))) {\n      return false;\n    }\n    const message = messages === null || messages === void 0 ? void 0 : messages.find(message => message.i18n.key === CUSTOM_ACCESS_DENIED_KEY);\n    if (!message) {\n      return false;\n    }\n    const {\n      errorSummary: errorSummary\n    } = error.responseJSON;\n    const options = {\n      type: 'error',\n      content: new CustomAccessDeniedErrorMessage({\n        message: errorSummary,\n        links: message.links\n      })\n    };\n    this.showMessages(createCallout(options));\n    return true;\n  },\n  remove: function () {\n    BaseForm.prototype.remove.apply(this, arguments);\n    if (this.webauthnAbortController) {\n      this.webauthnAbortController.abort();\n      this.webauthnAbortController = null;\n    }\n  },\n  getCredentialsAndInvokeAction: function () {\n    var _ref = _asyncToGenerator(function* () {\n      var _this$options$appStat;\n      const challengeData = (_this$options$appStat = this.options.appState.get('webauthnAutofillUIChallenge')) === null || _this$options$appStat === void 0 ? void 0 : _this$options$appStat.challengeData;\n      const isPasskeyAutofillAvailable = yield webauthn.isPasskeyAutofillAvailable();\n      if (!challengeData || !isPasskeyAutofillAvailable || typeof AbortController === 'undefined') {\n        return;\n      }\n      const options = oktaUnderscore.extend({}, challengeData, {\n        challenge: fn.strToBin(challengeData.challenge)\n      });\n\n      // There is already a check to make sure the browser supports AbortController\n      // eslint-disable-next-line compat/compat\n      this.webauthnAbortController = new AbortController();\n\n      // There is already a check to make sure the browser supports WebAuthn\n      // eslint-disable-next-line compat/compat\n      navigator.credentials.get({\n        mediation: 'conditional',\n        publicKey: options,\n        signal: this.webauthnAbortController.signal\n      }).then(assertion => {\n        var _assertion$response$u;\n        const userHandle = fn.binToStr((_assertion$response$u = assertion.response.userHandle) !== null && _assertion$response$u !== void 0 ? _assertion$response$u : '');\n        if (oktaUnderscore.isEmpty(userHandle)) {\n          const errorSummary = loc('oie.webauthn.error.invalidPasskey', 'login');\n          this.model.trigger('error', this.model, this._generateErrorObject(errorSummary));\n          return;\n        }\n        const credentials = {\n          clientData: fn.binToStr(assertion.response.clientDataJSON),\n          authenticatorData: fn.binToStr(assertion.response.authenticatorData),\n          signatureData: fn.binToStr(assertion.response.signature),\n          userHandle: userHandle\n        };\n        this.options.appState.trigger('invokeAction', FORMS.CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR, {\n          credentials: credentials\n        });\n      }, error => {\n        // Do not display if it is abort error triggered by code when switching.\n        // this.webauthnAbortController would be null if abort was triggered by code.\n        if (this.webauthnAbortController) {\n          const errorSummary = getMessageFromBrowserError(error);\n          this.model.trigger('error', this.model, this._generateErrorObject(errorSummary));\n        }\n      }).finally(() => {\n        // unset webauthnAbortController on successful authentication or error\n        this.webauthnAbortController = null;\n      });\n    });\n    return function getCredentialsAndInvokeAction() {\n      return _ref.apply(this, arguments);\n    };\n  }(),\n  _generateErrorObject: function (errorSummary) {\n    return {\n      responseJSON: {\n        errorSummary: errorSummary\n      }\n    };\n  },\n  _addForgotPasswordView: function () {\n    const forgotPasswordLink = getForgotPasswordLink(this.options.appState, this.options.settings);\n    if (forgotPasswordLink.length) {\n      this.add('<div class=\"links-primary\"></div>', {\n        selector: '.o-form-button-bar'\n      });\n      this.add(Link, {\n        selector: '.links-primary',\n        options: forgotPasswordLink[0]\n      });\n    }\n  },\n  _addIdpView: function (idpButtons) {\n    // We check the 'idpDisplay' option config to determine whether to render the idp buttons\n    // above or below the login fields\n    const idpDisplay = this.options.settings.get('idpDisplay');\n    const isPrimaryIdpDisplay = idpDisplay && idpDisplay.toUpperCase() === 'PRIMARY';\n    this.add(signInWithIdps, {\n      prepend: isPrimaryIdpDisplay,\n      selector: isPrimaryIdpDisplay ? '.o-form-fieldset-container' : '.o-form-button-bar',\n      options: {\n        idpButtons: idpButtons,\n        isPrimaryIdpDisplay: isPrimaryIdpDisplay\n      }\n    });\n  },\n  _shouldAddUsername: function (uiSchema) {\n    // We pre-populate the identifier/username field only if we're in an identifier\n    // form and if the option is passed in.\n    return uiSchema.find(schema => schema.name === 'identifier') && this.settings.get('username');\n  },\n  _shouldApplyRememberMyUsername: function (uiSchema) {\n    return uiSchema.find(schema => schema.name === 'identifier') && this.settings.get('features.rememberMe');\n  },\n  /**\n   * When \"Remember My Username\" is enabled, we pre-fill the identifier\n   * field with the saved userName cookie. The cookie would have been originally\n   * saved when submitting the form previously.\n   */\n  _applyRememberMyUsername: function () {\n    const cookieUsername = fn$1.getCookieUsername();\n    if (cookieUsername) {\n      this.model.set('identifier', cookieUsername);\n    }\n  }\n});\nvar IdentifierView = BaseView.extend({\n  Body: Body,\n  createModelClass: function () {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n\n    // customize pre-submit form validation inline error messages\n    const identifierRequiredi18nKey = 'error.username.required';\n    const passwordRequiredi18nKey = 'error.password.required';\n    const props = ModelClass.prototype.props;\n    const validate = attr => {\n      const inlineErrors = {};\n      const isEmptyIdentifier = props['identifier'] && !(attr !== null && attr !== void 0 && attr['identifier']);\n      const isEmptyPassword = props['credentials.passcode'] && !(attr !== null && attr !== void 0 && attr['credentials.passcode']);\n      if (isEmptyIdentifier && isCustomizedI18nKey(identifierRequiredi18nKey, this.settings)) {\n        inlineErrors['identifier'] = loc(identifierRequiredi18nKey, 'login');\n      }\n      if (isEmptyPassword && isCustomizedI18nKey(passwordRequiredi18nKey, this.settings)) {\n        inlineErrors['credentials.passcode'] = loc(passwordRequiredi18nKey, 'login');\n      }\n      return inlineErrors;\n    };\n    return ModelClass.extend({\n      validate: validate\n    });\n  },\n  initialize: function () {\n    // Override Footer by overriding showForgotPasswordLink method\n    this.Footer = IdentifierFooter.extend({\n      showForgotPasswordLink: () => {\n        // We don't add the forgot password link in the footer if SIW renders multi IDPs,\n        // instead in that case we add it before the IDP buttons in IdentifierView as primary links.\n        const idpButtons = createIdpButtons(this.options);\n        return !this.options.appState.isIdentifierOnlyView() && (!Array.isArray(idpButtons) || idpButtons.length === 0);\n      }\n    });\n  },\n  postRender: function () {\n    BaseView.prototype.postRender.apply(this, arguments);\n\n    // If user entered identifier is not found, API sends back a message with a link to sign up\n    // This is the click handler for that link\n    const appState = this.options.appState;\n    this.$el.find('.js-sign-up').click(function () {\n      appState.trigger('invokeAction', FORMS.SELECT_ENROLL_PROFILE);\n      return false;\n    });\n  }\n});\nexport { IdentifierView as default };","map":{"version":3,"names":["loc","createCallout","oktaUnderscore","FORMS","BaseForm","BaseView","createIdpButtons","createCustomButtons","fn","DeviceFingerprinting","IdentifierFooter","Link","signInWithIdps","customButtonsView","SignInWithDeviceOption","signInWithWebAuthn","isCustomizedI18nKey","getMessageFromBrowserError","getForgotPasswordLink","fn$1","CustomAccessDeniedErrorMessage","Util","webauthn","CUSTOM_ACCESS_DENIED_KEY","Body","extend","title","save","initialize","prototype","apply","arguments","uiSchema","getUISchema","find","schema","name","_shouldAddUsername","model","set","settings","get","_shouldApplyRememberMyUsername","_applyRememberMyUsername","saveForm","trigger","authClient","getAuthClient","generateDeviceFingerprint","$el","then","fingerprint","options","appState","catch","finally","render","hasRemediationObject","LAUNCH_AUTHENTICATOR","add","isRequired","LAUNCH_WEBAUTHN_AUTHENTICATOR","idpButtons","Array","isArray","length","_addForgotPasswordView","_addIdpView","customButtons","selector","addSeparateLine","postRender","remove","getCredentialsAndInvokeAction","schemas","identifierExplainLabeli18nKey","passwordExplainLabeli18nKey","newSchemas","map","newSchema","explain","isAutoFillUIChallenge","CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR","autoCompleteDefaultValue","isConditionalMediationAvailable","autoComplete","getAutocompleteValue","filter","showCustomFormErrorCallout","error","messages","_error$responseJSON","_error$responseJSON$e","responseJSON","errorSummaryKeys","includes","message","i18n","key","errorSummary","type","content","links","showMessages","webauthnAbortController","abort","_ref","_asyncToGenerator","_this$options$appStat","challengeData","isPasskeyAutofillAvailable","AbortController","challenge","strToBin","navigator","credentials","mediation","publicKey","signal","assertion","_assertion$response$u","userHandle","binToStr","response","isEmpty","_generateErrorObject","clientData","clientDataJSON","authenticatorData","signatureData","signature","forgotPasswordLink","idpDisplay","isPrimaryIdpDisplay","toUpperCase","prepend","cookieUsername","getCookieUsername","IdentifierView","createModelClass","ModelClass","identifierRequiredi18nKey","passwordRequiredi18nKey","props","validate","attr","inlineErrors","isEmptyIdentifier","isEmptyPassword","Footer","showForgotPasswordLink","isIdentifierOnlyView","click","SELECT_ENROLL_PROFILE","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/views/IdentifierView.js"],"sourcesContent":["import { loc, createCallout } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport { FORMS } from '../../ion/RemediationConstants.js';\nimport '../internals/BaseHeader.js';\nimport '../internals/BaseFooter.js';\nimport BaseForm from '../internals/BaseForm.js';\nimport '../internals/BaseFormWithPolling.js';\nimport '../internals/BaseOktaVerifyChallengeView.js';\nimport BaseView from '../internals/BaseView.js';\nimport { createIdpButtons, createCustomButtons } from '../internals/FormInputFactory.js';\nimport fn from '../../../util/CryptoUtil.js';\nimport DeviceFingerprinting from '../utils/DeviceFingerprinting.js';\nimport IdentifierFooter from '../components/IdentifierFooter.js';\nimport Link from '../components/Link.js';\nimport signInWithIdps from './signin/SignInWithIdps.js';\nimport customButtonsView from './signin/CustomButtons.js';\nimport SignInWithDeviceOption from './signin/SignInWithDeviceOption.js';\nimport signInWithWebAuthn from './signin/SignInWithWebAuthn.js';\nimport { isCustomizedI18nKey, getMessageFromBrowserError } from '../../ion/i18nUtils.js';\nimport { getForgotPasswordLink } from '../utils/LinksUtil.js';\nimport fn$1 from '../../../util/CookieUtil.js';\nimport CustomAccessDeniedErrorMessage from './shared/CustomAccessDeniedErrorMessage.js';\nimport Util from '../../../util/Util.js';\nimport webauthn from '../../../util/webauthn.js';\n\nconst CUSTOM_ACCESS_DENIED_KEY = 'security.access_denied_custom_message';\nconst Body = BaseForm.extend({\n  title: function () {\n    return loc('primaryauth.title', 'login');\n  },\n  save: function () {\n    return loc('oform.next', 'login');\n  },\n  initialize: function () {\n    BaseForm.prototype.initialize.apply(this, arguments);\n    const uiSchema = this.getUISchema();\n    if (uiSchema.find(schema => schema.name === 'credentials.passcode')) {\n      this.save = loc('oie.primaryauth.submit', 'login');\n    }\n\n    // Precedence for pre-filling identifier field:\n    // 1. Use username/identifier from the config.\n    // 2. Use identifier value returned in remediation response (model will have this attr set if it's there)\n    // 3. Use value from the \"remember my username\" cookie.\n    if (this._shouldAddUsername(uiSchema)) {\n      // Set username/identifier from the config (i.e. config.username)\n      this.model.set('identifier', this.settings.get('username'));\n    } else if (!this.model.get('identifier') && this._shouldApplyRememberMyUsername(uiSchema)) {\n      // Use value from cookie if the remediation did not return identifier value.\n      this._applyRememberMyUsername();\n    }\n  },\n  saveForm: function () {\n    // Before the XHR is made for \"identify\", we'll generate one-time use fingerprint via\n    // a hidden-iframe (similar to authn/v1 flows)\n\n    // Ideally this can be added to a \"preSaveForm\" handler - but keeping this here for now.\n    if (!this.settings.get('features.deviceFingerprinting')) {\n      BaseForm.prototype.saveForm.apply(this, arguments);\n      return;\n    }\n\n    // Toggle Form saving status (e.g. disabling save button, etc)\n    this.model.trigger('request');\n\n    // For certain flows, we need to generate a device fingerprint\n    // to determine if we need to send a \"New Device Sign-on Notification\".\n    const authClient = this.settings.getAuthClient();\n    DeviceFingerprinting.generateDeviceFingerprint(authClient, this.$el[0]).then(fingerprint => {\n      this.options.appState.set('deviceFingerprint', fingerprint);\n    }).catch(() => {/* Keep going even if device fingerprint fails */}).finally(() => {\n      BaseForm.prototype.saveForm.apply(this, arguments);\n    });\n  },\n  render: function () {\n    BaseForm.prototype.render.apply(this, arguments);\n\n    // Launch Device Authenticator\n    if (this.options.appState.hasRemediationObject(FORMS.LAUNCH_AUTHENTICATOR)) {\n      this.add(SignInWithDeviceOption, '.o-form-fieldset-container', false, true, {\n        isRequired: false\n      });\n    }\n    if (this.options.appState.hasRemediationObject(FORMS.LAUNCH_WEBAUTHN_AUTHENTICATOR)) {\n      this.add(signInWithWebAuthn, '.o-form-fieldset-container', false, true, {\n        isRequired: false\n      });\n    }\n\n    // add forgot password link and external idps buttons if needed\n    const idpButtons = createIdpButtons(this.options);\n    if (Array.isArray(idpButtons) && idpButtons.length) {\n      // Add the forgot password link before the buttons for multiple IDPs\n      this._addForgotPasswordView();\n      this._addIdpView(idpButtons);\n    }\n    const customButtons = createCustomButtons(this.options.settings);\n    if (Array.isArray(customButtons) && customButtons.length) {\n      this.add(customButtonsView, {\n        selector: '.o-form-button-bar',\n        options: {\n          customButtons: customButtons,\n          addSeparateLine: true\n        }\n      });\n    }\n  },\n  postRender: function () {\n    BaseForm.prototype.postRender.apply(this, arguments);\n    // When a user enters invalid credentials, /introspect returns an error,\n    // along with a user object containing the identifier entered by the user.\n    this.$el.find('.identifier-container').remove();\n    this.getCredentialsAndInvokeAction();\n  },\n  /**\n   * Update UI schemas for customization from .widgetrc.js or Admin Customization settings page.\n   * @returns Array\n   */\n  getUISchema: function () {\n    const schemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    const {\n      settings: settings\n    } = this.options;\n    const identifierExplainLabeli18nKey = 'primaryauth.username.tooltip';\n    const passwordExplainLabeli18nKey = 'primaryauth.password.tooltip';\n    let newSchemas = schemas.map(schema => {\n      let newSchema = {\n        ...schema\n      };\n      if (schema.name === 'identifier') {\n        if (isCustomizedI18nKey(identifierExplainLabeli18nKey, settings)) {\n          newSchema = {\n            ...newSchema,\n            explain: loc(identifierExplainLabeli18nKey, 'login'),\n            'explain-top': true\n          };\n        }\n        const isAutoFillUIChallenge = this.options.appState.hasRemediationObject(FORMS.CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR);\n        // Setting the autocomplete value to 'webauthn' allows the browser to list passkeys alongside usernames\n        const autoCompleteDefaultValue = isAutoFillUIChallenge && webauthn.isConditionalMediationAvailable() ? 'username webauthn' : 'username';\n        // We enable the browser's autocomplete for the identifier input\n        // because we want to allow the user to choose from previously used identifiers.\n        newSchema = {\n          ...newSchema,\n          autoComplete: Util.getAutocompleteValue(this.options.settings, autoCompleteDefaultValue)\n        };\n      } else if (schema.name === 'credentials.passcode') {\n        newSchema = {\n          ...newSchema,\n          autoComplete: Util.getAutocompleteValue(this.options.settings, 'current-password')\n        };\n        if (isCustomizedI18nKey(passwordExplainLabeli18nKey, settings)) {\n          newSchema = {\n            ...newSchema,\n            explain: loc(passwordExplainLabeli18nKey, 'login'),\n            'explain-top': true\n          };\n        }\n      }\n      return newSchema;\n    });\n\n    // If showKeepMeSignedIn is explicitly set to false, we ensure we don't display\n    // the \"Keep me signed in\" checkbox\n    if (this.settings.get('features.showKeepMeSignedIn') === false) {\n      newSchemas = newSchemas.filter(schema => schema.name !== 'rememberMe');\n    }\n    return newSchemas;\n  },\n  showCustomFormErrorCallout: function (error, messages) {\n    var _error$responseJSON, _error$responseJSON$e;\n    if (!(error !== null && error !== void 0 && (_error$responseJSON = error.responseJSON) !== null && _error$responseJSON !== void 0 && (_error$responseJSON$e = _error$responseJSON.errorSummaryKeys) !== null && _error$responseJSON$e !== void 0 && _error$responseJSON$e.includes(CUSTOM_ACCESS_DENIED_KEY))) {\n      return false;\n    }\n    const message = messages === null || messages === void 0 ? void 0 : messages.find(message => message.i18n.key === CUSTOM_ACCESS_DENIED_KEY);\n    if (!message) {\n      return false;\n    }\n    const {\n      errorSummary: errorSummary\n    } = error.responseJSON;\n    const options = {\n      type: 'error',\n      content: new CustomAccessDeniedErrorMessage({\n        message: errorSummary,\n        links: message.links\n      })\n    };\n    this.showMessages(createCallout(options));\n    return true;\n  },\n  remove: function () {\n    BaseForm.prototype.remove.apply(this, arguments);\n    if (this.webauthnAbortController) {\n      this.webauthnAbortController.abort();\n      this.webauthnAbortController = null;\n    }\n  },\n  getCredentialsAndInvokeAction: async function () {\n    var _this$options$appStat;\n    const challengeData = (_this$options$appStat = this.options.appState.get('webauthnAutofillUIChallenge')) === null || _this$options$appStat === void 0 ? void 0 : _this$options$appStat.challengeData;\n    const isPasskeyAutofillAvailable = await webauthn.isPasskeyAutofillAvailable();\n    if (!challengeData || !isPasskeyAutofillAvailable || typeof AbortController === 'undefined') {\n      return;\n    }\n    const options = oktaUnderscore.extend({}, challengeData, {\n      challenge: fn.strToBin(challengeData.challenge)\n    });\n\n    // There is already a check to make sure the browser supports AbortController\n    // eslint-disable-next-line compat/compat\n    this.webauthnAbortController = new AbortController();\n\n    // There is already a check to make sure the browser supports WebAuthn\n    // eslint-disable-next-line compat/compat\n    navigator.credentials.get({\n      mediation: 'conditional',\n      publicKey: options,\n      signal: this.webauthnAbortController.signal\n    }).then(assertion => {\n      var _assertion$response$u;\n      const userHandle = fn.binToStr((_assertion$response$u = assertion.response.userHandle) !== null && _assertion$response$u !== void 0 ? _assertion$response$u : '');\n      if (oktaUnderscore.isEmpty(userHandle)) {\n        const errorSummary = loc('oie.webauthn.error.invalidPasskey', 'login');\n        this.model.trigger('error', this.model, this._generateErrorObject(errorSummary));\n        return;\n      }\n      const credentials = {\n        clientData: fn.binToStr(assertion.response.clientDataJSON),\n        authenticatorData: fn.binToStr(assertion.response.authenticatorData),\n        signatureData: fn.binToStr(assertion.response.signature),\n        userHandle: userHandle\n      };\n      this.options.appState.trigger('invokeAction', FORMS.CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR, {\n        credentials: credentials\n      });\n    }, error => {\n      // Do not display if it is abort error triggered by code when switching.\n      // this.webauthnAbortController would be null if abort was triggered by code.\n      if (this.webauthnAbortController) {\n        const errorSummary = getMessageFromBrowserError(error);\n        this.model.trigger('error', this.model, this._generateErrorObject(errorSummary));\n      }\n    }).finally(() => {\n      // unset webauthnAbortController on successful authentication or error\n      this.webauthnAbortController = null;\n    });\n  },\n  _generateErrorObject: function (errorSummary) {\n    return {\n      responseJSON: {\n        errorSummary: errorSummary\n      }\n    };\n  },\n  _addForgotPasswordView: function () {\n    const forgotPasswordLink = getForgotPasswordLink(this.options.appState, this.options.settings);\n    if (forgotPasswordLink.length) {\n      this.add('<div class=\"links-primary\"></div>', {\n        selector: '.o-form-button-bar'\n      });\n      this.add(Link, {\n        selector: '.links-primary',\n        options: forgotPasswordLink[0]\n      });\n    }\n  },\n  _addIdpView: function (idpButtons) {\n    // We check the 'idpDisplay' option config to determine whether to render the idp buttons\n    // above or below the login fields\n    const idpDisplay = this.options.settings.get('idpDisplay');\n    const isPrimaryIdpDisplay = idpDisplay && idpDisplay.toUpperCase() === 'PRIMARY';\n    this.add(signInWithIdps, {\n      prepend: isPrimaryIdpDisplay,\n      selector: isPrimaryIdpDisplay ? '.o-form-fieldset-container' : '.o-form-button-bar',\n      options: {\n        idpButtons: idpButtons,\n        isPrimaryIdpDisplay: isPrimaryIdpDisplay\n      }\n    });\n  },\n  _shouldAddUsername: function (uiSchema) {\n    // We pre-populate the identifier/username field only if we're in an identifier\n    // form and if the option is passed in.\n    return uiSchema.find(schema => schema.name === 'identifier') && this.settings.get('username');\n  },\n  _shouldApplyRememberMyUsername: function (uiSchema) {\n    return uiSchema.find(schema => schema.name === 'identifier') && this.settings.get('features.rememberMe');\n  },\n  /**\n   * When \"Remember My Username\" is enabled, we pre-fill the identifier\n   * field with the saved userName cookie. The cookie would have been originally\n   * saved when submitting the form previously.\n   */\n  _applyRememberMyUsername: function () {\n    const cookieUsername = fn$1.getCookieUsername();\n    if (cookieUsername) {\n      this.model.set('identifier', cookieUsername);\n    }\n  }\n});\nvar IdentifierView = BaseView.extend({\n  Body: Body,\n  createModelClass: function () {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n\n    // customize pre-submit form validation inline error messages\n    const identifierRequiredi18nKey = 'error.username.required';\n    const passwordRequiredi18nKey = 'error.password.required';\n    const props = ModelClass.prototype.props;\n    const validate = attr => {\n      const inlineErrors = {};\n      const isEmptyIdentifier = props['identifier'] && !(attr !== null && attr !== void 0 && attr['identifier']);\n      const isEmptyPassword = props['credentials.passcode'] && !(attr !== null && attr !== void 0 && attr['credentials.passcode']);\n      if (isEmptyIdentifier && isCustomizedI18nKey(identifierRequiredi18nKey, this.settings)) {\n        inlineErrors['identifier'] = loc(identifierRequiredi18nKey, 'login');\n      }\n      if (isEmptyPassword && isCustomizedI18nKey(passwordRequiredi18nKey, this.settings)) {\n        inlineErrors['credentials.passcode'] = loc(passwordRequiredi18nKey, 'login');\n      }\n      return inlineErrors;\n    };\n    return ModelClass.extend({\n      validate: validate\n    });\n  },\n  initialize: function () {\n    // Override Footer by overriding showForgotPasswordLink method\n    this.Footer = IdentifierFooter.extend({\n      showForgotPasswordLink: () => {\n        // We don't add the forgot password link in the footer if SIW renders multi IDPs,\n        // instead in that case we add it before the IDP buttons in IdentifierView as primary links.\n        const idpButtons = createIdpButtons(this.options);\n        return !this.options.appState.isIdentifierOnlyView() && (!Array.isArray(idpButtons) || idpButtons.length === 0);\n      }\n    });\n  },\n  postRender: function () {\n    BaseView.prototype.postRender.apply(this, arguments);\n\n    // If user entered identifier is not found, API sends back a message with a link to sign up\n    // This is the click handler for that link\n    const appState = this.options.appState;\n    this.$el.find('.js-sign-up').click(function () {\n      appState.trigger('invokeAction', FORMS.SELECT_ENROLL_PROFILE);\n      return false;\n    });\n  }\n});\n\nexport { IdentifierView as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}