{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createTransactionManager } from '../oidc/TransactionManager.js';\nimport { isRawIdxResponse } from './types/idx-js.js';\nfunction createIdxTransactionManager() {\n  const TransactionManager = createTransactionManager();\n  return class IdxTransactionManager extends TransactionManager {\n    constructor(options) {\n      super(options);\n    }\n    clear(options = {}) {\n      super.clear(options);\n      if (options.clearIdxResponse !== false) {\n        this.clearIdxResponse();\n      }\n    }\n    saveIdxResponse(data) {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return;\n      }\n      storage.setStorage(data);\n    }\n    loadIdxResponse(options) {\n      if (!this.saveLastResponse) {\n        return null;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return null;\n      }\n      const storedValue = storage.getStorage();\n      if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n        return null;\n      }\n      if (options) {\n        const {\n          stateHandle,\n          interactionHandle\n        } = options;\n        if (!options.useGenericRemediator && stateHandle && storedValue.stateHandle !== stateHandle) {\n          return null;\n        }\n        if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n          return null;\n        }\n      }\n      return storedValue;\n    }\n    clearIdxResponse() {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      storage === null || storage === void 0 ? void 0 : storage.clearStorage();\n    }\n  };\n}\nexport { createIdxTransactionManager };","map":{"version":3,"names":["createTransactionManager","isRawIdxResponse","createIdxTransactionManager","TransactionManager","IdxTransactionManager","constructor","options","clear","clearIdxResponse","saveIdxResponse","data","saveLastResponse","storage","storageManager","getIdxResponseStorage","setStorage","loadIdxResponse","storedValue","getStorage","rawIdxResponse","stateHandle","interactionHandle","useGenericRemediator","clearStorage"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/IdxTransactionManager.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createTransactionManager } from '../oidc/TransactionManager.js';\nimport { isRawIdxResponse } from './types/idx-js.js';\n\nfunction createIdxTransactionManager() {\n    const TransactionManager = createTransactionManager();\n    return class IdxTransactionManager extends TransactionManager {\n        constructor(options) {\n            super(options);\n        }\n        clear(options = {}) {\n            super.clear(options);\n            if (options.clearIdxResponse !== false) {\n                this.clearIdxResponse();\n            }\n        }\n        saveIdxResponse(data) {\n            if (!this.saveLastResponse) {\n                return;\n            }\n            const storage = this.storageManager.getIdxResponseStorage();\n            if (!storage) {\n                return;\n            }\n            storage.setStorage(data);\n        }\n        loadIdxResponse(options) {\n            if (!this.saveLastResponse) {\n                return null;\n            }\n            const storage = this.storageManager.getIdxResponseStorage();\n            if (!storage) {\n                return null;\n            }\n            const storedValue = storage.getStorage();\n            if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n                return null;\n            }\n            if (options) {\n                const { stateHandle, interactionHandle } = options;\n                if (!options.useGenericRemediator && stateHandle && storedValue.stateHandle !== stateHandle) {\n                    return null;\n                }\n                if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n                    return null;\n                }\n            }\n            return storedValue;\n        }\n        clearIdxResponse() {\n            if (!this.saveLastResponse) {\n                return;\n            }\n            const storage = this.storageManager.getIdxResponseStorage();\n            storage === null || storage === void 0 ? void 0 : storage.clearStorage();\n        }\n    };\n}\n\nexport { createIdxTransactionManager };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,gBAAgB,QAAQ,mBAAmB;AAEpD,SAASC,2BAA2BA,CAAA,EAAG;EACnC,MAAMC,kBAAkB,GAAGH,wBAAwB,CAAC,CAAC;EACrD,OAAO,MAAMI,qBAAqB,SAASD,kBAAkB,CAAC;IAC1DE,WAAWA,CAACC,OAAO,EAAE;MACjB,KAAK,CAACA,OAAO,CAAC;IAClB;IACAC,KAAKA,CAACD,OAAO,GAAG,CAAC,CAAC,EAAE;MAChB,KAAK,CAACC,KAAK,CAACD,OAAO,CAAC;MACpB,IAAIA,OAAO,CAACE,gBAAgB,KAAK,KAAK,EAAE;QACpC,IAAI,CAACA,gBAAgB,CAAC,CAAC;MAC3B;IACJ;IACAC,eAAeA,CAACC,IAAI,EAAE;MAClB,IAAI,CAAC,IAAI,CAACC,gBAAgB,EAAE;QACxB;MACJ;MACA,MAAMC,OAAO,GAAG,IAAI,CAACC,cAAc,CAACC,qBAAqB,CAAC,CAAC;MAC3D,IAAI,CAACF,OAAO,EAAE;QACV;MACJ;MACAA,OAAO,CAACG,UAAU,CAACL,IAAI,CAAC;IAC5B;IACAM,eAAeA,CAACV,OAAO,EAAE;MACrB,IAAI,CAAC,IAAI,CAACK,gBAAgB,EAAE;QACxB,OAAO,IAAI;MACf;MACA,MAAMC,OAAO,GAAG,IAAI,CAACC,cAAc,CAACC,qBAAqB,CAAC,CAAC;MAC3D,IAAI,CAACF,OAAO,EAAE;QACV,OAAO,IAAI;MACf;MACA,MAAMK,WAAW,GAAGL,OAAO,CAACM,UAAU,CAAC,CAAC;MACxC,IAAI,CAACD,WAAW,IAAI,CAAChB,gBAAgB,CAACgB,WAAW,CAACE,cAAc,CAAC,EAAE;QAC/D,OAAO,IAAI;MACf;MACA,IAAIb,OAAO,EAAE;QACT,MAAM;UAAEc,WAAW;UAAEC;QAAkB,CAAC,GAAGf,OAAO;QAClD,IAAI,CAACA,OAAO,CAACgB,oBAAoB,IAAIF,WAAW,IAAIH,WAAW,CAACG,WAAW,KAAKA,WAAW,EAAE;UACzF,OAAO,IAAI;QACf;QACA,IAAIC,iBAAiB,IAAIJ,WAAW,CAACI,iBAAiB,KAAKA,iBAAiB,EAAE;UAC1E,OAAO,IAAI;QACf;MACJ;MACA,OAAOJ,WAAW;IACtB;IACAT,gBAAgBA,CAAA,EAAG;MACf,IAAI,CAAC,IAAI,CAACG,gBAAgB,EAAE;QACxB;MACJ;MACA,MAAMC,OAAO,GAAG,IAAI,CAACC,cAAc,CAACC,qBAAqB,CAAC,CAAC;MAC3DF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACW,YAAY,CAAC,CAAC;IAC5E;EACJ,CAAC;AACL;AAEA,SAASrB,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}