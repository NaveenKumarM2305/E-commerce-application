{"ast":null,"code":"import { loc } from './loc.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst fn = {};\nfn.getU2fEnrollErrorMessageKeyByCode = function (errorCode) {\n  switch (errorCode) {\n    default:\n    case 1:\n      return 'u2f.error.other';\n    case 2:\n    case 3:\n      return 'u2f.error.badRequest';\n    case 4:\n      return 'u2f.error.unsupported';\n    case 5:\n      return 'u2f.error.timeout';\n  }\n};\nfn.getU2fVerifyErrorMessageKeyByCode = function (errorCode, isOneFactor) {\n  switch (errorCode) {\n    case 1:\n      // OTHER_ERROR\n      return isOneFactor ? 'u2f.error.other.oneFactor' : 'u2f.error.other';\n    case 2: // BAD_REQUEST\n    case 3:\n      // CONFIGURATION_UNSUPPORTED\n      return isOneFactor ? 'u2f.error.badRequest.oneFactor' : 'u2f.error.badRequest';\n    case 4:\n      // DEVICE_INELIGIBLE\n      return isOneFactor ? 'u2f.error.unsupported.oneFactor' : 'u2f.error.unsupported';\n    case 5:\n      // TIMEOUT\n      return 'u2f.error.timeout';\n  }\n};\nfn.getU2fEnrollErrorMessageByCode = function (errorCode) {\n  return loc(fn.getU2fEnrollErrorMessageKeyByCode(errorCode), 'login');\n};\nfn.getU2fVerifyErrorMessageByCode = function (errorCode, isOneFactor) {\n  return loc(fn.getU2fVerifyErrorMessageKeyByCode(errorCode, isOneFactor), 'login');\n};\nfn.getU2fVersion = function () {\n  return 'U2F_V2';\n};\nfn.isU2fAvailable = function () {\n  return Object.prototype.hasOwnProperty.call(window, 'u2f');\n};\nexport { fn as default };","map":{"version":3,"names":["loc","fn","getU2fEnrollErrorMessageKeyByCode","errorCode","getU2fVerifyErrorMessageKeyByCode","isOneFactor","getU2fEnrollErrorMessageByCode","getU2fVerifyErrorMessageByCode","getU2fVersion","isU2fAvailable","Object","prototype","hasOwnProperty","call","window","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/util/FidoUtil.js"],"sourcesContent":["import { loc } from './loc.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst fn = {};\nfn.getU2fEnrollErrorMessageKeyByCode = function (errorCode) {\n  switch (errorCode) {\n    default:\n    case 1:\n      return 'u2f.error.other';\n    case 2:\n    case 3:\n      return 'u2f.error.badRequest';\n    case 4:\n      return 'u2f.error.unsupported';\n    case 5:\n      return 'u2f.error.timeout';\n  }\n};\nfn.getU2fVerifyErrorMessageKeyByCode = function (errorCode, isOneFactor) {\n  switch (errorCode) {\n    case 1:\n      // OTHER_ERROR\n      return isOneFactor ? 'u2f.error.other.oneFactor' : 'u2f.error.other';\n    case 2: // BAD_REQUEST\n    case 3:\n      // CONFIGURATION_UNSUPPORTED\n      return isOneFactor ? 'u2f.error.badRequest.oneFactor' : 'u2f.error.badRequest';\n    case 4:\n      // DEVICE_INELIGIBLE\n      return isOneFactor ? 'u2f.error.unsupported.oneFactor' : 'u2f.error.unsupported';\n    case 5:\n      // TIMEOUT\n      return 'u2f.error.timeout';\n  }\n};\nfn.getU2fEnrollErrorMessageByCode = function (errorCode) {\n  return loc(fn.getU2fEnrollErrorMessageKeyByCode(errorCode), 'login');\n};\nfn.getU2fVerifyErrorMessageByCode = function (errorCode, isOneFactor) {\n  return loc(fn.getU2fVerifyErrorMessageKeyByCode(errorCode, isOneFactor), 'login');\n};\nfn.getU2fVersion = function () {\n  return 'U2F_V2';\n};\nfn.isU2fAvailable = function () {\n  return Object.prototype.hasOwnProperty.call(window, 'u2f');\n};\n\nexport { fn as default };\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,UAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,EAAE,GAAG,CAAC,CAAC;AACbA,EAAE,CAACC,iCAAiC,GAAG,UAAUC,SAAS,EAAE;EAC1D,QAAQA,SAAS;IACf;IACA,KAAK,CAAC;MACJ,OAAO,iBAAiB;IAC1B,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,sBAAsB;IAC/B,KAAK,CAAC;MACJ,OAAO,uBAAuB;IAChC,KAAK,CAAC;MACJ,OAAO,mBAAmB;EAC9B;AACF,CAAC;AACDF,EAAE,CAACG,iCAAiC,GAAG,UAAUD,SAAS,EAAEE,WAAW,EAAE;EACvE,QAAQF,SAAS;IACf,KAAK,CAAC;MACJ;MACA,OAAOE,WAAW,GAAG,2BAA2B,GAAG,iBAAiB;IACtE,KAAK,CAAC,CAAC,CAAC;IACR,KAAK,CAAC;MACJ;MACA,OAAOA,WAAW,GAAG,gCAAgC,GAAG,sBAAsB;IAChF,KAAK,CAAC;MACJ;MACA,OAAOA,WAAW,GAAG,iCAAiC,GAAG,uBAAuB;IAClF,KAAK,CAAC;MACJ;MACA,OAAO,mBAAmB;EAC9B;AACF,CAAC;AACDJ,EAAE,CAACK,8BAA8B,GAAG,UAAUH,SAAS,EAAE;EACvD,OAAOH,GAAG,CAACC,EAAE,CAACC,iCAAiC,CAACC,SAAS,CAAC,EAAE,OAAO,CAAC;AACtE,CAAC;AACDF,EAAE,CAACM,8BAA8B,GAAG,UAAUJ,SAAS,EAAEE,WAAW,EAAE;EACpE,OAAOL,GAAG,CAACC,EAAE,CAACG,iCAAiC,CAACD,SAAS,EAAEE,WAAW,CAAC,EAAE,OAAO,CAAC;AACnF,CAAC;AACDJ,EAAE,CAACO,aAAa,GAAG,YAAY;EAC7B,OAAO,QAAQ;AACjB,CAAC;AACDP,EAAE,CAACQ,cAAc,GAAG,YAAY;EAC9B,OAAOC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACC,MAAM,EAAE,KAAK,CAAC;AAC5D,CAAC;AAED,SAASb,EAAE,IAAIc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}