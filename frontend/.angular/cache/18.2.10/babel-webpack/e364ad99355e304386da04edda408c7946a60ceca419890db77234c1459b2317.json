{"ast":null,"code":"import _asyncToGenerator from \"C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Q from 'q';\nimport fn from './FidoUtil.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction adaptToOkta(promise) {\n  return new Q(promise);\n}\nfunction makeCredential(accountInfo, cryptoParams, challenge) {\n  cryptoParams = cryptoParams.map(function (param) {\n    return {\n      type: 'FIDO_2_0',\n      algorithm: param.algorithm\n    };\n  });\n  const promise = window.msCredentials.makeCredential(accountInfo, cryptoParams, challenge).then(function (cred) {\n    return Object.freeze({\n      credential: {\n        id: cred.id\n      },\n      publicKey: JSON.parse(cred.publicKey),\n      attestation: cred.attestation\n    });\n  });\n  return adaptToOkta(promise);\n}\nfunction getAssertion(challenge, allowList) {\n  const accept = allowList.map(function (item) {\n    return {\n      type: 'FIDO_2_0',\n      id: item.id\n    };\n  });\n  const filters = {\n    accept: accept\n  };\n  const promise = window.msCredentials.getAssertion(challenge, filters).then(function (attestation) {\n    const signature = attestation.signature;\n    return Object.freeze({\n      credential: {\n        id: attestation.id\n      },\n      clientData: signature.clientData,\n      authenticatorData: signature.authnrData,\n      signature: signature.signature\n    });\n  });\n  return adaptToOkta(promise);\n}\nfunction processWebAuthnResponse(inputFunction, context) {\n  if (typeof inputFunction === 'undefined') {\n    return null;\n  }\n  const responseValue = inputFunction.apply(context);\n  if (responseValue === undefined || responseValue === null) {\n    return null;\n  }\n  return JSON.stringify(responseValue);\n}\nvar webauthn = {\n  makeCredential: makeCredential,\n  getAssertion: getAssertion,\n  processWebAuthnResponse: processWebAuthnResponse,\n  isAvailable: function () {\n    return Object.prototype.hasOwnProperty.call(window, 'msCredentials');\n  },\n  isNewApiAvailable: function () {\n    // navigator.credentials is not supported in IE11\n    // eslint-disable-next-line compat/compat\n    return navigator && navigator.credentials && navigator.credentials.create;\n  },\n  isWebauthnOrU2fAvailable: function () {\n    return this.isNewApiAvailable() || fn.isU2fAvailable();\n  },\n  isConditionalMediationAvailable: function () {\n    // eslint-disable-next-line compat/compat, no-undef\n    return typeof PublicKeyCredential !== 'undefined'\n    // eslint-disable-next-line compat/compat, no-undef\n    && typeof PublicKeyCredential.isConditionalMediationAvailable !== 'undefined';\n  },\n  // checks if the browser supports passkey autofill by making sure it supports conditional mediation\n  // https://passkeys.dev/docs/reference/terms/#autofill-ui\n  isPasskeyAutofillAvailable: function () {\n    var _ref = _asyncToGenerator(function* () {\n      let isAvailable = false;\n      if (this.isConditionalMediationAvailable()) {\n        // eslint-disable-next-line compat/compat, no-undef\n        isAvailable = yield PublicKeyCredential.isConditionalMediationAvailable();\n      }\n      return isAvailable;\n    });\n    return function isPasskeyAutofillAvailable() {\n      return _ref.apply(this, arguments);\n    };\n  }()\n};\nexport { webauthn as default };","map":{"version":3,"names":["Q","fn","adaptToOkta","promise","makeCredential","accountInfo","cryptoParams","challenge","map","param","type","algorithm","window","msCredentials","then","cred","Object","freeze","credential","id","publicKey","JSON","parse","attestation","getAssertion","allowList","accept","item","filters","signature","clientData","authenticatorData","authnrData","processWebAuthnResponse","inputFunction","context","responseValue","apply","undefined","stringify","webauthn","isAvailable","prototype","hasOwnProperty","call","isNewApiAvailable","navigator","credentials","create","isWebauthnOrU2fAvailable","isU2fAvailable","isConditionalMediationAvailable","PublicKeyCredential","isPasskeyAutofillAvailable","_ref","_asyncToGenerator","arguments","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/util/webauthn.js"],"sourcesContent":["import Q from 'q';\nimport fn from './FidoUtil.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction adaptToOkta(promise) {\n  return new Q(promise);\n}\nfunction makeCredential(accountInfo, cryptoParams, challenge) {\n  cryptoParams = cryptoParams.map(function (param) {\n    return {\n      type: 'FIDO_2_0',\n      algorithm: param.algorithm\n    };\n  });\n  const promise = window.msCredentials.makeCredential(accountInfo, cryptoParams, challenge).then(function (cred) {\n    return Object.freeze({\n      credential: {\n        id: cred.id\n      },\n      publicKey: JSON.parse(cred.publicKey),\n      attestation: cred.attestation\n    });\n  });\n  return adaptToOkta(promise);\n}\nfunction getAssertion(challenge, allowList) {\n  const accept = allowList.map(function (item) {\n    return {\n      type: 'FIDO_2_0',\n      id: item.id\n    };\n  });\n  const filters = {\n    accept: accept\n  };\n  const promise = window.msCredentials.getAssertion(challenge, filters).then(function (attestation) {\n    const signature = attestation.signature;\n    return Object.freeze({\n      credential: {\n        id: attestation.id\n      },\n      clientData: signature.clientData,\n      authenticatorData: signature.authnrData,\n      signature: signature.signature\n    });\n  });\n  return adaptToOkta(promise);\n}\nfunction processWebAuthnResponse(inputFunction, context) {\n  if (typeof inputFunction === 'undefined') {\n    return null;\n  }\n  const responseValue = inputFunction.apply(context);\n  if (responseValue === undefined || responseValue === null) {\n    return null;\n  }\n  return JSON.stringify(responseValue);\n}\nvar webauthn = {\n  makeCredential: makeCredential,\n  getAssertion: getAssertion,\n  processWebAuthnResponse: processWebAuthnResponse,\n  isAvailable: function () {\n    return Object.prototype.hasOwnProperty.call(window, 'msCredentials');\n  },\n  isNewApiAvailable: function () {\n    // navigator.credentials is not supported in IE11\n    // eslint-disable-next-line compat/compat\n    return navigator && navigator.credentials && navigator.credentials.create;\n  },\n  isWebauthnOrU2fAvailable: function () {\n    return this.isNewApiAvailable() || fn.isU2fAvailable();\n  },\n  isConditionalMediationAvailable: function () {\n    // eslint-disable-next-line compat/compat, no-undef\n    return typeof PublicKeyCredential !== 'undefined'\n    // eslint-disable-next-line compat/compat, no-undef\n    && typeof PublicKeyCredential.isConditionalMediationAvailable !== 'undefined';\n  },\n  // checks if the browser supports passkey autofill by making sure it supports conditional mediation\n  // https://passkeys.dev/docs/reference/terms/#autofill-ui\n  isPasskeyAutofillAvailable: async function () {\n    let isAvailable = false;\n    if (this.isConditionalMediationAvailable()) {\n      // eslint-disable-next-line compat/compat, no-undef\n      isAvailable = await PublicKeyCredential.isConditionalMediationAvailable();\n    }\n    return isAvailable;\n  }\n};\n\nexport { webauthn as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}