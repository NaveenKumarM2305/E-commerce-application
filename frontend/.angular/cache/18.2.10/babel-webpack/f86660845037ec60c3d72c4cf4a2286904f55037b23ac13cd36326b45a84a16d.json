{"ast":null,"code":"import { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport Model from '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport BaseForm from '../../internals/BaseForm.js';\nimport '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport BaseView from '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport '../../components/AuthenticatorVerifyOptions.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';\nimport 'cross-fetch';\nimport '../../../../util/BrowserFeatures.js';\nimport '../../../../util/FactorUtil.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView.js';\nimport fn from '../../../../util/CountryUtil.js';\nconst Body = BaseForm.extend({\n  className: 'phone-authenticator-enroll',\n  title: function () {\n    return loc('oie.phone.enroll.title', 'login');\n  },\n  subtitle: function () {\n    return this.model.get('authenticator.methodType') === 'voice' ? loc('oie.phone.enroll.call.subtitle', 'login') : loc('oie.phone.enroll.sms.subtitle', 'login');\n  },\n  render: function () {\n    BaseForm.prototype.render.apply(this, arguments);\n    this.el.querySelector('.phone-authenticator-enroll__phone-code').innerText = `+${this.model.get('phoneCode')}`;\n  },\n  handlePhoneCodeChange: function () {\n    const countryCodeField = this.el.querySelector('.phone-authenticator-enroll__phone-code');\n    countryCodeField.innerText = `+${this.model.get('phoneCode')}`;\n  },\n  save: function () {\n    return this.model.get('authenticator.methodType') === 'voice' ? loc('oie.phone.call.primaryButton', 'login') : loc('oie.phone.sms.primaryButton', 'login');\n  },\n  getUISchema: function () {\n    const uiSchemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n\n    // TODO: Using underscore to support IE, replace with Array.prototype methods (find, findIndex) when IE\n    // support is removed\n    const phoneNumberUISchemaIndex = oktaUnderscore.findIndex(uiSchemas, ({\n      name: name\n    }) => name === 'authenticator.phoneNumber');\n    const countryUISchema = {\n      'label-top': true,\n      label: loc('mfa.country', 'login'),\n      type: 'select',\n      options: fn.getCountries(),\n      name: 'country',\n      wide: true\n    };\n    const inputId = 'okta-phone-number-input';\n\n    // Create an input group - serves as a display wrapper\n    const phoneNumberWithCodeUISchema = {\n      label: loc('mfa.phoneNumber.placeholder', 'login'),\n      inputId: inputId,\n      type: 'group',\n      modelType: 'string',\n      'label-top': true,\n      name: 'phoneCode',\n      className: 'phone-authenticator-enroll__phone',\n      input: [{\n        type: 'label',\n        /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n        label: `+${this.model.get('phoneCode')}`,\n        className: 'phone-authenticator-enroll__phone-code no-translate'\n      }, Object.assign({\n        inputId: inputId\n      }, uiSchemas[phoneNumberUISchemaIndex])]\n    };\n    const extensionUISchema = {\n      label: loc('phone.extention.label', 'login'),\n      type: 'text',\n      className: 'phone-authenticator-enroll__phone-ext',\n      'label-top': true,\n      name: 'extension',\n      showWhen: {\n        'authenticator.methodType': 'voice'\n      }\n    };\n    if (phoneNumberUISchemaIndex !== -1) {\n      // Replace phoneNumberUISchema..\n      uiSchemas.splice(phoneNumberUISchemaIndex, 1, phoneNumberWithCodeUISchema);\n      // Add countryUISchema before & extensionUISchema after phone..\n      uiSchemas.splice(phoneNumberUISchemaIndex, 0, countryUISchema);\n      uiSchemas.splice(phoneNumberUISchemaIndex + 2, 0, extensionUISchema);\n    }\n    const methodType = oktaUnderscore.find(uiSchemas, ({\n      name: name\n    }) => name === 'authenticator.methodType');\n    if (methodType && methodType.options.length === 1) {\n      methodType.className = 'hide';\n    }\n    return uiSchemas;\n  },\n  updateConditionalText: function () {\n    this.el.querySelector('.okta-form-subtitle').innerText = this.subtitle();\n    this.el.querySelector('input[type=\"submit\"]').value = this.save();\n  },\n  initialize: function () {\n    BaseForm.prototype.initialize.apply(this, arguments);\n    this.listenTo(this.model, 'change:authenticator.methodType', this.updateConditionalText);\n    this.listenTo(this.model, 'change:phoneCode', this.handlePhoneCodeChange.bind(this));\n  }\n});\nvar EnrollAuthenticatorDataPhoneView = BaseAuthenticatorView.extend({\n  Body: Body,\n  createModelClass: function () {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n    const local = Object.assign({\n      country: {\n        'value': this.settings.get('defaultCountryCode'),\n        'type': 'string'\n      },\n      extension: {\n        'type': 'string'\n      }\n    }, ModelClass.prototype.local);\n    const derived = Object.assign({\n      phoneCode: {\n        deps: ['country'],\n        fn: function (country) {\n          return fn.getCallingCodeForCountry(country);\n        }\n      }\n    }, ModelClass.prototype.derived);\n    return ModelClass.extend({\n      local: local,\n      derived: derived,\n      toJSON: function () {\n        const modelJSON = Model.prototype.toJSON.call(this, arguments);\n        const extension = this.get('extension');\n        const phoneCode = this.get('phoneCode');\n\n        // Add country code..\n        let formattedPhoneNumber = `+${phoneCode}${modelJSON.authenticator.phoneNumber}`;\n\n        // Add extension if present..\n        if (modelJSON.authenticator.methodType === 'voice' && extension !== null && extension !== void 0 && extension.trim().length) {\n          formattedPhoneNumber = `${formattedPhoneNumber}x${extension}`;\n        }\n        // Override phone with formatted number..\n        modelJSON.authenticator.phoneNumber = formattedPhoneNumber;\n        return modelJSON;\n      }\n    });\n  }\n});\nexport { EnrollAuthenticatorDataPhoneView as default };","map":{"version":3,"names":["loc","oktaUnderscore","Model","BaseForm","BaseView","BaseAuthenticatorView","fn","Body","extend","className","title","subtitle","model","get","render","prototype","apply","arguments","el","querySelector","innerText","handlePhoneCodeChange","countryCodeField","save","getUISchema","uiSchemas","phoneNumberUISchemaIndex","findIndex","name","countryUISchema","label","type","options","getCountries","wide","inputId","phoneNumberWithCodeUISchema","modelType","input","Object","assign","extensionUISchema","showWhen","splice","methodType","find","length","updateConditionalText","value","initialize","listenTo","bind","EnrollAuthenticatorDataPhoneView","createModelClass","ModelClass","local","country","settings","extension","derived","phoneCode","deps","getCallingCodeForCountry","toJSON","modelJSON","call","formattedPhoneNumber","authenticator","phoneNumber","trim","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/views/phone/EnrollAuthenticatorDataPhoneView.js"],"sourcesContent":["import { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport Model from '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport BaseForm from '../../internals/BaseForm.js';\nimport '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport BaseView from '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport '../../components/AuthenticatorVerifyOptions.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';\nimport 'cross-fetch';\nimport '../../../../util/BrowserFeatures.js';\nimport '../../../../util/FactorUtil.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView.js';\nimport fn from '../../../../util/CountryUtil.js';\n\nconst Body = BaseForm.extend({\n  className: 'phone-authenticator-enroll',\n  title: function () {\n    return loc('oie.phone.enroll.title', 'login');\n  },\n  subtitle: function () {\n    return this.model.get('authenticator.methodType') === 'voice' ? loc('oie.phone.enroll.call.subtitle', 'login') : loc('oie.phone.enroll.sms.subtitle', 'login');\n  },\n  render: function () {\n    BaseForm.prototype.render.apply(this, arguments);\n    this.el.querySelector('.phone-authenticator-enroll__phone-code').innerText = `+${this.model.get('phoneCode')}`;\n  },\n  handlePhoneCodeChange: function () {\n    const countryCodeField = this.el.querySelector('.phone-authenticator-enroll__phone-code');\n    countryCodeField.innerText = `+${this.model.get('phoneCode')}`;\n  },\n  save: function () {\n    return this.model.get('authenticator.methodType') === 'voice' ? loc('oie.phone.call.primaryButton', 'login') : loc('oie.phone.sms.primaryButton', 'login');\n  },\n  getUISchema: function () {\n    const uiSchemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n\n    // TODO: Using underscore to support IE, replace with Array.prototype methods (find, findIndex) when IE\n    // support is removed\n    const phoneNumberUISchemaIndex = oktaUnderscore.findIndex(uiSchemas, ({\n      name: name\n    }) => name === 'authenticator.phoneNumber');\n    const countryUISchema = {\n      'label-top': true,\n      label: loc('mfa.country', 'login'),\n      type: 'select',\n      options: fn.getCountries(),\n      name: 'country',\n      wide: true\n    };\n    const inputId = 'okta-phone-number-input';\n\n    // Create an input group - serves as a display wrapper\n    const phoneNumberWithCodeUISchema = {\n      label: loc('mfa.phoneNumber.placeholder', 'login'),\n      inputId: inputId,\n      type: 'group',\n      modelType: 'string',\n      'label-top': true,\n      name: 'phoneCode',\n      className: 'phone-authenticator-enroll__phone',\n      input: [{\n        type: 'label',\n        /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n        label: `+${this.model.get('phoneCode')}`,\n        className: 'phone-authenticator-enroll__phone-code no-translate'\n      }, Object.assign({\n        inputId: inputId\n      }, uiSchemas[phoneNumberUISchemaIndex])]\n    };\n    const extensionUISchema = {\n      label: loc('phone.extention.label', 'login'),\n      type: 'text',\n      className: 'phone-authenticator-enroll__phone-ext',\n      'label-top': true,\n      name: 'extension',\n      showWhen: {\n        'authenticator.methodType': 'voice'\n      }\n    };\n    if (phoneNumberUISchemaIndex !== -1) {\n      // Replace phoneNumberUISchema..\n      uiSchemas.splice(phoneNumberUISchemaIndex, 1, phoneNumberWithCodeUISchema);\n      // Add countryUISchema before & extensionUISchema after phone..\n      uiSchemas.splice(phoneNumberUISchemaIndex, 0, countryUISchema);\n      uiSchemas.splice(phoneNumberUISchemaIndex + 2, 0, extensionUISchema);\n    }\n    const methodType = oktaUnderscore.find(uiSchemas, ({\n      name: name\n    }) => name === 'authenticator.methodType');\n    if (methodType && methodType.options.length === 1) {\n      methodType.className = 'hide';\n    }\n    return uiSchemas;\n  },\n  updateConditionalText: function () {\n    this.el.querySelector('.okta-form-subtitle').innerText = this.subtitle();\n    this.el.querySelector('input[type=\"submit\"]').value = this.save();\n  },\n  initialize: function () {\n    BaseForm.prototype.initialize.apply(this, arguments);\n    this.listenTo(this.model, 'change:authenticator.methodType', this.updateConditionalText);\n    this.listenTo(this.model, 'change:phoneCode', this.handlePhoneCodeChange.bind(this));\n  }\n});\nvar EnrollAuthenticatorDataPhoneView = BaseAuthenticatorView.extend({\n  Body: Body,\n  createModelClass: function () {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n    const local = Object.assign({\n      country: {\n        'value': this.settings.get('defaultCountryCode'),\n        'type': 'string'\n      },\n      extension: {\n        'type': 'string'\n      }\n    }, ModelClass.prototype.local);\n    const derived = Object.assign({\n      phoneCode: {\n        deps: ['country'],\n        fn: function (country) {\n          return fn.getCallingCodeForCountry(country);\n        }\n      }\n    }, ModelClass.prototype.derived);\n    return ModelClass.extend({\n      local: local,\n      derived: derived,\n      toJSON: function () {\n        const modelJSON = Model.prototype.toJSON.call(this, arguments);\n        const extension = this.get('extension');\n        const phoneCode = this.get('phoneCode');\n\n        // Add country code..\n        let formattedPhoneNumber = `+${phoneCode}${modelJSON.authenticator.phoneNumber}`;\n\n        // Add extension if present..\n        if (modelJSON.authenticator.methodType === 'voice' && extension !== null && extension !== void 0 && extension.trim().length) {\n          formattedPhoneNumber = `${formattedPhoneNumber}x${extension}`;\n        }\n        // Override phone with formatted number..\n        modelJSON.authenticator.phoneNumber = formattedPhoneNumber;\n        return modelJSON;\n      }\n    });\n  }\n});\n\nexport { EnrollAuthenticatorDataPhoneView as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}