{"ast":null,"code":"import Util from '../util/Util.js';\nimport V1Router from '../v1/LoginRouter.js';\nimport WidgetRouter from '../v2/WidgetRouter.js';\n\n// Default router factory will detect between classic and OIE pipeline\nfunction routerClassFactory(options) {\n  let Router;\n\n  // V1 (\"classic\") flow will load under these conditions:\n  const v1DefaultFlow = !options.stateToken && !options.clientId && !options.proxyIdxResponse; // Default entry flow on okta-hosted login page\n  const v1StateTokenFlow = options.stateToken && Util.isV1StateToken(options.stateToken); // Resuming a flow on okta-hosted login page\n  const v1AuthFlow = options.clientId && options.useClassicEngine === true; // Self hosted widget can set the `useClassicEngine` option to use V1Router\n\n  if (v1DefaultFlow || v1StateTokenFlow || v1AuthFlow) {\n    Router = V1Router;\n  } else {\n    Router = WidgetRouter;\n  }\n  return Router;\n}\nexport { routerClassFactory };","map":{"version":3,"names":["Util","V1Router","WidgetRouter","routerClassFactory","options","Router","v1DefaultFlow","stateToken","clientId","proxyIdxResponse","v1StateTokenFlow","isV1StateToken","v1AuthFlow","useClassicEngine"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/router/default.js"],"sourcesContent":["import Util from '../util/Util.js';\nimport V1Router from '../v1/LoginRouter.js';\nimport WidgetRouter from '../v2/WidgetRouter.js';\n\n// Default router factory will detect between classic and OIE pipeline\nfunction routerClassFactory(options) {\n  let Router;\n\n  // V1 (\"classic\") flow will load under these conditions:\n  const v1DefaultFlow = !options.stateToken && !options.clientId && !options.proxyIdxResponse; // Default entry flow on okta-hosted login page\n  const v1StateTokenFlow = options.stateToken && Util.isV1StateToken(options.stateToken); // Resuming a flow on okta-hosted login page\n  const v1AuthFlow = options.clientId && options.useClassicEngine === true; // Self hosted widget can set the `useClassicEngine` option to use V1Router\n\n  if (v1DefaultFlow || v1StateTokenFlow || v1AuthFlow) {\n    Router = V1Router;\n  } else {\n    Router = WidgetRouter;\n  }\n  return Router;\n}\n\nexport { routerClassFactory };\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAClC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,YAAY,MAAM,uBAAuB;;AAEhD;AACA,SAASC,kBAAkBA,CAACC,OAAO,EAAE;EACnC,IAAIC,MAAM;;EAEV;EACA,MAAMC,aAAa,GAAG,CAACF,OAAO,CAACG,UAAU,IAAI,CAACH,OAAO,CAACI,QAAQ,IAAI,CAACJ,OAAO,CAACK,gBAAgB,CAAC,CAAC;EAC7F,MAAMC,gBAAgB,GAAGN,OAAO,CAACG,UAAU,IAAIP,IAAI,CAACW,cAAc,CAACP,OAAO,CAACG,UAAU,CAAC,CAAC,CAAC;EACxF,MAAMK,UAAU,GAAGR,OAAO,CAACI,QAAQ,IAAIJ,OAAO,CAACS,gBAAgB,KAAK,IAAI,CAAC,CAAC;;EAE1E,IAAIP,aAAa,IAAII,gBAAgB,IAAIE,UAAU,EAAE;IACnDP,MAAM,GAAGJ,QAAQ;EACnB,CAAC,MAAM;IACLI,MAAM,GAAGH,YAAY;EACvB;EACA,OAAOG,MAAM;AACf;AAEA,SAASF,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}