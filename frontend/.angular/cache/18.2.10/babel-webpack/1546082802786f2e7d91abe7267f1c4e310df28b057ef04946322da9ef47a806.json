{"ast":null,"code":"import { loc } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\n\n/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction isInvalidRecoveryTokenError(error) {\n  // special case: error from interact when passing an (invalid) recovery token\n  return (error === null || error === void 0 ? void 0 : error.error) === 'invalid_request' && error.error_description === 'The recovery token is invalid';\n}\nfunction isInvalidActivationTokenError(error) {\n  // special case: error from interact when passing an (invalid) activation token\n  return (error === null || error === void 0 ? void 0 : error.error) === 'invalid_request' && error.error_description === 'The activation token is invalid';\n}\nfunction formatInvalidRecoveryTokenError(error) {\n  // This error comes from `oauth2/interact` so is not an IDX error.\n  // simulate an IDX-JS error response\n  const idxError = formatIDXError(error);\n  const {\n    details: details\n  } = idxError;\n  const messages = {\n    type: 'array',\n    value: [{\n      message: error.error_description,\n      i18n: {\n        key: 'oie.invalid.recovery.token'\n      },\n      class: 'ERROR'\n    }]\n  };\n  details.rawIdxState.messages = messages;\n  details.context.messages = messages;\n  return idxError;\n}\nfunction formatInvalidActivationTokenError(error) {\n  // This error comes from `oauth2/interact` so is not an IDX error.\n  // simulate an IDX-JS error response\n  const idxError = formatIDXError(error);\n  const {\n    details: details\n  } = idxError;\n  const messages = {\n    type: 'array',\n    value: [{\n      message: error.error_description,\n      i18n: {\n        key: 'idx.missing.activation.token'\n      },\n      class: 'ERROR'\n    }]\n  };\n  details.rawIdxState.messages = messages;\n  details.context.messages = messages;\n  return idxError;\n}\nfunction isOIENotEnabledError(error) {\n  // special case: error from interact when the Org does not have OIE enabled\n  // The response is not in IDX format. See playground/mocks/data/oauth2/error-feature-not-enabled.json\n  return (error === null || error === void 0 ? void 0 : error.error) === 'access_denied' && error.error_description;\n}\nfunction formatOIENotEnabledError(error) {\n  // This error comes from `oauth2/interact` so the error is in OAuth format\n  // simulate an IDX-JS error response\n  const idxError = formatIDXError(error);\n  const {\n    details: details\n  } = idxError;\n  const messages = {\n    type: 'array',\n    value: [{\n      message: error.error_description,\n      i18n: {\n        key: 'oie.feature.disabled'\n      },\n      class: 'ERROR'\n    }]\n  };\n  details.rawIdxState.messages = messages;\n  details.context.messages = messages;\n  return error;\n}\nfunction isOIEConfigurationError(error) {\n  return (error === null || error === void 0 ? void 0 : error.error) && error.error_description;\n}\nfunction formatOIEConfigurationError(error) {\n  // This error comes from `oauth2/interact` so the error is in OAuth format\n  // simulate an IDX-JS error response\n  const idxError = formatIDXError(error);\n  const {\n    details: details\n  } = idxError;\n  const messages = {\n    type: 'array',\n    value: [{\n      message: loc('oie.configuration.error', 'login'),\n      class: 'ERROR',\n      i18n: undefined\n    }]\n  };\n  details.rawIdxState.messages = messages;\n  details.context.messages = messages;\n  return error;\n}\nfunction formatIDXError(error) {\n  // Make the error object resemble an IDX response\n  const idxError = error;\n  idxError.details = idxError.details || {};\n  const {\n    details: details\n  } = idxError;\n  details.rawIdxState = details.rawIdxState || {};\n  details.context = details.context || {};\n  details.neededToProceed = details.neededToProceed || [];\n\n  // Populate generic error message if there isn't any.\n  if (!details.rawIdxState.messages) {\n    const idxMessage = {\n      type: 'array',\n      value: [{\n        message: loc('oform.error.unexpected', 'login'),\n        class: 'ERROR',\n        i18n: undefined\n      }]\n    };\n    details.rawIdxState.messages = idxMessage;\n    details.context.messages = idxMessage;\n  }\n  return idxError;\n}\nfunction formatError(error) {\n  // If the error is a string, wrap it in an Error object\n  if (typeof error === 'string') {\n    error = new Error(error);\n  }\n\n  // special case error handling\n\n  // invalid reccovery token\n  if (isInvalidRecoveryTokenError(error)) {\n    return formatInvalidRecoveryTokenError(error);\n  }\n\n  // invalid activation token\n  if (isInvalidActivationTokenError(error)) {\n    return formatInvalidActivationTokenError(error);\n  }\n\n  // OIE is not enabled\n  if (isOIENotEnabledError(error)) {\n    return formatOIENotEnabledError(error);\n  }\n\n  // Other errors from /interact in OAuth format\n  if (isOIEConfigurationError(error)) {\n    return formatOIEConfigurationError(error);\n  }\n  error = formatIDXError(error);\n  return error;\n}\nexport { formatError, formatIDXError, formatInvalidActivationTokenError, formatInvalidRecoveryTokenError, formatOIEConfigurationError, formatOIENotEnabledError, isInvalidActivationTokenError, isInvalidRecoveryTokenError, isOIEConfigurationError, isOIENotEnabledError };","map":{"version":3,"names":["loc","isInvalidRecoveryTokenError","error","error_description","isInvalidActivationTokenError","formatInvalidRecoveryTokenError","idxError","formatIDXError","details","messages","type","value","message","i18n","key","class","rawIdxState","context","formatInvalidActivationTokenError","isOIENotEnabledError","formatOIENotEnabledError","isOIEConfigurationError","formatOIEConfigurationError","undefined","neededToProceed","idxMessage","formatError","Error"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/client/formatError.js"],"sourcesContent":["import { loc } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\n\n/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction isInvalidRecoveryTokenError(error) {\n  // special case: error from interact when passing an (invalid) recovery token\n  return (error === null || error === void 0 ? void 0 : error.error) === 'invalid_request' && error.error_description === 'The recovery token is invalid';\n}\nfunction isInvalidActivationTokenError(error) {\n  // special case: error from interact when passing an (invalid) activation token\n  return (error === null || error === void 0 ? void 0 : error.error) === 'invalid_request' && error.error_description === 'The activation token is invalid';\n}\nfunction formatInvalidRecoveryTokenError(error) {\n  // This error comes from `oauth2/interact` so is not an IDX error.\n  // simulate an IDX-JS error response\n  const idxError = formatIDXError(error);\n  const {\n    details: details\n  } = idxError;\n  const messages = {\n    type: 'array',\n    value: [{\n      message: error.error_description,\n      i18n: {\n        key: 'oie.invalid.recovery.token'\n      },\n      class: 'ERROR'\n    }]\n  };\n  details.rawIdxState.messages = messages;\n  details.context.messages = messages;\n  return idxError;\n}\nfunction formatInvalidActivationTokenError(error) {\n  // This error comes from `oauth2/interact` so is not an IDX error.\n  // simulate an IDX-JS error response\n  const idxError = formatIDXError(error);\n  const {\n    details: details\n  } = idxError;\n  const messages = {\n    type: 'array',\n    value: [{\n      message: error.error_description,\n      i18n: {\n        key: 'idx.missing.activation.token'\n      },\n      class: 'ERROR'\n    }]\n  };\n  details.rawIdxState.messages = messages;\n  details.context.messages = messages;\n  return idxError;\n}\nfunction isOIENotEnabledError(error) {\n  // special case: error from interact when the Org does not have OIE enabled\n  // The response is not in IDX format. See playground/mocks/data/oauth2/error-feature-not-enabled.json\n  return (error === null || error === void 0 ? void 0 : error.error) === 'access_denied' && error.error_description;\n}\nfunction formatOIENotEnabledError(error) {\n  // This error comes from `oauth2/interact` so the error is in OAuth format\n  // simulate an IDX-JS error response\n  const idxError = formatIDXError(error);\n  const {\n    details: details\n  } = idxError;\n  const messages = {\n    type: 'array',\n    value: [{\n      message: error.error_description,\n      i18n: {\n        key: 'oie.feature.disabled'\n      },\n      class: 'ERROR'\n    }]\n  };\n  details.rawIdxState.messages = messages;\n  details.context.messages = messages;\n  return error;\n}\nfunction isOIEConfigurationError(error) {\n  return (error === null || error === void 0 ? void 0 : error.error) && error.error_description;\n}\nfunction formatOIEConfigurationError(error) {\n  // This error comes from `oauth2/interact` so the error is in OAuth format\n  // simulate an IDX-JS error response\n  const idxError = formatIDXError(error);\n  const {\n    details: details\n  } = idxError;\n  const messages = {\n    type: 'array',\n    value: [{\n      message: loc('oie.configuration.error', 'login'),\n      class: 'ERROR',\n      i18n: undefined\n    }]\n  };\n  details.rawIdxState.messages = messages;\n  details.context.messages = messages;\n  return error;\n}\nfunction formatIDXError(error) {\n  // Make the error object resemble an IDX response\n  const idxError = error;\n  idxError.details = idxError.details || {};\n  const {\n    details: details\n  } = idxError;\n  details.rawIdxState = details.rawIdxState || {};\n  details.context = details.context || {};\n  details.neededToProceed = details.neededToProceed || [];\n\n  // Populate generic error message if there isn't any.\n  if (!details.rawIdxState.messages) {\n    const idxMessage = {\n      type: 'array',\n      value: [{\n        message: loc('oform.error.unexpected', 'login'),\n        class: 'ERROR',\n        i18n: undefined\n      }]\n    };\n    details.rawIdxState.messages = idxMessage;\n    details.context.messages = idxMessage;\n  }\n  return idxError;\n}\nfunction formatError(error) {\n  // If the error is a string, wrap it in an Error object\n  if (typeof error === 'string') {\n    error = new Error(error);\n  }\n\n  // special case error handling\n\n  // invalid reccovery token\n  if (isInvalidRecoveryTokenError(error)) {\n    return formatInvalidRecoveryTokenError(error);\n  }\n\n  // invalid activation token\n  if (isInvalidActivationTokenError(error)) {\n    return formatInvalidActivationTokenError(error);\n  }\n\n  // OIE is not enabled\n  if (isOIENotEnabledError(error)) {\n    return formatOIENotEnabledError(error);\n  }\n\n  // Other errors from /interact in OAuth format\n  if (isOIEConfigurationError(error)) {\n    return formatOIEConfigurationError(error);\n  }\n  error = formatIDXError(error);\n  return error;\n}\n\nexport { formatError, formatIDXError, formatInvalidActivationTokenError, formatInvalidRecoveryTokenError, formatOIEConfigurationError, formatOIENotEnabledError, isInvalidActivationTokenError, isInvalidRecoveryTokenError, isOIEConfigurationError, isOIENotEnabledError };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}