{"ast":null,"code":"/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { __awaiter, __decorate, __param, __metadata } from 'tslib';\nimport { InjectionToken, Component, Inject, Optional, Injector, Injectable, Input, Directive, TemplateRef, ViewContainerRef, VERSION, NgModule } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaAuth, AuthSdkError, toRelativeUrl } from '@okta/okta-auth-js';\nimport { filter, mergeMap } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { compare } from 'compare-versions';\n\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst OKTA_CONFIG = new InjectionToken('okta.config.angular');\nconst OKTA_AUTH = new InjectionToken('okta.auth');\n\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nlet OktaCallbackComponent = class OktaCallbackComponent {\n  constructor(config, oktaAuth, injector) {\n    this.config = config;\n    this.oktaAuth = oktaAuth;\n    this.injector = injector;\n  }\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n        yield this.oktaAuth.handleLoginRedirect();\n      } catch (e) {\n        // Callback from social IDP. Show custom login page to continue.\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore Supports auth-js v5 & v6\n        const isInteractionRequiredError = this.oktaAuth.isInteractionRequiredError || this.oktaAuth.idx.isInteractionRequiredError;\n        if (isInteractionRequiredError(e) && this.injector) {\n          const {\n            onAuthResume,\n            onAuthRequired\n          } = this.config;\n          const callbackFn = onAuthResume || onAuthRequired;\n          if (callbackFn) {\n            callbackFn(this.oktaAuth, this.injector);\n            return;\n          }\n        }\n        this.error = e.toString();\n      }\n    });\n  }\n};\nOktaCallbackComponent = __decorate([Component({\n  template: `<div>{{error}}</div>`\n}), __param(0, Inject(OKTA_CONFIG)), __param(1, Inject(OKTA_AUTH)), __param(2, Optional()), __metadata(\"design:paramtypes\", [Object, OktaAuth, Injector])], OktaCallbackComponent);\n\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nlet OktaAuthGuard = class OktaAuthGuard {\n  constructor(config, oktaAuth, injector) {\n    this.config = config;\n    this.oktaAuth = oktaAuth;\n    this.injector = injector;\n    this.updateAuthStateListener = authState => {\n      if (!authState.isAuthenticated) {\n        this.handleLogin(this.state.url);\n      }\n    };\n    this.onAuthRequired = this.config.onAuthRequired;\n    // Unsubscribe updateAuthStateListener when route change\n    const router = injector.get(Router);\n    router.events.pipe(filter(e => e instanceof NavigationStart && this.state && this.state.url !== e.url)).subscribe(() => {\n      this.oktaAuth.authStateManager.unsubscribe(this.updateAuthStateListener);\n    });\n  }\n  canLoad(route, segments) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n      const isAuthenticated = yield this.oktaAuth.isAuthenticated();\n      if (isAuthenticated) {\n        return true;\n      }\n      const originalUri = segments[0].path;\n      yield this.handleLogin(originalUri);\n      return false;\n    });\n  }\n  /**\n   * Gateway for protected route. Returns true if there is a valid accessToken,\n   * otherwise it will cache the route and start the login flow.\n   * @param route\n   * @param state\n   */\n  canActivate(route, state) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // Track states for current route\n      this.state = state;\n      this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n      // Protect the route after accessing\n      this.oktaAuth.authStateManager.subscribe(this.updateAuthStateListener);\n      const isAuthenticated = yield this.oktaAuth.isAuthenticated();\n      if (isAuthenticated) {\n        return true;\n      }\n      yield this.handleLogin(state.url);\n      return false;\n    });\n  }\n  canActivateChild(route, state) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.canActivate(route, state);\n    });\n  }\n  handleLogin(originalUri) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // Store the current path\n      this.oktaAuth.setOriginalUri(originalUri);\n      if (this.onAuthRequired) {\n        this.onAuthRequired(this.oktaAuth, this.injector);\n      } else {\n        this.oktaAuth.signInWithRedirect();\n      }\n    });\n  }\n};\nOktaAuthGuard = __decorate([Injectable(), __param(0, Inject(OKTA_CONFIG)), __param(1, Inject(OKTA_AUTH)), __metadata(\"design:paramtypes\", [Object, OktaAuth, Injector])], OktaAuthGuard);\nconst defaultAuthState = {\n  isAuthenticated: false\n};\nlet OktaAuthStateService = class OktaAuthStateService {\n  constructor(oktaAuth) {\n    this.oktaAuth = oktaAuth;\n    this._authState = new BehaviorSubject(defaultAuthState);\n    // only expose readonly property\n    this.authState$ = this._authState.asObservable();\n    this.updateAuthState = this.updateAuthState.bind(this);\n    // set initial authState\n    const initialAuthState = this.oktaAuth.authStateManager.getAuthState() || defaultAuthState;\n    this._authState.next(initialAuthState);\n    // subscribe to future changes\n    this.oktaAuth.authStateManager.subscribe(this.updateAuthState);\n  }\n  ngOnDestroy() {\n    this.oktaAuth.authStateManager.unsubscribe(this.updateAuthState);\n  }\n  // Observes as true when any group input can match groups from user claims \n  hasAnyGroups(groups) {\n    return this.authState$.pipe(mergeMap(({\n      isAuthenticated,\n      idToken\n    }) => __awaiter(this, void 0, void 0, function* () {\n      // return false when not authenticated or openid is not in scopes\n      if (!isAuthenticated || !idToken) {\n        return false;\n      }\n      // transform inputs to consistent object format\n      if (typeof groups === 'string') {\n        groups = {\n          groups: [groups]\n        };\n      }\n      if (Array.isArray(groups)) {\n        groups = {\n          groups\n        };\n      }\n      const key = Object.keys(groups)[0];\n      const value = groups[key];\n      // groups or custom claims is available in idToken\n      if (idToken.claims[key]) {\n        return value.some(authority => idToken.claims[key].includes(authority));\n      }\n      // try /userinfo endpoint when thin idToken (no groups claim) is returned\n      // https://developer.okta.com/docs/concepts/api-access-management/#tokens-and-scopes\n      const userInfo = yield this.oktaAuth.getUser();\n      if (!userInfo[key]) {\n        return false;\n      }\n      return value.some(authority => userInfo[key].includes(authority));\n    })));\n  }\n  updateAuthState(authState) {\n    this._authState.next(authState);\n  }\n};\nOktaAuthStateService = __decorate([Injectable(), __param(0, Inject(OKTA_AUTH)), __metadata(\"design:paramtypes\", [OktaAuth])], OktaAuthStateService);\nlet OktaHasAnyGroupDirective = class OktaHasAnyGroupDirective {\n  constructor(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  templateRef, viewContainer, authStateService) {\n    this.templateRef = templateRef;\n    this.viewContainer = viewContainer;\n    this.authStateService = authStateService;\n  }\n  set oktaHasAnyGroup(groups) {\n    this.authStateService.hasAnyGroups(groups).subscribe(isAuthorized => {\n      // don't update UI if no state change\n      if (isAuthorized === this.previousIsAuthorized) {\n        return;\n      }\n      this.previousIsAuthorized = isAuthorized;\n      this.viewContainer.clear();\n      if (isAuthorized) {\n        this.viewContainer.createEmbeddedView(this.templateRef);\n      }\n    });\n  }\n};\n__decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], OktaHasAnyGroupDirective.prototype, \"oktaHasAnyGroup\", null);\nOktaHasAnyGroupDirective = __decorate([Directive({\n  selector: '[oktaHasAnyGroup]'\n}), __metadata(\"design:paramtypes\", [TemplateRef, ViewContainerRef, OktaAuthStateService])], OktaHasAnyGroupDirective);\nvar packageInfo = {\n  'name': '@okta/okta-angular',\n  'version': '5.2.0',\n  'authJSMinSupportedVersion': '5.3.1'\n};\n\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction oktaAuthFactory(config) {\n  return config.oktaAuth;\n}\nlet OktaAuthModule = class OktaAuthModule {\n  constructor(config, location, router) {\n    const {\n      oktaAuth\n    } = config;\n    const isAuthJsSupported = oktaAuth._oktaUserAgent && compare(oktaAuth._oktaUserAgent.getVersion(), packageInfo.authJSMinSupportedVersion, '>=');\n    if (!isAuthJsSupported) {\n      throw new AuthSdkError(`Passed in oktaAuth is not compatible with the SDK, minimum supported okta-auth-js version is ${packageInfo.authJSMinSupportedVersion}.`);\n    }\n    // Add Okta UA\n    oktaAuth._oktaUserAgent.addEnvironment(`${packageInfo.name}/${packageInfo.version}`);\n    oktaAuth._oktaUserAgent.addEnvironment(`Angular/${VERSION.full}`);\n    // Provide a default implementation of `restoreOriginalUri`\n    if (!oktaAuth.options.restoreOriginalUri && router && location) {\n      oktaAuth.options.restoreOriginalUri = (_, originalUri) => __awaiter(this, void 0, void 0, function* () {\n        const baseUrl = window.location.origin + location.prepareExternalUrl('');\n        const routePath = toRelativeUrl(originalUri || '/', baseUrl);\n        router.navigateByUrl(routePath);\n      });\n    }\n    // Start services\n    oktaAuth.start();\n  }\n};\nOktaAuthModule = __decorate([NgModule({\n  declarations: [OktaCallbackComponent, OktaHasAnyGroupDirective],\n  exports: [OktaCallbackComponent, OktaHasAnyGroupDirective],\n  providers: [OktaAuthGuard, OktaAuthStateService, {\n    provide: OKTA_AUTH,\n    useFactory: oktaAuthFactory,\n    deps: [OKTA_CONFIG]\n  }]\n}), __param(0, Inject(OKTA_CONFIG)), __param(1, Optional()), __param(2, Optional()), __metadata(\"design:paramtypes\", [Object, Location, Router])], OktaAuthModule);\nexport { OKTA_AUTH, OKTA_CONFIG, OktaAuthGuard, OktaAuthModule, OktaAuthStateService, OktaCallbackComponent, oktaAuthFactory as ɵa, OktaHasAnyGroupDirective as ɵb };","map":{"version":3,"names":["__awaiter","__decorate","__param","__metadata","InjectionToken","Component","Inject","Optional","Injector","Injectable","Input","Directive","TemplateRef","ViewContainerRef","VERSION","NgModule","Router","NavigationStart","Location","OktaAuth","AuthSdkError","toRelativeUrl","filter","mergeMap","BehaviorSubject","compare","OKTA_CONFIG","OKTA_AUTH","OktaCallbackComponent","constructor","config","oktaAuth","injector","ngOnInit","handleLoginRedirect","e","isInteractionRequiredError","idx","onAuthResume","onAuthRequired","callbackFn","error","toString","template","Object","OktaAuthGuard","updateAuthStateListener","authState","isAuthenticated","handleLogin","state","url","router","get","events","pipe","subscribe","authStateManager","unsubscribe","canLoad","route","segments","data","originalUri","path","canActivate","canActivateChild","setOriginalUri","signInWithRedirect","defaultAuthState","OktaAuthStateService","_authState","authState$","asObservable","updateAuthState","bind","initialAuthState","getAuthState","next","ngOnDestroy","hasAnyGroups","groups","idToken","Array","isArray","key","keys","value","claims","some","authority","includes","userInfo","getUser","OktaHasAnyGroupDirective","templateRef","viewContainer","authStateService","oktaHasAnyGroup","isAuthorized","previousIsAuthorized","clear","createEmbeddedView","prototype","selector","packageInfo","oktaAuthFactory","OktaAuthModule","location","isAuthJsSupported","_oktaUserAgent","getVersion","authJSMinSupportedVersion","addEnvironment","name","version","full","options","restoreOriginalUri","_","baseUrl","window","origin","prepareExternalUrl","routePath","navigateByUrl","start","declarations","exports","providers","provide","useFactory","deps","ɵa","ɵb"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-angular/fesm2015/okta-angular.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { __awaiter, __decorate, __param, __metadata } from 'tslib';\nimport { InjectionToken, Component, Inject, Optional, Injector, Injectable, Input, Directive, TemplateRef, ViewContainerRef, VERSION, NgModule } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaAuth, AuthSdkError, toRelativeUrl } from '@okta/okta-auth-js';\nimport { filter, mergeMap } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { compare } from 'compare-versions';\n\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst OKTA_CONFIG = new InjectionToken('okta.config.angular');\nconst OKTA_AUTH = new InjectionToken('okta.auth');\n\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nlet OktaCallbackComponent = class OktaCallbackComponent {\n    constructor(config, oktaAuth, injector) {\n        this.config = config;\n        this.oktaAuth = oktaAuth;\n        this.injector = injector;\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n                yield this.oktaAuth.handleLoginRedirect();\n            }\n            catch (e) {\n                // Callback from social IDP. Show custom login page to continue.\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore Supports auth-js v5 & v6\n                const isInteractionRequiredError = this.oktaAuth.isInteractionRequiredError || this.oktaAuth.idx.isInteractionRequiredError;\n                if (isInteractionRequiredError(e) && this.injector) {\n                    const { onAuthResume, onAuthRequired } = this.config;\n                    const callbackFn = onAuthResume || onAuthRequired;\n                    if (callbackFn) {\n                        callbackFn(this.oktaAuth, this.injector);\n                        return;\n                    }\n                }\n                this.error = e.toString();\n            }\n        });\n    }\n};\nOktaCallbackComponent = __decorate([\n    Component({\n        template: `<div>{{error}}</div>`\n    }),\n    __param(0, Inject(OKTA_CONFIG)),\n    __param(1, Inject(OKTA_AUTH)),\n    __param(2, Optional()),\n    __metadata(\"design:paramtypes\", [Object, OktaAuth,\n        Injector])\n], OktaCallbackComponent);\n\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nlet OktaAuthGuard = class OktaAuthGuard {\n    constructor(config, oktaAuth, injector) {\n        this.config = config;\n        this.oktaAuth = oktaAuth;\n        this.injector = injector;\n        this.updateAuthStateListener = (authState) => {\n            if (!authState.isAuthenticated) {\n                this.handleLogin(this.state.url);\n            }\n        };\n        this.onAuthRequired = this.config.onAuthRequired;\n        // Unsubscribe updateAuthStateListener when route change\n        const router = injector.get(Router);\n        router.events.pipe(filter((e) => e instanceof NavigationStart && this.state && this.state.url !== e.url)).subscribe(() => {\n            this.oktaAuth.authStateManager.unsubscribe(this.updateAuthStateListener);\n        });\n    }\n    canLoad(route, segments) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n            const isAuthenticated = yield this.oktaAuth.isAuthenticated();\n            if (isAuthenticated) {\n                return true;\n            }\n            const originalUri = segments[0].path;\n            yield this.handleLogin(originalUri);\n            return false;\n        });\n    }\n    /**\n     * Gateway for protected route. Returns true if there is a valid accessToken,\n     * otherwise it will cache the route and start the login flow.\n     * @param route\n     * @param state\n     */\n    canActivate(route, state) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Track states for current route\n            this.state = state;\n            this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n            // Protect the route after accessing\n            this.oktaAuth.authStateManager.subscribe(this.updateAuthStateListener);\n            const isAuthenticated = yield this.oktaAuth.isAuthenticated();\n            if (isAuthenticated) {\n                return true;\n            }\n            yield this.handleLogin(state.url);\n            return false;\n        });\n    }\n    canActivateChild(route, state) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.canActivate(route, state);\n        });\n    }\n    handleLogin(originalUri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Store the current path\n            this.oktaAuth.setOriginalUri(originalUri);\n            if (this.onAuthRequired) {\n                this.onAuthRequired(this.oktaAuth, this.injector);\n            }\n            else {\n                this.oktaAuth.signInWithRedirect();\n            }\n        });\n    }\n};\nOktaAuthGuard = __decorate([\n    Injectable(),\n    __param(0, Inject(OKTA_CONFIG)),\n    __param(1, Inject(OKTA_AUTH)),\n    __metadata(\"design:paramtypes\", [Object, OktaAuth,\n        Injector])\n], OktaAuthGuard);\n\nconst defaultAuthState = {\n    isAuthenticated: false\n};\nlet OktaAuthStateService = class OktaAuthStateService {\n    constructor(oktaAuth) {\n        this.oktaAuth = oktaAuth;\n        this._authState = new BehaviorSubject(defaultAuthState);\n        // only expose readonly property\n        this.authState$ = this._authState.asObservable();\n        this.updateAuthState = this.updateAuthState.bind(this);\n        // set initial authState\n        const initialAuthState = this.oktaAuth.authStateManager.getAuthState() || defaultAuthState;\n        this._authState.next(initialAuthState);\n        // subscribe to future changes\n        this.oktaAuth.authStateManager.subscribe(this.updateAuthState);\n    }\n    ngOnDestroy() {\n        this.oktaAuth.authStateManager.unsubscribe(this.updateAuthState);\n    }\n    // Observes as true when any group input can match groups from user claims \n    hasAnyGroups(groups) {\n        return this.authState$.pipe(mergeMap(({ isAuthenticated, idToken }) => __awaiter(this, void 0, void 0, function* () {\n            // return false when not authenticated or openid is not in scopes\n            if (!isAuthenticated || !idToken) {\n                return false;\n            }\n            // transform inputs to consistent object format\n            if (typeof groups === 'string') {\n                groups = { groups: [groups] };\n            }\n            if (Array.isArray(groups)) {\n                groups = { groups };\n            }\n            const key = Object.keys(groups)[0];\n            const value = groups[key];\n            // groups or custom claims is available in idToken\n            if (idToken.claims[key]) {\n                return value.some((authority) => idToken.claims[key].includes(authority));\n            }\n            // try /userinfo endpoint when thin idToken (no groups claim) is returned\n            // https://developer.okta.com/docs/concepts/api-access-management/#tokens-and-scopes\n            const userInfo = yield this.oktaAuth.getUser();\n            if (!userInfo[key]) {\n                return false;\n            }\n            return value.some((authority) => userInfo[key].includes(authority));\n        })));\n    }\n    updateAuthState(authState) {\n        this._authState.next(authState);\n    }\n};\nOktaAuthStateService = __decorate([\n    Injectable(),\n    __param(0, Inject(OKTA_AUTH)),\n    __metadata(\"design:paramtypes\", [OktaAuth])\n], OktaAuthStateService);\n\nlet OktaHasAnyGroupDirective = class OktaHasAnyGroupDirective {\n    constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    templateRef, viewContainer, authStateService) {\n        this.templateRef = templateRef;\n        this.viewContainer = viewContainer;\n        this.authStateService = authStateService;\n    }\n    set oktaHasAnyGroup(groups) {\n        this.authStateService.hasAnyGroups(groups)\n            .subscribe(isAuthorized => {\n            // don't update UI if no state change\n            if (isAuthorized === this.previousIsAuthorized) {\n                return;\n            }\n            this.previousIsAuthorized = isAuthorized;\n            this.viewContainer.clear();\n            if (isAuthorized) {\n                this.viewContainer.createEmbeddedView(this.templateRef);\n            }\n        });\n    }\n};\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], OktaHasAnyGroupDirective.prototype, \"oktaHasAnyGroup\", null);\nOktaHasAnyGroupDirective = __decorate([\n    Directive({ selector: '[oktaHasAnyGroup]' }),\n    __metadata(\"design:paramtypes\", [TemplateRef,\n        ViewContainerRef,\n        OktaAuthStateService])\n], OktaHasAnyGroupDirective);\n\nvar packageInfo = {\n    'name': '@okta/okta-angular',\n    'version': '5.2.0',\n    'authJSMinSupportedVersion': '5.3.1'\n};\n\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction oktaAuthFactory(config) {\n    return config.oktaAuth;\n}\nlet OktaAuthModule = class OktaAuthModule {\n    constructor(config, location, router) {\n        const { oktaAuth } = config;\n        const isAuthJsSupported = oktaAuth._oktaUserAgent && compare(oktaAuth._oktaUserAgent.getVersion(), packageInfo.authJSMinSupportedVersion, '>=');\n        if (!isAuthJsSupported) {\n            throw new AuthSdkError(`Passed in oktaAuth is not compatible with the SDK, minimum supported okta-auth-js version is ${packageInfo.authJSMinSupportedVersion}.`);\n        }\n        // Add Okta UA\n        oktaAuth._oktaUserAgent.addEnvironment(`${packageInfo.name}/${packageInfo.version}`);\n        oktaAuth._oktaUserAgent.addEnvironment(`Angular/${VERSION.full}`);\n        // Provide a default implementation of `restoreOriginalUri`\n        if (!oktaAuth.options.restoreOriginalUri && router && location) {\n            oktaAuth.options.restoreOriginalUri = (_, originalUri) => __awaiter(this, void 0, void 0, function* () {\n                const baseUrl = window.location.origin + location.prepareExternalUrl('');\n                const routePath = toRelativeUrl(originalUri || '/', baseUrl);\n                router.navigateByUrl(routePath);\n            });\n        }\n        // Start services\n        oktaAuth.start();\n    }\n};\nOktaAuthModule = __decorate([\n    NgModule({\n        declarations: [\n            OktaCallbackComponent,\n            OktaHasAnyGroupDirective,\n        ],\n        exports: [\n            OktaCallbackComponent,\n            OktaHasAnyGroupDirective,\n        ],\n        providers: [\n            OktaAuthGuard,\n            OktaAuthStateService,\n            {\n                provide: OKTA_AUTH,\n                useFactory: oktaAuthFactory,\n                deps: [OKTA_CONFIG]\n            },\n        ]\n    }),\n    __param(0, Inject(OKTA_CONFIG)),\n    __param(1, Optional()),\n    __param(2, Optional()),\n    __metadata(\"design:paramtypes\", [Object, Location,\n        Router])\n], OktaAuthModule);\n\nexport { OKTA_AUTH, OKTA_CONFIG, OktaAuthGuard, OktaAuthModule, OktaAuthStateService, OktaCallbackComponent, oktaAuthFactory as ɵa, OktaHasAnyGroupDirective as ɵb };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}