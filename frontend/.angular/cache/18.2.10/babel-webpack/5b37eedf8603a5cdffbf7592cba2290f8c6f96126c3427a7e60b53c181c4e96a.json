{"ast":null,"code":"import oktaJQueryStatic from '../util/jquery-wrapper.js';\nimport oktaUnderscore from '../util/underscore-wrapper.js';\nimport BaseCollection from './BaseCollection.js';\nimport BaseModel from './BaseModel.js';\nimport Logger from '../util/Logger.js';\nimport SchemaUtils from '../util/SchemaUtil.js';\nimport StringUtil from '../util/StringUtil.js';\nimport EnumTypeHelper from '../views/forms/helpers/EnumTypeHelper.js';\n\n/* eslint-disable inclusive-language/use-inclusive-words */\nconst loc = StringUtil.localize;\nconst STRING = SchemaUtils.STRING;\nconst NUMBER = SchemaUtils.NUMBER;\nconst INTEGER = SchemaUtils.INTEGER;\nconst OBJECT = SchemaUtils.OBJECT;\nconst getArrayTypeName = function (type, elementType) {\n  return type + 'of' + elementType;\n};\nconst SchemaPropertySubSchema = BaseModel.extend({\n  defaults: {\n    description: undefined,\n    minLength: undefined,\n    maxLength: undefined,\n    format: undefined\n  },\n  parse: function (resp) {\n    if (oktaUnderscore.isString(resp.format)) {\n      const matcher = /^\\/(.+)\\/$/.exec(resp.format);\n      if (matcher) {\n        resp.format = matcher[1];\n      }\n    }\n    return resp;\n  }\n});\nconst SchemaPropertySubSchemaCollection = BaseCollection.extend({\n  model: SchemaPropertySubSchema\n});\nconst SchemaPropertySubSchemaAllOfCollection = SchemaPropertySubSchemaCollection.extend({\n  _type: 'allOf'\n});\nconst SchemaPropertySubSchemaOneOfCollection = SchemaPropertySubSchemaCollection.extend({\n  _type: 'oneOf'\n});\nconst SchemaPropertySubSchemaNoneOfCollection = SchemaPropertySubSchemaCollection.extend({\n  _type: 'noneOf'\n});\nconst constraintTypeErrorMessages = {\n  string: loc('schema.validation.field.value.must.string', 'courage'),\n  number: loc('schema.validation.field.value.must.number', 'courage'),\n  integer: loc('schema.validation.field.value.must.integer', 'courage'),\n  object: loc('schema.validation.field.value.must.object', 'courage')\n};\nconst loginFormatNonePattern = '.+';\nconst escapedLoginCharsRe = /[^a-zA-Z0-9-]/;\nconst constraintHandlers = {\n  between: '_checkBetweenConstraints',\n  greaterThan: '_checkGreaterThanConstraint',\n  lessThan: '_checkLessThanConstraint',\n  equals: '_checkEqualsConstraint'\n};\nconst SchemaPropertySchemaProperty = BaseModel.extend({\n  idAttribute: 'name',\n  local: {\n    __oneOf__: {\n      type: 'array',\n      minItems: 1\n    }\n  },\n  defaults: {\n    // OKTA-28445, set empty string by default as the key for each property when syncing with server\n    // so that server can respond with error when a name is not provided\n    name: '',\n    title: undefined,\n    type: undefined,\n    description: undefined,\n    required: false,\n    format: undefined,\n    // choose disable option be default.\n    union: undefined,\n    subSchemas: undefined,\n    settings: {\n      permissions: {\n        SELF: SchemaUtils.PERMISSION.READ_ONLY\n      }\n    },\n    unique: undefined,\n    __metadata__: undefined,\n    __isSensitive__: BaseModel.ComputedProperty(['settings'], function (settings) {\n      return !!(settings && settings.sensitive && settings.sensitive !== 'NOT_SENSITIVE');\n    }),\n    __isPendingSensitive__: BaseModel.ComputedProperty(['settings'], function (settings) {\n      return !!(settings && settings.sensitive && settings.sensitive === 'PENDING_SENSITIVE');\n    }),\n    __unique__: false,\n    __isUniqueValidated__: BaseModel.ComputedProperty(['unique'], function (unique) {\n      return unique === SchemaUtils.UNIQUENESS.UNIQUE_VALIDATED;\n    }),\n    __isPendingUniqueness__: BaseModel.ComputedProperty(['unique'], function (unique) {\n      return unique === SchemaUtils.UNIQUENESS.PENDING_UNIQUENESS;\n    }),\n    __isUniqueness__: BaseModel.ComputedProperty(['__isUniqueValidated__', '__isPendingUniqueness__'], function (isValidated, isPending) {\n      return isValidated || isPending;\n    }),\n    __canBeSensitive__: BaseModel.ComputedProperty(['__metadata__'], function (metadata) {\n      return !!(metadata && metadata.sensitivizable);\n    }),\n    __userPermission__: SchemaUtils.PERMISSION.READ_ONLY,\n    __displayType__: undefined,\n    __displayTypeLabel__: BaseModel.ComputedProperty(['__displayType__'], function (displayType) {\n      return SchemaUtils.DATATYPE[displayType] || displayType;\n    }),\n    __supportsMinMax__: false,\n    // use the private naming convention for these computed properties,\n    // to deal with the complexity in cloning schema with properties (toJSON({verbose: true})),\n    // to make sure these attributes are being excluded from api request\n    __isReadOnly__: BaseModel.ComputedProperty(['mutability'], function (mutability) {\n      return mutability === SchemaUtils.MUTABILITY.READONLY;\n    }),\n    __isWriteOnly__: BaseModel.ComputedProperty(['mutability'], function (mutability) {\n      return mutability === SchemaUtils.MUTABILITY.WRITEONLY;\n    }),\n    __displayScope__: undefined,\n    __isScopeSelf__: BaseModel.ComputedProperty(['scope'], function (scope) {\n      return scope === SchemaUtils.SCOPE.SELF;\n    }),\n    __isNoneScopeArrayType__: BaseModel.ComputedProperty(['__isScopeSelf__', '__displayType__'], function (isScopeSelf, displayType) {\n      return !isScopeSelf && SchemaUtils.isArrayDataType(displayType);\n    }),\n    __isImported__: BaseModel.ComputedProperty(['externalName'], function (externalName) {\n      return !!externalName;\n    }),\n    __isFromBaseSchema__: BaseModel.ComputedProperty(['__schemaMeta__'], function (schemaMeta) {\n      return schemaMeta && schemaMeta.name === 'base';\n    }),\n    // Only UI can turn on __enumDefined__ and reprocess the enum/oneOf value; otherwise,\n    // it should leave existing value untouch\n    __enumDefined__: false,\n    __supportEnum__: BaseModel.ComputedProperty(['__displayType__'], function (displayType) {\n      return oktaUnderscore.contains(SchemaUtils.SUPPORTENUM, displayType);\n    }),\n    __isNumberTypeEnum__: BaseModel.ComputedProperty(['__displayType__'], function (displayType) {\n      return oktaUnderscore.contains([SchemaUtils.NUMBER, SchemaUtils.ARRAYDISPLAYTYPE.arrayofnumber], displayType);\n    }),\n    __isIntegerTypeEnum__: BaseModel.ComputedProperty(['__displayType__'], function (displayType) {\n      return oktaUnderscore.contains([SchemaUtils.INTEGER, SchemaUtils.ARRAYDISPLAYTYPE.arrayofinteger], displayType);\n    }),\n    __isObjectTypeEnum__: BaseModel.ComputedProperty(['__displayType__'], function (displayType) {\n      return oktaUnderscore.contains([SchemaUtils.OBJECT, SchemaUtils.ARRAYDISPLAYTYPE.arrayofobject], displayType);\n    }),\n    __isStringTypeEnum__: BaseModel.ComputedProperty(['__displayType__'], function (displayType) {\n      return oktaUnderscore.contains([SchemaUtils.STRING, SchemaUtils.ARRAYDISPLAYTYPE.arrayofstring], displayType);\n    }),\n    __enumConstraintType__: BaseModel.ComputedProperty(['__isStringTypeEnum__', '__isNumberTypeEnum__', '__isIntegerTypeEnum__', '__isObjectTypeEnum__'], function (isStringType, isNumberType, isIntegerType, isObjectType) {\n      if (isStringType) {\n        return STRING;\n      }\n      if (isNumberType) {\n        return NUMBER;\n      }\n      if (isIntegerType) {\n        return INTEGER;\n      }\n      if (isObjectType) {\n        return OBJECT;\n      }\n    }),\n    __isEnumDefinedAndSupported__: BaseModel.ComputedProperty(['__enumDefined__', '__supportEnum__'], function (enumDefined, supportEnum) {\n      return enumDefined && supportEnum;\n    }),\n    __isLoginOfBaseSchema__: BaseModel.ComputedProperty(['__isFromBaseSchema__', 'name'], function (isFromBaseSchema, name) {\n      return isFromBaseSchema && name === 'login';\n    }),\n    __isLoginFormatRestrictionToEmail__: BaseModel.ComputedProperty(['__loginFormatRestriction__'], function (loginFormatRestriction) {\n      return loginFormatRestriction === SchemaUtils.LOGINPATTERNFORMAT.EMAIL;\n    })\n  },\n  initialize: function () {\n    BaseModel.prototype.initialize.apply(this, arguments);\n    this.listenTo(this, 'change:__displayType__', this._updateTypeFormatConstraints);\n    this.listenTo(this, 'change:type change:format change:items', this._updateDisplayType);\n    this.listenTo(this, 'change:__minVal__ change:__maxVal__', this._updateMinMax);\n    this.listenTo(this, 'change:__equals__', this._convertEqualsToMinMax);\n    this.listenTo(this, 'change:__constraint__', this._setConstraintText);\n    this._setConstraintText();\n    this._setLoginPattern();\n  },\n  parse: function (resp) {\n    /* eslint complexity: [2, 9] */\n    resp = oktaUnderscore.clone(resp);\n    if (resp.type === 'object' && resp.extendedType === 'image') {\n      resp.type = 'image';\n    }\n    resp['__displayType__'] = SchemaUtils.getDisplayType(resp.type, resp.format, resp.items ? resp.items.format ? resp.items.format : resp.items.type : undefined);\n    this._setRangeConstraints(resp);\n    resp['__supportsMinMax__'] = SchemaUtils.SUPPORTSMINMAX.indexOf(resp['__displayType__']) !== -1;\n    resp['__displayScope__'] = SchemaUtils.DISPLAYSCOPE[resp.scope] || SchemaUtils.DISPLAYSCOPE.NA;\n    if (resp.settings && resp.settings.permissions && resp.settings.permissions.SELF) {\n      resp['__userPermission__'] = resp.settings.permissions.SELF;\n    }\n    this._setMasterOverride(resp);\n    this._setSubSchemas(resp);\n    this._setUniqueness(resp);\n    return resp;\n  },\n  validate: function () {\n    const enumValidationError = this._validateEnumOneOf();\n    if (enumValidationError) {\n      return enumValidationError;\n    }\n    if (!this.get('__supportsMinMax__') || !this.get('__constraint__')) {\n      return undefined;\n    }\n    const constraitType = this.get('__constraint__');\n    const constraitHandler = this[constraintHandlers[constraitType]];\n    if (oktaUnderscore.isFunction(constraitHandler)) {\n      return constraitHandler.call(this);\n    } else {\n      Logger.warn('No constraint handler found for: ' + constraitType);\n      return undefined;\n    }\n  },\n  _checkBetweenConstraints: function () {\n    const minVal = this.get('__minVal__');\n    const maxVal = this.get('__maxVal__');\n    if (!minVal && !maxVal) {\n      return;\n    }\n    if (!minVal) {\n      return {\n        __minVal__: loc('schema.validation.field.enter.minimum.number', 'courage')\n      };\n    }\n    if (!maxVal) {\n      return {\n        __maxVal__: loc('schema.validation.field.enter.maximum.number', 'courage')\n      };\n    }\n    let val = this._checkIntegerConstraints('__minVal__', 'Min value');\n    if (val) {\n      return val;\n    }\n    val = this._checkIntegerConstraints('__maxVal__', 'Max value');\n    if (val) {\n      return val;\n    }\n    if (+minVal >= +maxVal) {\n      return {\n        __maxVal__: loc('schema.validation.field.maximum.must.be.greater.than.minimum', 'courage')\n      };\n    }\n  },\n  _checkGreaterThanConstraint: function () {\n    const minVal = this.get('__minVal__');\n    if (!minVal) {\n      return;\n    }\n    const val = this._checkIntegerConstraints('__minVal__', 'Constraint');\n    if (val) {\n      return val;\n    }\n  },\n  _checkLessThanConstraint: function () {\n    const maxVal = this.get('__maxVal__');\n    if (!maxVal) {\n      return;\n    }\n    const val = this._checkIntegerConstraints('__maxVal__', 'Constraint');\n    if (val) {\n      return val;\n    }\n  },\n  _checkEqualsConstraint: function () {\n    const equals = this.get('__equals__');\n    if (!equals) {\n      return;\n    }\n    const val = this._checkIntegerConstraints('__equals__', 'Constraint');\n    if (val) {\n      return val;\n    }\n  },\n  _checkIntegerConstraints: function (field, name) {\n    const val = this.get(field);\n    const error = {}; // eslint-disable-next-line no-restricted-globals\n\n    if (isNaN(val)) {\n      if (name === 'Min value') {\n        error[field] = loc('schema.validation.field.minimum.value.must.be.number', 'courage');\n      } else if (name === 'Max value') {\n        error[field] = loc('schema.validation.field.maximum.value.must.be.number', 'courage');\n      } else if (name === 'Constraint') {\n        error[field] = loc('schema.validation.field.constraint.must.be.number', 'courage');\n      }\n      return error;\n    }\n    if (+val < 0) {\n      if (name === 'Min value') {\n        error[field] = loc('schema.validation.field.minimum.number.must.be.greater.than.zero', 'courage');\n      } else if (name === 'Max value') {\n        error[field] = loc('schema.validation.field.maximum.number.must.be.greater.than.zero', 'courage');\n      } else if (name === 'Constraint') {\n        error[field] = loc('schema.validation.field.number.must.be.greater.than.zero', 'courage');\n      }\n      return error;\n    }\n  },\n  _setMasterOverride: function (resp) {\n    if (resp.settings && resp.settings.masterOverride && resp.settings.masterOverride) {\n      const masterOverrideValue = resp.settings.masterOverride.value;\n      if (oktaUnderscore.isArray(masterOverrideValue) && !oktaUnderscore.isEmpty(masterOverrideValue)) {\n        resp['__masterOverrideType__'] = 'OVERRIDE';\n        resp['__masterOverrideValue__'] = masterOverrideValue || [];\n      } else {\n        resp['__masterOverrideType__'] = resp.settings.masterOverride.type;\n      }\n    } else {\n      resp['__masterOverrideType__'] = 'INHERIT';\n    }\n  },\n  _setRangeConstraints: function (resp) {\n    /* eslint complexity: [2, 11] */\n    if (resp['__displayType__'] === STRING) {\n      resp['__minVal__'] = resp.minLength;\n      resp['__maxVal__'] = resp.maxLength;\n    } else if (resp['__displayType__'] === INTEGER || resp['__displayType__'] === NUMBER) {\n      resp['__minVal__'] = resp.minimum;\n      resp['__maxVal__'] = resp.maximum;\n    }\n    if (resp['__minVal__'] && resp['__maxVal__']) {\n      if (resp['__minVal__'] === resp['__maxVal__']) {\n        resp['__constraint__'] = 'equals';\n        resp['__equals__'] = resp['__minVal__'];\n      } else {\n        resp['__constraint__'] = 'between';\n      }\n    } else if (!resp['__minVal__'] && resp['__maxVal__']) {\n      resp['__constraint__'] = 'lessThan';\n    } else if (!resp['__maxVal__'] && resp['__minVal__']) {\n      resp['__constraint__'] = 'greaterThan';\n    }\n  },\n  _setSubSchemas: function (resp) {\n    if (resp.allOf) {\n      resp['subSchemas'] = new SchemaPropertySubSchemaAllOfCollection(resp.allOf, {\n        parse: true\n      });\n    } else if (resp.oneOf) {\n      resp['subSchemas'] = new SchemaPropertySubSchemaOneOfCollection(resp.oneOf, {\n        parse: true\n      });\n    } else if (resp.noneOf) {\n      resp['subSchemas'] = new SchemaPropertySubSchemaNoneOfCollection(resp.noneOf, {\n        parse: true\n      });\n    }\n  },\n  _setUniqueness: function (resp) {\n    const unique = resp && resp.unique;\n    resp['__unique__'] = !!(unique && (unique === SchemaUtils.UNIQUENESS.UNIQUE_VALIDATED || unique === SchemaUtils.UNIQUENESS.PENDING_UNIQUENESS));\n  },\n  _setLoginPattern: function () {\n    if (!this.get('__isLoginOfBaseSchema__')) {\n      return;\n    }\n    const pattern = this.get('pattern');\n    if (pattern === loginFormatNonePattern) {\n      this.set('__loginFormatRestriction__', SchemaUtils.LOGINPATTERNFORMAT.NONE);\n    } else if (pattern) {\n      this.set('__loginFormatRestriction__', SchemaUtils.LOGINPATTERNFORMAT.CUSTOM);\n      this.set('__loginFormatRestrictionCustom__', this._extractLoginPattern(pattern));\n    } else {\n      this.set('__loginFormatRestriction__', SchemaUtils.LOGINPATTERNFORMAT.EMAIL);\n    }\n  },\n  _updateDisplayType: function () {\n    const type = this.get('type');\n    if (type === STRING && this.get('format')) {\n      this.set('__displayType__', SchemaUtils.FORMATDISPLAYTYPE[this.get('format')]);\n    } else {\n      const items = this.get('items');\n      const arraytype = items && (items.format ? items.format : items.type);\n      if (type && arraytype) {\n        this.set('__displayType__', SchemaUtils.ARRAYDISPLAYTYPE[getArrayTypeName(type, arraytype)]);\n      } else {\n        this.set('__displayType__', type);\n      }\n    }\n  },\n  _validateEnumOneOf: function () {\n    if (!this.get('__isEnumDefinedAndSupported__')) {\n      return;\n    }\n    const enumOneOf = this.get('__oneOf__') || [];\n    if (oktaUnderscore.isEmpty(enumOneOf)) {\n      return {\n        __oneOf__: loc('model.validation.field.blank', 'courage')\n      };\n    }\n    if (!this._isValidateOneOfConstraint(enumOneOf)) {\n      const constraintType = this.get('__enumConstraintType__');\n      const errorTypeMsg = constraintTypeErrorMessages[constraintType];\n      return {\n        __oneOf__: errorTypeMsg\n      };\n    }\n  },\n  _isValidateOneOfConstraint: function (values) {\n    const constraintType = this.get('__enumConstraintType__');\n    return oktaUnderscore.all(values, function (value) {\n      return EnumTypeHelper.isConstraintValueMatchType(value.const, constraintType);\n    });\n  },\n  toJSON: function () {\n    let json = BaseModel.prototype.toJSON.apply(this, arguments);\n    json.settings = {\n      permissions: {}\n    };\n    json.settings.permissions['SELF'] = this.get('__userPermission__'); // omit \"sensitive\" filed will have default it value to false.\n\n    if (this.get('__isSensitive__')) {\n      json.settings.sensitive = this.get('__isSensitive__');\n    }\n    if (this.get('type') === 'image') {\n      json.type = 'object';\n      json.extendedType = 'image';\n    }\n    json = this._enumAssignment(json);\n    json = this._attributeOverrideToJson(json);\n    json = this._normalizeUnionValue(json);\n    json = this._patternAssignment(json);\n    json = this._uniquenessAssignment(json);\n    return json;\n  },\n  _attributeOverrideToJson: function (json) {\n    const masterOverrideType = this.get('__masterOverrideType__');\n    const masterOverrideValue = this.get('__masterOverrideValue__');\n    if (masterOverrideType === 'OKTA_MASTERED') {\n      json.settings.masterOverride = {\n        type: 'OKTA_MASTERED'\n      };\n    } else if (masterOverrideType === 'OVERRIDE') {\n      json.settings.masterOverride = {\n        type: 'ORDERED_LIST',\n        value: []\n      };\n      if (masterOverrideValue instanceof BaseCollection) {\n        oktaUnderscore.each(masterOverrideValue.toJSON(), function (overrideProfile) {\n          json.settings.masterOverride.value.push(overrideProfile.id);\n        });\n      } else if (masterOverrideValue instanceof Array) {\n        json.settings.masterOverride.value = masterOverrideValue;\n      }\n      if (oktaUnderscore.isEmpty(json.settings.masterOverride.value)) {\n        delete json.settings.masterOverride;\n      }\n    }\n    if (masterOverrideType === 'INHERIT') {\n      delete json.settings.masterOverride;\n    }\n    return json;\n  },\n  /**\n   * Only allow set \"union\" value when isScopeSelf is NONE and displayType is\n   * array of (string/number/integer), otherwise reset to default.\n   *\n   * @see /universal-directory/shared/views/components/UnionGroupValuesRadio.js\n   */\n  _normalizeUnionValue: function (json) {\n    if (!this.get('__isNoneScopeArrayType__')) {\n      json['union'] = undefined;\n    }\n    return json;\n  },\n  _enumAssignment: function (json) {\n    if (!this.get('__isEnumDefinedAndSupported__')) {\n      return json;\n    } // backfill empty title by constraint\n\n    const enumOneOf = this._getEnumOneOfWithTitleCheck();\n    if (this.get('type') === 'array') {\n      delete json.items.enum;\n      json.items.oneOf = enumOneOf;\n    } else {\n      delete json.enum;\n      json.oneOf = enumOneOf;\n    }\n    return json;\n  },\n  _patternAssignment: function (json) {\n    if (!this.get('__isLoginOfBaseSchema__') || !this.get('__loginFormatRestriction__')) {\n      return json;\n    }\n    switch (this.get('__loginFormatRestriction__')) {\n      case SchemaUtils.LOGINPATTERNFORMAT.EMAIL:\n        delete json.pattern;\n        break;\n      case SchemaUtils.LOGINPATTERNFORMAT.CUSTOM:\n        json.pattern = this._buildLoginPattern(this.get('__loginFormatRestrictionCustom__'));\n        break;\n      case SchemaUtils.LOGINPATTERNFORMAT.NONE:\n        json.pattern = loginFormatNonePattern;\n        break;\n    }\n    return json;\n  },\n  _uniquenessAssignment: function (json) {\n    if (!this.get('__unique__')) {\n      delete json.unique;\n    } else if (!this.get('__isUniqueness__')) {\n      json.unique = SchemaUtils.UNIQUENESS.UNIQUE_VALIDATED;\n    }\n    return json;\n  },\n  /**\n   * Character should be escaped except letters, digits and hyphen\n   */\n  _escapedRegexChar: function (pattern, index) {\n    const char = pattern.charAt(index);\n    if (escapedLoginCharsRe.test(char)) {\n      return '\\\\' + char;\n    }\n    return char;\n  },\n  _buildLoginPattern: function (pattern) {\n    let result = '';\n    for (var i = 0; i < pattern.length; i++) {\n      result += this._escapedRegexChar(pattern, i);\n    }\n    return '[' + result + ']+';\n  },\n  _extractLoginPattern: function (pattern) {\n    const re = /^\\[(.*)\\]\\+/;\n    const matches = pattern.match(re);\n    return matches ? matches[1].replace(/\\\\(.)/g, '$1') : pattern;\n  },\n  _getEnumOneOfWithTitleCheck: function () {\n    const enumOneOf = this.get('__oneOf__');\n    return oktaUnderscore.map(enumOneOf, function (value) {\n      if (oktaJQueryStatic.trim(value.title) !== '') {\n        return value;\n      }\n      value.title = !oktaUnderscore.isString(value.const) ? JSON.stringify(value.const) : value.const;\n      return value;\n    });\n  },\n  _updateTypeFormatConstraints: function () {\n    const displayType = this.get('__displayType__'); // OKTA-31952 reset format according to its displayType\n\n    this.unset('format', {\n      silent: true\n    });\n    this.unset('items', {\n      silent: true\n    });\n    this.set(SchemaUtils.DISPLAYTYPES[displayType]);\n    if (displayType !== NUMBER && displayType !== INTEGER) {\n      this.unset('minimum');\n      this.unset('maximum');\n    }\n    if (displayType !== STRING) {\n      this.unset('minLength');\n      this.unset('maxLength');\n    }\n    this.unset('__minVal__');\n    this.unset('__maxVal__');\n    this.unset('__equals__');\n    this.set('__supportsMinMax__', SchemaUtils.SUPPORTSMINMAX.indexOf(this.get('__displayType__')) !== -1);\n  },\n  _updateMinMax: function () {\n    let min;\n    let max;\n    const displayType = this.get('__displayType__');\n    if (displayType === STRING) {\n      min = 'minLength';\n      max = 'maxLength';\n    } else if (displayType === INTEGER || displayType === NUMBER) {\n      min = 'minimum';\n      max = 'maximum';\n    }\n    if (this.get('__minVal__')) {\n      this.set(min, parseInt(this.get('__minVal__'), 10));\n    } else {\n      this.unset(min);\n    }\n    if (this.get('__maxVal__')) {\n      this.set(max, parseInt(this.get('__maxVal__'), 10));\n    } else {\n      this.unset(max);\n    }\n  },\n  _convertEqualsToMinMax: function () {\n    const equals = this.get('__equals__');\n    if (equals) {\n      this.set('__minVal__', equals);\n      this.set('__maxVal__', equals);\n    }\n  },\n  /*\n   Normally we would use a derived property here but derived properties do not work with the model Clone function\n   so we use this workaround instead.\n   */\n  _setConstraintText: function () {\n    const constraint = this.get('__constraint__');\n    const min = this.get('__minVal__');\n    const max = this.get('__maxVal__');\n    const equals = this.get('__equals__');\n    switch (constraint) {\n      case 'between':\n        this.set('__constraintText__', 'Between ' + min + ' and ' + max);\n        break;\n      case 'greaterThan':\n        this.set('__constraintText__', 'Greater than ' + min);\n        break;\n      case 'lessThan':\n        this.set('__constraintText__', 'Less than ' + max);\n        break;\n      case 'equals':\n        this.set('__constraintText__', 'Equals ' + equals);\n        break;\n      default:\n        this.set('__constraintText__', '');\n        break;\n    }\n  },\n  cleanup: function () {\n    if (this.get('__constraint__') === 'lessThan') {\n      this.unset('__minVal__');\n    } else if (this.get('__constraint__') === 'greaterThan') {\n      this.unset('__maxVal__');\n    }\n    if (this.get('scope') !== SchemaUtils.SCOPE.SYSTEM) {\n      if (this.get('__isScopeSelf__') === true) {\n        this.set({\n          scope: SchemaUtils.SCOPE.SELF\n        }, {\n          silent: true\n        });\n      } else {\n        this.unset('scope');\n      }\n    }\n    if (!this.get('__unique__')) {\n      this.unset('unique');\n    }\n  },\n  /**\n   * Since there is not an dedicated attribute to flag enum type,\n   * use enum values to determine whether the property is enum type or not.\n   */\n  isEnumType: function () {\n    return !!this.getEnumValues();\n  },\n  getEnumValues: function () {\n    return this.get('oneOf') || this.get('enum') || this.get('items') && this.get('items')['oneOf'] || this.get('items') && this.get('items')['enum'];\n  },\n  detectHasEnumDefined: function () {\n    const enumValues = this.getEnumValues();\n    if (!enumValues) {\n      return;\n    }\n    this.set('__oneOf__', EnumTypeHelper.convertToOneOf(enumValues));\n    this.set('__enumDefined__', true);\n  }\n});\nconst SchemaPropertySchemaProperties = BaseCollection.extend({\n  model: SchemaPropertySchemaProperty,\n  clone: function () {\n    return new this.constructor(this.toJSON({\n      verbose: true\n    }), {\n      parse: true\n    });\n  },\n  areAllReadOnly: function () {\n    return oktaUnderscore.all(this.pluck('__isReadOnly__'));\n  },\n  createModelProperties: function () {\n    return this.reduce(function (p, schemaProperty) {\n      const type = schemaProperty.get('type');\n      p[schemaProperty.id] = oktaUnderscore.clone(SchemaUtils.DISPLAYTYPES[type]);\n      if (SchemaUtils.SUPPORTSMINMAX.indexOf(type) !== -1) {\n        p[schemaProperty.id].minLength = schemaProperty.get('minLength');\n        p[schemaProperty.id].maxLength = schemaProperty.get('maxLength');\n      }\n      if (type === 'string') {\n        p[schemaProperty.id].format = schemaProperty.get('format');\n      }\n      return p;\n    }, {});\n  }\n});\nvar SchemaProperty = {\n  Model: SchemaPropertySchemaProperty,\n  Collection: SchemaPropertySchemaProperties\n};\nexport { SchemaProperty as default };","map":{"version":3,"names":["oktaJQueryStatic","oktaUnderscore","BaseCollection","BaseModel","Logger","SchemaUtils","StringUtil","EnumTypeHelper","loc","localize","STRING","NUMBER","INTEGER","OBJECT","getArrayTypeName","type","elementType","SchemaPropertySubSchema","extend","defaults","description","undefined","minLength","maxLength","format","parse","resp","isString","matcher","exec","SchemaPropertySubSchemaCollection","model","SchemaPropertySubSchemaAllOfCollection","_type","SchemaPropertySubSchemaOneOfCollection","SchemaPropertySubSchemaNoneOfCollection","constraintTypeErrorMessages","string","number","integer","object","loginFormatNonePattern","escapedLoginCharsRe","constraintHandlers","between","greaterThan","lessThan","equals","SchemaPropertySchemaProperty","idAttribute","local","__oneOf__","minItems","name","title","required","union","subSchemas","settings","permissions","SELF","PERMISSION","READ_ONLY","unique","__metadata__","__isSensitive__","ComputedProperty","sensitive","__isPendingSensitive__","__unique__","__isUniqueValidated__","UNIQUENESS","UNIQUE_VALIDATED","__isPendingUniqueness__","PENDING_UNIQUENESS","__isUniqueness__","isValidated","isPending","__canBeSensitive__","metadata","sensitivizable","__userPermission__","__displayType__","__displayTypeLabel__","displayType","DATATYPE","__supportsMinMax__","__isReadOnly__","mutability","MUTABILITY","READONLY","__isWriteOnly__","WRITEONLY","__displayScope__","__isScopeSelf__","scope","SCOPE","__isNoneScopeArrayType__","isScopeSelf","isArrayDataType","__isImported__","externalName","__isFromBaseSchema__","schemaMeta","__enumDefined__","__supportEnum__","contains","SUPPORTENUM","__isNumberTypeEnum__","ARRAYDISPLAYTYPE","arrayofnumber","__isIntegerTypeEnum__","arrayofinteger","__isObjectTypeEnum__","arrayofobject","__isStringTypeEnum__","arrayofstring","__enumConstraintType__","isStringType","isNumberType","isIntegerType","isObjectType","__isEnumDefinedAndSupported__","enumDefined","supportEnum","__isLoginOfBaseSchema__","isFromBaseSchema","__isLoginFormatRestrictionToEmail__","loginFormatRestriction","LOGINPATTERNFORMAT","EMAIL","initialize","prototype","apply","arguments","listenTo","_updateTypeFormatConstraints","_updateDisplayType","_updateMinMax","_convertEqualsToMinMax","_setConstraintText","_setLoginPattern","clone","extendedType","getDisplayType","items","_setRangeConstraints","SUPPORTSMINMAX","indexOf","DISPLAYSCOPE","NA","_setMasterOverride","_setSubSchemas","_setUniqueness","validate","enumValidationError","_validateEnumOneOf","get","constraitType","constraitHandler","isFunction","call","warn","_checkBetweenConstraints","minVal","maxVal","__minVal__","__maxVal__","val","_checkIntegerConstraints","_checkGreaterThanConstraint","_checkLessThanConstraint","_checkEqualsConstraint","field","error","isNaN","masterOverride","masterOverrideValue","value","isArray","isEmpty","minimum","maximum","allOf","oneOf","noneOf","pattern","set","NONE","CUSTOM","_extractLoginPattern","FORMATDISPLAYTYPE","arraytype","enumOneOf","_isValidateOneOfConstraint","constraintType","errorTypeMsg","values","all","isConstraintValueMatchType","const","toJSON","json","_enumAssignment","_attributeOverrideToJson","_normalizeUnionValue","_patternAssignment","_uniquenessAssignment","masterOverrideType","each","overrideProfile","push","id","Array","_getEnumOneOfWithTitleCheck","enum","_buildLoginPattern","_escapedRegexChar","index","char","charAt","test","result","i","length","re","matches","match","replace","map","trim","JSON","stringify","unset","silent","DISPLAYTYPES","min","max","parseInt","constraint","cleanup","SYSTEM","isEnumType","getEnumValues","detectHasEnumDefined","enumValues","convertToOneOf","SchemaPropertySchemaProperties","constructor","verbose","areAllReadOnly","pluck","createModelProperties","reduce","p","schemaProperty","SchemaProperty","Model","Collection","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/packages/@okta/courage-dist/esm/src/courage/models/SchemaProperty.js"],"sourcesContent":["import oktaJQueryStatic from '../util/jquery-wrapper.js';\nimport oktaUnderscore from '../util/underscore-wrapper.js';\nimport BaseCollection from './BaseCollection.js';\nimport BaseModel from './BaseModel.js';\nimport Logger from '../util/Logger.js';\nimport SchemaUtils from '../util/SchemaUtil.js';\nimport StringUtil from '../util/StringUtil.js';\nimport EnumTypeHelper from '../views/forms/helpers/EnumTypeHelper.js';\n\n/* eslint-disable inclusive-language/use-inclusive-words */\nconst loc = StringUtil.localize;\nconst STRING = SchemaUtils.STRING;\nconst NUMBER = SchemaUtils.NUMBER;\nconst INTEGER = SchemaUtils.INTEGER;\nconst OBJECT = SchemaUtils.OBJECT;\nconst getArrayTypeName = function (type, elementType) {\n  return type + 'of' + elementType;\n};\nconst SchemaPropertySubSchema = BaseModel.extend({\n  defaults: {\n    description: undefined,\n    minLength: undefined,\n    maxLength: undefined,\n    format: undefined\n  },\n  parse: function (resp) {\n    if (oktaUnderscore.isString(resp.format)) {\n      const matcher = /^\\/(.+)\\/$/.exec(resp.format);\n      if (matcher) {\n        resp.format = matcher[1];\n      }\n    }\n    return resp;\n  }\n});\nconst SchemaPropertySubSchemaCollection = BaseCollection.extend({\n  model: SchemaPropertySubSchema\n});\nconst SchemaPropertySubSchemaAllOfCollection = SchemaPropertySubSchemaCollection.extend({\n  _type: 'allOf'\n});\nconst SchemaPropertySubSchemaOneOfCollection = SchemaPropertySubSchemaCollection.extend({\n  _type: 'oneOf'\n});\nconst SchemaPropertySubSchemaNoneOfCollection = SchemaPropertySubSchemaCollection.extend({\n  _type: 'noneOf'\n});\nconst constraintTypeErrorMessages = {\n  string: loc('schema.validation.field.value.must.string', 'courage'),\n  number: loc('schema.validation.field.value.must.number', 'courage'),\n  integer: loc('schema.validation.field.value.must.integer', 'courage'),\n  object: loc('schema.validation.field.value.must.object', 'courage')\n};\nconst loginFormatNonePattern = '.+';\nconst escapedLoginCharsRe = /[^a-zA-Z0-9-]/;\nconst constraintHandlers = {\n  between: '_checkBetweenConstraints',\n  greaterThan: '_checkGreaterThanConstraint',\n  lessThan: '_checkLessThanConstraint',\n  equals: '_checkEqualsConstraint'\n};\nconst SchemaPropertySchemaProperty = BaseModel.extend({\n  idAttribute: 'name',\n  local: {\n    __oneOf__: {\n      type: 'array',\n      minItems: 1\n    }\n  },\n  defaults: {\n    // OKTA-28445, set empty string by default as the key for each property when syncing with server\n    // so that server can respond with error when a name is not provided\n    name: '',\n    title: undefined,\n    type: undefined,\n    description: undefined,\n    required: false,\n    format: undefined,\n    // choose disable option be default.\n    union: undefined,\n    subSchemas: undefined,\n    settings: {\n      permissions: {\n        SELF: SchemaUtils.PERMISSION.READ_ONLY\n      }\n    },\n    unique: undefined,\n    __metadata__: undefined,\n    __isSensitive__: BaseModel.ComputedProperty(['settings'], function (settings) {\n      return !!(settings && settings.sensitive && settings.sensitive !== 'NOT_SENSITIVE');\n    }),\n    __isPendingSensitive__: BaseModel.ComputedProperty(['settings'], function (settings) {\n      return !!(settings && settings.sensitive && settings.sensitive === 'PENDING_SENSITIVE');\n    }),\n    __unique__: false,\n    __isUniqueValidated__: BaseModel.ComputedProperty(['unique'], function (unique) {\n      return unique === SchemaUtils.UNIQUENESS.UNIQUE_VALIDATED;\n    }),\n    __isPendingUniqueness__: BaseModel.ComputedProperty(['unique'], function (unique) {\n      return unique === SchemaUtils.UNIQUENESS.PENDING_UNIQUENESS;\n    }),\n    __isUniqueness__: BaseModel.ComputedProperty(['__isUniqueValidated__', '__isPendingUniqueness__'], function (isValidated, isPending) {\n      return isValidated || isPending;\n    }),\n    __canBeSensitive__: BaseModel.ComputedProperty(['__metadata__'], function (metadata) {\n      return !!(metadata && metadata.sensitivizable);\n    }),\n    __userPermission__: SchemaUtils.PERMISSION.READ_ONLY,\n    __displayType__: undefined,\n    __displayTypeLabel__: BaseModel.ComputedProperty(['__displayType__'], function (displayType) {\n      return SchemaUtils.DATATYPE[displayType] || displayType;\n    }),\n    __supportsMinMax__: false,\n    // use the private naming convention for these computed properties,\n    // to deal with the complexity in cloning schema with properties (toJSON({verbose: true})),\n    // to make sure these attributes are being excluded from api request\n    __isReadOnly__: BaseModel.ComputedProperty(['mutability'], function (mutability) {\n      return mutability === SchemaUtils.MUTABILITY.READONLY;\n    }),\n    __isWriteOnly__: BaseModel.ComputedProperty(['mutability'], function (mutability) {\n      return mutability === SchemaUtils.MUTABILITY.WRITEONLY;\n    }),\n    __displayScope__: undefined,\n    __isScopeSelf__: BaseModel.ComputedProperty(['scope'], function (scope) {\n      return scope === SchemaUtils.SCOPE.SELF;\n    }),\n    __isNoneScopeArrayType__: BaseModel.ComputedProperty(['__isScopeSelf__', '__displayType__'], function (isScopeSelf, displayType) {\n      return !isScopeSelf && SchemaUtils.isArrayDataType(displayType);\n    }),\n    __isImported__: BaseModel.ComputedProperty(['externalName'], function (externalName) {\n      return !!externalName;\n    }),\n    __isFromBaseSchema__: BaseModel.ComputedProperty(['__schemaMeta__'], function (schemaMeta) {\n      return schemaMeta && schemaMeta.name === 'base';\n    }),\n    // Only UI can turn on __enumDefined__ and reprocess the enum/oneOf value; otherwise,\n    // it should leave existing value untouch\n    __enumDefined__: false,\n    __supportEnum__: BaseModel.ComputedProperty(['__displayType__'], function (displayType) {\n      return oktaUnderscore.contains(SchemaUtils.SUPPORTENUM, displayType);\n    }),\n    __isNumberTypeEnum__: BaseModel.ComputedProperty(['__displayType__'], function (displayType) {\n      return oktaUnderscore.contains([SchemaUtils.NUMBER, SchemaUtils.ARRAYDISPLAYTYPE.arrayofnumber], displayType);\n    }),\n    __isIntegerTypeEnum__: BaseModel.ComputedProperty(['__displayType__'], function (displayType) {\n      return oktaUnderscore.contains([SchemaUtils.INTEGER, SchemaUtils.ARRAYDISPLAYTYPE.arrayofinteger], displayType);\n    }),\n    __isObjectTypeEnum__: BaseModel.ComputedProperty(['__displayType__'], function (displayType) {\n      return oktaUnderscore.contains([SchemaUtils.OBJECT, SchemaUtils.ARRAYDISPLAYTYPE.arrayofobject], displayType);\n    }),\n    __isStringTypeEnum__: BaseModel.ComputedProperty(['__displayType__'], function (displayType) {\n      return oktaUnderscore.contains([SchemaUtils.STRING, SchemaUtils.ARRAYDISPLAYTYPE.arrayofstring], displayType);\n    }),\n    __enumConstraintType__: BaseModel.ComputedProperty(['__isStringTypeEnum__', '__isNumberTypeEnum__', '__isIntegerTypeEnum__', '__isObjectTypeEnum__'], function (isStringType, isNumberType, isIntegerType, isObjectType) {\n      if (isStringType) {\n        return STRING;\n      }\n      if (isNumberType) {\n        return NUMBER;\n      }\n      if (isIntegerType) {\n        return INTEGER;\n      }\n      if (isObjectType) {\n        return OBJECT;\n      }\n    }),\n    __isEnumDefinedAndSupported__: BaseModel.ComputedProperty(['__enumDefined__', '__supportEnum__'], function (enumDefined, supportEnum) {\n      return enumDefined && supportEnum;\n    }),\n    __isLoginOfBaseSchema__: BaseModel.ComputedProperty(['__isFromBaseSchema__', 'name'], function (isFromBaseSchema, name) {\n      return isFromBaseSchema && name === 'login';\n    }),\n    __isLoginFormatRestrictionToEmail__: BaseModel.ComputedProperty(['__loginFormatRestriction__'], function (loginFormatRestriction) {\n      return loginFormatRestriction === SchemaUtils.LOGINPATTERNFORMAT.EMAIL;\n    })\n  },\n  initialize: function () {\n    BaseModel.prototype.initialize.apply(this, arguments);\n    this.listenTo(this, 'change:__displayType__', this._updateTypeFormatConstraints);\n    this.listenTo(this, 'change:type change:format change:items', this._updateDisplayType);\n    this.listenTo(this, 'change:__minVal__ change:__maxVal__', this._updateMinMax);\n    this.listenTo(this, 'change:__equals__', this._convertEqualsToMinMax);\n    this.listenTo(this, 'change:__constraint__', this._setConstraintText);\n    this._setConstraintText();\n    this._setLoginPattern();\n  },\n  parse: function (resp) {\n    /* eslint complexity: [2, 9] */\n    resp = oktaUnderscore.clone(resp);\n    if (resp.type === 'object' && resp.extendedType === 'image') {\n      resp.type = 'image';\n    }\n    resp['__displayType__'] = SchemaUtils.getDisplayType(resp.type, resp.format, resp.items ? resp.items.format ? resp.items.format : resp.items.type : undefined);\n    this._setRangeConstraints(resp);\n    resp['__supportsMinMax__'] = SchemaUtils.SUPPORTSMINMAX.indexOf(resp['__displayType__']) !== -1;\n    resp['__displayScope__'] = SchemaUtils.DISPLAYSCOPE[resp.scope] || SchemaUtils.DISPLAYSCOPE.NA;\n    if (resp.settings && resp.settings.permissions && resp.settings.permissions.SELF) {\n      resp['__userPermission__'] = resp.settings.permissions.SELF;\n    }\n    this._setMasterOverride(resp);\n    this._setSubSchemas(resp);\n    this._setUniqueness(resp);\n    return resp;\n  },\n  validate: function () {\n    const enumValidationError = this._validateEnumOneOf();\n    if (enumValidationError) {\n      return enumValidationError;\n    }\n    if (!this.get('__supportsMinMax__') || !this.get('__constraint__')) {\n      return undefined;\n    }\n    const constraitType = this.get('__constraint__');\n    const constraitHandler = this[constraintHandlers[constraitType]];\n    if (oktaUnderscore.isFunction(constraitHandler)) {\n      return constraitHandler.call(this);\n    } else {\n      Logger.warn('No constraint handler found for: ' + constraitType);\n      return undefined;\n    }\n  },\n  _checkBetweenConstraints: function () {\n    const minVal = this.get('__minVal__');\n    const maxVal = this.get('__maxVal__');\n    if (!minVal && !maxVal) {\n      return;\n    }\n    if (!minVal) {\n      return {\n        __minVal__: loc('schema.validation.field.enter.minimum.number', 'courage')\n      };\n    }\n    if (!maxVal) {\n      return {\n        __maxVal__: loc('schema.validation.field.enter.maximum.number', 'courage')\n      };\n    }\n    let val = this._checkIntegerConstraints('__minVal__', 'Min value');\n    if (val) {\n      return val;\n    }\n    val = this._checkIntegerConstraints('__maxVal__', 'Max value');\n    if (val) {\n      return val;\n    }\n    if (+minVal >= +maxVal) {\n      return {\n        __maxVal__: loc('schema.validation.field.maximum.must.be.greater.than.minimum', 'courage')\n      };\n    }\n  },\n  _checkGreaterThanConstraint: function () {\n    const minVal = this.get('__minVal__');\n    if (!minVal) {\n      return;\n    }\n    const val = this._checkIntegerConstraints('__minVal__', 'Constraint');\n    if (val) {\n      return val;\n    }\n  },\n  _checkLessThanConstraint: function () {\n    const maxVal = this.get('__maxVal__');\n    if (!maxVal) {\n      return;\n    }\n    const val = this._checkIntegerConstraints('__maxVal__', 'Constraint');\n    if (val) {\n      return val;\n    }\n  },\n  _checkEqualsConstraint: function () {\n    const equals = this.get('__equals__');\n    if (!equals) {\n      return;\n    }\n    const val = this._checkIntegerConstraints('__equals__', 'Constraint');\n    if (val) {\n      return val;\n    }\n  },\n  _checkIntegerConstraints: function (field, name) {\n    const val = this.get(field);\n    const error = {}; // eslint-disable-next-line no-restricted-globals\n\n    if (isNaN(val)) {\n      if (name === 'Min value') {\n        error[field] = loc('schema.validation.field.minimum.value.must.be.number', 'courage');\n      } else if (name === 'Max value') {\n        error[field] = loc('schema.validation.field.maximum.value.must.be.number', 'courage');\n      } else if (name === 'Constraint') {\n        error[field] = loc('schema.validation.field.constraint.must.be.number', 'courage');\n      }\n      return error;\n    }\n    if (+val < 0) {\n      if (name === 'Min value') {\n        error[field] = loc('schema.validation.field.minimum.number.must.be.greater.than.zero', 'courage');\n      } else if (name === 'Max value') {\n        error[field] = loc('schema.validation.field.maximum.number.must.be.greater.than.zero', 'courage');\n      } else if (name === 'Constraint') {\n        error[field] = loc('schema.validation.field.number.must.be.greater.than.zero', 'courage');\n      }\n      return error;\n    }\n  },\n  _setMasterOverride: function (resp) {\n    if (resp.settings && resp.settings.masterOverride && resp.settings.masterOverride) {\n      const masterOverrideValue = resp.settings.masterOverride.value;\n      if (oktaUnderscore.isArray(masterOverrideValue) && !oktaUnderscore.isEmpty(masterOverrideValue)) {\n        resp['__masterOverrideType__'] = 'OVERRIDE';\n        resp['__masterOverrideValue__'] = masterOverrideValue || [];\n      } else {\n        resp['__masterOverrideType__'] = resp.settings.masterOverride.type;\n      }\n    } else {\n      resp['__masterOverrideType__'] = 'INHERIT';\n    }\n  },\n  _setRangeConstraints: function (resp) {\n    /* eslint complexity: [2, 11] */\n    if (resp['__displayType__'] === STRING) {\n      resp['__minVal__'] = resp.minLength;\n      resp['__maxVal__'] = resp.maxLength;\n    } else if (resp['__displayType__'] === INTEGER || resp['__displayType__'] === NUMBER) {\n      resp['__minVal__'] = resp.minimum;\n      resp['__maxVal__'] = resp.maximum;\n    }\n    if (resp['__minVal__'] && resp['__maxVal__']) {\n      if (resp['__minVal__'] === resp['__maxVal__']) {\n        resp['__constraint__'] = 'equals';\n        resp['__equals__'] = resp['__minVal__'];\n      } else {\n        resp['__constraint__'] = 'between';\n      }\n    } else if (!resp['__minVal__'] && resp['__maxVal__']) {\n      resp['__constraint__'] = 'lessThan';\n    } else if (!resp['__maxVal__'] && resp['__minVal__']) {\n      resp['__constraint__'] = 'greaterThan';\n    }\n  },\n  _setSubSchemas: function (resp) {\n    if (resp.allOf) {\n      resp['subSchemas'] = new SchemaPropertySubSchemaAllOfCollection(resp.allOf, {\n        parse: true\n      });\n    } else if (resp.oneOf) {\n      resp['subSchemas'] = new SchemaPropertySubSchemaOneOfCollection(resp.oneOf, {\n        parse: true\n      });\n    } else if (resp.noneOf) {\n      resp['subSchemas'] = new SchemaPropertySubSchemaNoneOfCollection(resp.noneOf, {\n        parse: true\n      });\n    }\n  },\n  _setUniqueness: function (resp) {\n    const unique = resp && resp.unique;\n    resp['__unique__'] = !!(unique && (unique === SchemaUtils.UNIQUENESS.UNIQUE_VALIDATED || unique === SchemaUtils.UNIQUENESS.PENDING_UNIQUENESS));\n  },\n  _setLoginPattern: function () {\n    if (!this.get('__isLoginOfBaseSchema__')) {\n      return;\n    }\n    const pattern = this.get('pattern');\n    if (pattern === loginFormatNonePattern) {\n      this.set('__loginFormatRestriction__', SchemaUtils.LOGINPATTERNFORMAT.NONE);\n    } else if (pattern) {\n      this.set('__loginFormatRestriction__', SchemaUtils.LOGINPATTERNFORMAT.CUSTOM);\n      this.set('__loginFormatRestrictionCustom__', this._extractLoginPattern(pattern));\n    } else {\n      this.set('__loginFormatRestriction__', SchemaUtils.LOGINPATTERNFORMAT.EMAIL);\n    }\n  },\n  _updateDisplayType: function () {\n    const type = this.get('type');\n    if (type === STRING && this.get('format')) {\n      this.set('__displayType__', SchemaUtils.FORMATDISPLAYTYPE[this.get('format')]);\n    } else {\n      const items = this.get('items');\n      const arraytype = items && (items.format ? items.format : items.type);\n      if (type && arraytype) {\n        this.set('__displayType__', SchemaUtils.ARRAYDISPLAYTYPE[getArrayTypeName(type, arraytype)]);\n      } else {\n        this.set('__displayType__', type);\n      }\n    }\n  },\n  _validateEnumOneOf: function () {\n    if (!this.get('__isEnumDefinedAndSupported__')) {\n      return;\n    }\n    const enumOneOf = this.get('__oneOf__') || [];\n    if (oktaUnderscore.isEmpty(enumOneOf)) {\n      return {\n        __oneOf__: loc('model.validation.field.blank', 'courage')\n      };\n    }\n    if (!this._isValidateOneOfConstraint(enumOneOf)) {\n      const constraintType = this.get('__enumConstraintType__');\n      const errorTypeMsg = constraintTypeErrorMessages[constraintType];\n      return {\n        __oneOf__: errorTypeMsg\n      };\n    }\n  },\n  _isValidateOneOfConstraint: function (values) {\n    const constraintType = this.get('__enumConstraintType__');\n    return oktaUnderscore.all(values, function (value) {\n      return EnumTypeHelper.isConstraintValueMatchType(value.const, constraintType);\n    });\n  },\n  toJSON: function () {\n    let json = BaseModel.prototype.toJSON.apply(this, arguments);\n    json.settings = {\n      permissions: {}\n    };\n    json.settings.permissions['SELF'] = this.get('__userPermission__'); // omit \"sensitive\" filed will have default it value to false.\n\n    if (this.get('__isSensitive__')) {\n      json.settings.sensitive = this.get('__isSensitive__');\n    }\n    if (this.get('type') === 'image') {\n      json.type = 'object';\n      json.extendedType = 'image';\n    }\n    json = this._enumAssignment(json);\n    json = this._attributeOverrideToJson(json);\n    json = this._normalizeUnionValue(json);\n    json = this._patternAssignment(json);\n    json = this._uniquenessAssignment(json);\n    return json;\n  },\n  _attributeOverrideToJson: function (json) {\n    const masterOverrideType = this.get('__masterOverrideType__');\n    const masterOverrideValue = this.get('__masterOverrideValue__');\n    if (masterOverrideType === 'OKTA_MASTERED') {\n      json.settings.masterOverride = {\n        type: 'OKTA_MASTERED'\n      };\n    } else if (masterOverrideType === 'OVERRIDE') {\n      json.settings.masterOverride = {\n        type: 'ORDERED_LIST',\n        value: []\n      };\n      if (masterOverrideValue instanceof BaseCollection) {\n        oktaUnderscore.each(masterOverrideValue.toJSON(), function (overrideProfile) {\n          json.settings.masterOverride.value.push(overrideProfile.id);\n        });\n      } else if (masterOverrideValue instanceof Array) {\n        json.settings.masterOverride.value = masterOverrideValue;\n      }\n      if (oktaUnderscore.isEmpty(json.settings.masterOverride.value)) {\n        delete json.settings.masterOverride;\n      }\n    }\n    if (masterOverrideType === 'INHERIT') {\n      delete json.settings.masterOverride;\n    }\n    return json;\n  },\n  /**\n   * Only allow set \"union\" value when isScopeSelf is NONE and displayType is\n   * array of (string/number/integer), otherwise reset to default.\n   *\n   * @see /universal-directory/shared/views/components/UnionGroupValuesRadio.js\n   */\n  _normalizeUnionValue: function (json) {\n    if (!this.get('__isNoneScopeArrayType__')) {\n      json['union'] = undefined;\n    }\n    return json;\n  },\n  _enumAssignment: function (json) {\n    if (!this.get('__isEnumDefinedAndSupported__')) {\n      return json;\n    } // backfill empty title by constraint\n\n    const enumOneOf = this._getEnumOneOfWithTitleCheck();\n    if (this.get('type') === 'array') {\n      delete json.items.enum;\n      json.items.oneOf = enumOneOf;\n    } else {\n      delete json.enum;\n      json.oneOf = enumOneOf;\n    }\n    return json;\n  },\n  _patternAssignment: function (json) {\n    if (!this.get('__isLoginOfBaseSchema__') || !this.get('__loginFormatRestriction__')) {\n      return json;\n    }\n    switch (this.get('__loginFormatRestriction__')) {\n      case SchemaUtils.LOGINPATTERNFORMAT.EMAIL:\n        delete json.pattern;\n        break;\n      case SchemaUtils.LOGINPATTERNFORMAT.CUSTOM:\n        json.pattern = this._buildLoginPattern(this.get('__loginFormatRestrictionCustom__'));\n        break;\n      case SchemaUtils.LOGINPATTERNFORMAT.NONE:\n        json.pattern = loginFormatNonePattern;\n        break;\n    }\n    return json;\n  },\n  _uniquenessAssignment: function (json) {\n    if (!this.get('__unique__')) {\n      delete json.unique;\n    } else if (!this.get('__isUniqueness__')) {\n      json.unique = SchemaUtils.UNIQUENESS.UNIQUE_VALIDATED;\n    }\n    return json;\n  },\n  /**\n   * Character should be escaped except letters, digits and hyphen\n   */\n  _escapedRegexChar: function (pattern, index) {\n    const char = pattern.charAt(index);\n    if (escapedLoginCharsRe.test(char)) {\n      return '\\\\' + char;\n    }\n    return char;\n  },\n  _buildLoginPattern: function (pattern) {\n    let result = '';\n    for (var i = 0; i < pattern.length; i++) {\n      result += this._escapedRegexChar(pattern, i);\n    }\n    return '[' + result + ']+';\n  },\n  _extractLoginPattern: function (pattern) {\n    const re = /^\\[(.*)\\]\\+/;\n    const matches = pattern.match(re);\n    return matches ? matches[1].replace(/\\\\(.)/g, '$1') : pattern;\n  },\n  _getEnumOneOfWithTitleCheck: function () {\n    const enumOneOf = this.get('__oneOf__');\n    return oktaUnderscore.map(enumOneOf, function (value) {\n      if (oktaJQueryStatic.trim(value.title) !== '') {\n        return value;\n      }\n      value.title = !oktaUnderscore.isString(value.const) ? JSON.stringify(value.const) : value.const;\n      return value;\n    });\n  },\n  _updateTypeFormatConstraints: function () {\n    const displayType = this.get('__displayType__'); // OKTA-31952 reset format according to its displayType\n\n    this.unset('format', {\n      silent: true\n    });\n    this.unset('items', {\n      silent: true\n    });\n    this.set(SchemaUtils.DISPLAYTYPES[displayType]);\n    if (displayType !== NUMBER && displayType !== INTEGER) {\n      this.unset('minimum');\n      this.unset('maximum');\n    }\n    if (displayType !== STRING) {\n      this.unset('minLength');\n      this.unset('maxLength');\n    }\n    this.unset('__minVal__');\n    this.unset('__maxVal__');\n    this.unset('__equals__');\n    this.set('__supportsMinMax__', SchemaUtils.SUPPORTSMINMAX.indexOf(this.get('__displayType__')) !== -1);\n  },\n  _updateMinMax: function () {\n    let min;\n    let max;\n    const displayType = this.get('__displayType__');\n    if (displayType === STRING) {\n      min = 'minLength';\n      max = 'maxLength';\n    } else if (displayType === INTEGER || displayType === NUMBER) {\n      min = 'minimum';\n      max = 'maximum';\n    }\n    if (this.get('__minVal__')) {\n      this.set(min, parseInt(this.get('__minVal__'), 10));\n    } else {\n      this.unset(min);\n    }\n    if (this.get('__maxVal__')) {\n      this.set(max, parseInt(this.get('__maxVal__'), 10));\n    } else {\n      this.unset(max);\n    }\n  },\n  _convertEqualsToMinMax: function () {\n    const equals = this.get('__equals__');\n    if (equals) {\n      this.set('__minVal__', equals);\n      this.set('__maxVal__', equals);\n    }\n  },\n  /*\n   Normally we would use a derived property here but derived properties do not work with the model Clone function\n   so we use this workaround instead.\n   */\n  _setConstraintText: function () {\n    const constraint = this.get('__constraint__');\n    const min = this.get('__minVal__');\n    const max = this.get('__maxVal__');\n    const equals = this.get('__equals__');\n    switch (constraint) {\n      case 'between':\n        this.set('__constraintText__', 'Between ' + min + ' and ' + max);\n        break;\n      case 'greaterThan':\n        this.set('__constraintText__', 'Greater than ' + min);\n        break;\n      case 'lessThan':\n        this.set('__constraintText__', 'Less than ' + max);\n        break;\n      case 'equals':\n        this.set('__constraintText__', 'Equals ' + equals);\n        break;\n      default:\n        this.set('__constraintText__', '');\n        break;\n    }\n  },\n  cleanup: function () {\n    if (this.get('__constraint__') === 'lessThan') {\n      this.unset('__minVal__');\n    } else if (this.get('__constraint__') === 'greaterThan') {\n      this.unset('__maxVal__');\n    }\n    if (this.get('scope') !== SchemaUtils.SCOPE.SYSTEM) {\n      if (this.get('__isScopeSelf__') === true) {\n        this.set({\n          scope: SchemaUtils.SCOPE.SELF\n        }, {\n          silent: true\n        });\n      } else {\n        this.unset('scope');\n      }\n    }\n    if (!this.get('__unique__')) {\n      this.unset('unique');\n    }\n  },\n  /**\n   * Since there is not an dedicated attribute to flag enum type,\n   * use enum values to determine whether the property is enum type or not.\n   */\n  isEnumType: function () {\n    return !!this.getEnumValues();\n  },\n  getEnumValues: function () {\n    return this.get('oneOf') || this.get('enum') || this.get('items') && this.get('items')['oneOf'] || this.get('items') && this.get('items')['enum'];\n  },\n  detectHasEnumDefined: function () {\n    const enumValues = this.getEnumValues();\n    if (!enumValues) {\n      return;\n    }\n    this.set('__oneOf__', EnumTypeHelper.convertToOneOf(enumValues));\n    this.set('__enumDefined__', true);\n  }\n});\nconst SchemaPropertySchemaProperties = BaseCollection.extend({\n  model: SchemaPropertySchemaProperty,\n  clone: function () {\n    return new this.constructor(this.toJSON({\n      verbose: true\n    }), {\n      parse: true\n    });\n  },\n  areAllReadOnly: function () {\n    return oktaUnderscore.all(this.pluck('__isReadOnly__'));\n  },\n  createModelProperties: function () {\n    return this.reduce(function (p, schemaProperty) {\n      const type = schemaProperty.get('type');\n      p[schemaProperty.id] = oktaUnderscore.clone(SchemaUtils.DISPLAYTYPES[type]);\n      if (SchemaUtils.SUPPORTSMINMAX.indexOf(type) !== -1) {\n        p[schemaProperty.id].minLength = schemaProperty.get('minLength');\n        p[schemaProperty.id].maxLength = schemaProperty.get('maxLength');\n      }\n      if (type === 'string') {\n        p[schemaProperty.id].format = schemaProperty.get('format');\n      }\n      return p;\n    }, {});\n  }\n});\nvar SchemaProperty = {\n  Model: SchemaPropertySchemaProperty,\n  Collection: SchemaPropertySchemaProperties\n};\n\nexport { SchemaProperty as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}