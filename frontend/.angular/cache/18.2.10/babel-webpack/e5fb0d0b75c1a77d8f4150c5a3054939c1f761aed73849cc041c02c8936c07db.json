{"ast":null,"code":"import '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport BaseForm from '../../internals/BaseForm.js';\nimport '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport BaseView from '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport '../../components/AuthenticatorVerifyOptions.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';\nimport 'cross-fetch';\nimport '../../../../util/BrowserFeatures.js';\nimport '../../../../util/FactorUtil.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\n\n// for BETA,\n// redirect is needed for Apple SSO Extension to intercept the request, because\n// - XHR request is not interceptable\n// - form post is interceptable, but some app (Outlook) closes the app after\n// We may have a different approach/UX for EA\nconst Body = BaseForm.extend({\n  noButtonBar: true,\n  className: 'ion-form device-challenge-poll',\n  title: function () {\n    return loc('deviceTrust.sso.redirectText', 'login');\n  },\n  initialize: function () {\n    var _this$options$current, _this$options$current2;\n    BaseForm.prototype.initialize.apply(this, arguments);\n    this.listenTo(this.model, 'error', () => {\n      this.$('.spinner').hide();\n    });\n    this.add('<div class=\"spinner\"></div>');\n    const isGetMethod = ((_this$options$current = this.options.currentViewState) === null || _this$options$current === void 0 ? void 0 : (_this$options$current2 = _this$options$current.method) === null || _this$options$current2 === void 0 ? void 0 : _this$options$current2.toLowerCase()) === 'get';\n    this.model.set('useRedirect', isGetMethod);\n    this.trigger('save', this.model);\n  }\n});\nvar SSOExtensionView = BaseView.extend({\n  Body: Body\n});\nexport { SSOExtensionView as default };","map":{"version":3,"names":["BaseForm","loc","BaseView","Body","extend","noButtonBar","className","title","initialize","_this$options$current","_this$options$current2","prototype","apply","arguments","listenTo","model","$","hide","add","isGetMethod","options","currentViewState","method","toLowerCase","set","trigger","SSOExtensionView","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/views/device/SSOExtensionView.js"],"sourcesContent":["import '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport BaseForm from '../../internals/BaseForm.js';\nimport '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport BaseView from '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport '../../components/AuthenticatorVerifyOptions.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';\nimport 'cross-fetch';\nimport '../../../../util/BrowserFeatures.js';\nimport '../../../../util/FactorUtil.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\n\n// for BETA,\n// redirect is needed for Apple SSO Extension to intercept the request, because\n// - XHR request is not interceptable\n// - form post is interceptable, but some app (Outlook) closes the app after\n// We may have a different approach/UX for EA\nconst Body = BaseForm.extend({\n  noButtonBar: true,\n  className: 'ion-form device-challenge-poll',\n  title: function () {\n    return loc('deviceTrust.sso.redirectText', 'login');\n  },\n  initialize: function () {\n    var _this$options$current, _this$options$current2;\n    BaseForm.prototype.initialize.apply(this, arguments);\n    this.listenTo(this.model, 'error', () => {\n      this.$('.spinner').hide();\n    });\n    this.add('<div class=\"spinner\"></div>');\n    const isGetMethod = ((_this$options$current = this.options.currentViewState) === null || _this$options$current === void 0 ? void 0 : (_this$options$current2 = _this$options$current.method) === null || _this$options$current2 === void 0 ? void 0 : _this$options$current2.toLowerCase()) === 'get';\n    this.model.set('useRedirect', isGetMethod);\n    this.trigger('save', this.model);\n  }\n});\nvar SSOExtensionView = BaseView.extend({\n  Body: Body\n});\n\nexport { SSOExtensionView as default };\n"],"mappings":"AAAA,OAAO,+BAA+B;AACtC,OAAO,+BAA+B;AACtC,OAAOA,QAAQ,MAAM,6BAA6B;AAClD,OAAO,wCAAwC;AAC/C,OAAO,gDAAgD;AACvD,SAASC,GAAG,QAAQ,8EAA8E;AAClG,OAAO,+EAA+E;AACtF,OAAO,mFAAmF;AAC1F,OAAO,mFAAmF;AAC1F,OAAO,uFAAuF;AAC9F,OAAO,8FAA8F;AACrG,OAAO,4EAA4E;AACnF,OAAO,gFAAgF;AACvF,OAAO,8EAA8E;AACrF,OAAO,uFAAuF;AAC9F,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAO,gDAAgD;AACvD,OAAO,gDAAgD;AACvD,OAAO,iFAAiF;AACxF,OAAO,aAAa;AACpB,OAAO,qCAAqC;AAC5C,OAAO,gCAAgC;AACvC,OAAO,iDAAiD;AACxD,OAAO,2CAA2C;AAClD,OAAO,2BAA2B;;AAElC;AACA;AACA;AACA;AACA;AACA,MAAMC,IAAI,GAAGH,QAAQ,CAACI,MAAM,CAAC;EAC3BC,WAAW,EAAE,IAAI;EACjBC,SAAS,EAAE,gCAAgC;EAC3CC,KAAK,EAAE,SAAAA,CAAA,EAAY;IACjB,OAAON,GAAG,CAAC,8BAA8B,EAAE,OAAO,CAAC;EACrD,CAAC;EACDO,UAAU,EAAE,SAAAA,CAAA,EAAY;IACtB,IAAIC,qBAAqB,EAAEC,sBAAsB;IACjDV,QAAQ,CAACW,SAAS,CAACH,UAAU,CAACI,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACpD,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACC,KAAK,EAAE,OAAO,EAAE,MAAM;MACvC,IAAI,CAACC,CAAC,CAAC,UAAU,CAAC,CAACC,IAAI,CAAC,CAAC;IAC3B,CAAC,CAAC;IACF,IAAI,CAACC,GAAG,CAAC,6BAA6B,CAAC;IACvC,MAAMC,WAAW,GAAG,CAAC,CAACV,qBAAqB,GAAG,IAAI,CAACW,OAAO,CAACC,gBAAgB,MAAM,IAAI,IAAIZ,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAACC,sBAAsB,GAAGD,qBAAqB,CAACa,MAAM,MAAM,IAAI,IAAIZ,sBAAsB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,sBAAsB,CAACa,WAAW,CAAC,CAAC,MAAM,KAAK;IACrS,IAAI,CAACR,KAAK,CAACS,GAAG,CAAC,aAAa,EAAEL,WAAW,CAAC;IAC1C,IAAI,CAACM,OAAO,CAAC,MAAM,EAAE,IAAI,CAACV,KAAK,CAAC;EAClC;AACF,CAAC,CAAC;AACF,IAAIW,gBAAgB,GAAGxB,QAAQ,CAACE,MAAM,CAAC;EACrCD,IAAI,EAAEA;AACR,CAAC,CAAC;AAEF,SAASuB,gBAAgB,IAAIC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}