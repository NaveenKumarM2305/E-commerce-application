{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { TOKEN_STORAGE_NAME, CACHE_STORAGE_NAME } from '../constants.js';\nimport { SavedObject } from './SavedObject.js';\nimport { isBrowser } from '../features.js';\nimport { warn } from '../util/console.js';\nfunction logServerSideMemoryStorageWarning(options) {\n  if (!isBrowser() && !options.storageProvider && !options.storageKey) {\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\nclass BaseStorageManager {\n  constructor(storageManagerOptions, cookieOptions, storageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n  getOptionsForSection(sectionName, overrideOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n  getStorage(options) {\n    options = Object.assign({}, this.cookieOptions, options);\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n    let {\n      storageType,\n      storageTypes\n    } = options;\n    if (storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n    if (!storageType) {\n      storageType = this.storageUtil.findStorageType(storageTypes);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n  getTokenStorage(options) {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n  getHttpCache(options) {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n}\nexport { BaseStorageManager, logServerSideMemoryStorageWarning };","map":{"version":3,"names":["TOKEN_STORAGE_NAME","CACHE_STORAGE_NAME","SavedObject","isBrowser","warn","logServerSideMemoryStorageWarning","options","storageProvider","storageKey","BaseStorageManager","constructor","storageManagerOptions","cookieOptions","storageUtil","getOptionsForSection","sectionName","overrideOptions","Object","assign","getStorage","storageType","storageTypes","sessionCookie","idx","indexOf","slice","undefined","findStorageType","getStorageByType","getTokenStorage","storage","getHttpCache"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/storage/BaseStorageManager.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { TOKEN_STORAGE_NAME, CACHE_STORAGE_NAME } from '../constants.js';\nimport { SavedObject } from './SavedObject.js';\nimport { isBrowser } from '../features.js';\nimport { warn } from '../util/console.js';\n\nfunction logServerSideMemoryStorageWarning(options) {\n    if (!isBrowser() && !options.storageProvider && !options.storageKey) {\n        warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n    }\n}\nclass BaseStorageManager {\n    constructor(storageManagerOptions, cookieOptions, storageUtil) {\n        this.storageManagerOptions = storageManagerOptions;\n        this.cookieOptions = cookieOptions;\n        this.storageUtil = storageUtil;\n    }\n    getOptionsForSection(sectionName, overrideOptions) {\n        return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n    }\n    getStorage(options) {\n        options = Object.assign({}, this.cookieOptions, options);\n        if (options.storageProvider) {\n            return options.storageProvider;\n        }\n        let { storageType, storageTypes } = options;\n        if (storageType === 'sessionStorage') {\n            options.sessionCookie = true;\n        }\n        if (storageType && storageTypes) {\n            const idx = storageTypes.indexOf(storageType);\n            if (idx >= 0) {\n                storageTypes = storageTypes.slice(idx);\n                storageType = undefined;\n            }\n        }\n        if (!storageType) {\n            storageType = this.storageUtil.findStorageType(storageTypes);\n        }\n        return this.storageUtil.getStorageByType(storageType, options);\n    }\n    getTokenStorage(options) {\n        options = this.getOptionsForSection('token', options);\n        logServerSideMemoryStorageWarning(options);\n        const storage = this.getStorage(options);\n        const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n        return new SavedObject(storage, storageKey);\n    }\n    getHttpCache(options) {\n        options = this.getOptionsForSection('cache', options);\n        const storage = this.getStorage(options);\n        const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n        return new SavedObject(storage, storageKey);\n    }\n}\n\nexport { BaseStorageManager, logServerSideMemoryStorageWarning };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,kBAAkB,EAAEC,kBAAkB,QAAQ,iBAAiB;AACxE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,IAAI,QAAQ,oBAAoB;AAEzC,SAASC,iCAAiCA,CAACC,OAAO,EAAE;EAChD,IAAI,CAACH,SAAS,CAAC,CAAC,IAAI,CAACG,OAAO,CAACC,eAAe,IAAI,CAACD,OAAO,CAACE,UAAU,EAAE;IACjEJ,IAAI,CAAC,6KAA6K,CAAC;EACvL;AACJ;AACA,MAAMK,kBAAkB,CAAC;EACrBC,WAAWA,CAACC,qBAAqB,EAAEC,aAAa,EAAEC,WAAW,EAAE;IAC3D,IAAI,CAACF,qBAAqB,GAAGA,qBAAqB;IAClD,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,WAAW,GAAGA,WAAW;EAClC;EACAC,oBAAoBA,CAACC,WAAW,EAAEC,eAAe,EAAE;IAC/C,OAAOC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACP,qBAAqB,CAACI,WAAW,CAAC,EAAEC,eAAe,CAAC;EACtF;EACAG,UAAUA,CAACb,OAAO,EAAE;IAChBA,OAAO,GAAGW,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACN,aAAa,EAAEN,OAAO,CAAC;IACxD,IAAIA,OAAO,CAACC,eAAe,EAAE;MACzB,OAAOD,OAAO,CAACC,eAAe;IAClC;IACA,IAAI;MAAEa,WAAW;MAAEC;IAAa,CAAC,GAAGf,OAAO;IAC3C,IAAIc,WAAW,KAAK,gBAAgB,EAAE;MAClCd,OAAO,CAACgB,aAAa,GAAG,IAAI;IAChC;IACA,IAAIF,WAAW,IAAIC,YAAY,EAAE;MAC7B,MAAME,GAAG,GAAGF,YAAY,CAACG,OAAO,CAACJ,WAAW,CAAC;MAC7C,IAAIG,GAAG,IAAI,CAAC,EAAE;QACVF,YAAY,GAAGA,YAAY,CAACI,KAAK,CAACF,GAAG,CAAC;QACtCH,WAAW,GAAGM,SAAS;MAC3B;IACJ;IACA,IAAI,CAACN,WAAW,EAAE;MACdA,WAAW,GAAG,IAAI,CAACP,WAAW,CAACc,eAAe,CAACN,YAAY,CAAC;IAChE;IACA,OAAO,IAAI,CAACR,WAAW,CAACe,gBAAgB,CAACR,WAAW,EAAEd,OAAO,CAAC;EAClE;EACAuB,eAAeA,CAACvB,OAAO,EAAE;IACrBA,OAAO,GAAG,IAAI,CAACQ,oBAAoB,CAAC,OAAO,EAAER,OAAO,CAAC;IACrDD,iCAAiC,CAACC,OAAO,CAAC;IAC1C,MAAMwB,OAAO,GAAG,IAAI,CAACX,UAAU,CAACb,OAAO,CAAC;IACxC,MAAME,UAAU,GAAGF,OAAO,CAACE,UAAU,IAAIR,kBAAkB;IAC3D,OAAO,IAAIE,WAAW,CAAC4B,OAAO,EAAEtB,UAAU,CAAC;EAC/C;EACAuB,YAAYA,CAACzB,OAAO,EAAE;IAClBA,OAAO,GAAG,IAAI,CAACQ,oBAAoB,CAAC,OAAO,EAAER,OAAO,CAAC;IACrD,MAAMwB,OAAO,GAAG,IAAI,CAACX,UAAU,CAACb,OAAO,CAAC;IACxC,MAAME,UAAU,GAAGF,OAAO,CAACE,UAAU,IAAIP,kBAAkB;IAC3D,OAAO,IAAIC,WAAW,CAAC4B,OAAO,EAAEtB,UAAU,CAAC;EAC/C;AACJ;AAEA,SAASC,kBAAkB,EAAEJ,iCAAiC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}