{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { warn } from '../util/console.js';\nimport { isBrowser } from '../features.js';\nimport { IDX_RESPONSE_STORAGE_NAME } from '../constants.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { SavedObject } from '../storage/SavedObject.js';\nimport { createCoreStorageManager } from '../core/storage.js';\nfunction createIdxStorageManager() {\n  const CoreStorageManager = createCoreStorageManager();\n  return class IdxStorageManager extends CoreStorageManager {\n    constructor(storageManagerOptions, cookieOptions, storageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n    getIdxResponseStorage(options) {\n      let storage;\n      if (isBrowser()) {\n        try {\n          storage = this.storageUtil.getStorageByType('memory', options);\n        } catch (e) {\n          warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n        }\n      } else {\n        const transactionStorage = this.getTransactionStorage(options);\n        if (transactionStorage) {\n          storage = {\n            getItem: key => {\n              const transaction = transactionStorage.getStorage();\n              if (transaction && transaction[key]) {\n                return transaction[key];\n              }\n              return null;\n            },\n            setItem: (key, val) => {\n              const transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n              }\n              transaction[key] = val;\n              transactionStorage.setStorage(transaction);\n            },\n            removeItem: key => {\n              const transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                return;\n              }\n              delete transaction[key];\n              transactionStorage.setStorage(transaction);\n            }\n          };\n        }\n      }\n      if (!storage) {\n        return null;\n      }\n      return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n    }\n  };\n}\nexport { createIdxStorageManager };","map":{"version":3,"names":["warn","isBrowser","IDX_RESPONSE_STORAGE_NAME","AuthSdkError","SavedObject","createCoreStorageManager","createIdxStorageManager","CoreStorageManager","IdxStorageManager","constructor","storageManagerOptions","cookieOptions","storageUtil","getIdxResponseStorage","options","storage","getStorageByType","e","transactionStorage","getTransactionStorage","getItem","key","transaction","getStorage","setItem","val","setStorage","removeItem"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/storage.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { warn } from '../util/console.js';\nimport { isBrowser } from '../features.js';\nimport { IDX_RESPONSE_STORAGE_NAME } from '../constants.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { SavedObject } from '../storage/SavedObject.js';\nimport { createCoreStorageManager } from '../core/storage.js';\n\nfunction createIdxStorageManager() {\n    const CoreStorageManager = createCoreStorageManager();\n    return class IdxStorageManager extends CoreStorageManager {\n        constructor(storageManagerOptions, cookieOptions, storageUtil) {\n            super(storageManagerOptions, cookieOptions, storageUtil);\n        }\n        getIdxResponseStorage(options) {\n            let storage;\n            if (isBrowser()) {\n                try {\n                    storage = this.storageUtil.getStorageByType('memory', options);\n                }\n                catch (e) {\n                    warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n                }\n            }\n            else {\n                const transactionStorage = this.getTransactionStorage(options);\n                if (transactionStorage) {\n                    storage = {\n                        getItem: (key) => {\n                            const transaction = transactionStorage.getStorage();\n                            if (transaction && transaction[key]) {\n                                return transaction[key];\n                            }\n                            return null;\n                        },\n                        setItem: (key, val) => {\n                            const transaction = transactionStorage.getStorage();\n                            if (!transaction) {\n                                throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n                            }\n                            transaction[key] = val;\n                            transactionStorage.setStorage(transaction);\n                        },\n                        removeItem: (key) => {\n                            const transaction = transactionStorage.getStorage();\n                            if (!transaction) {\n                                return;\n                            }\n                            delete transaction[key];\n                            transactionStorage.setStorage(transaction);\n                        }\n                    };\n                }\n            }\n            if (!storage) {\n                return null;\n            }\n            return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n        }\n    };\n}\n\nexport { createIdxStorageManager };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,IAAI,QAAQ,oBAAoB;AACzC,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,yBAAyB,QAAQ,iBAAiB;AAC3D,OAAO,cAAc;AACrB,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,wBAAwB,QAAQ,oBAAoB;AAE7D,SAASC,uBAAuBA,CAAA,EAAG;EAC/B,MAAMC,kBAAkB,GAAGF,wBAAwB,CAAC,CAAC;EACrD,OAAO,MAAMG,iBAAiB,SAASD,kBAAkB,CAAC;IACtDE,WAAWA,CAACC,qBAAqB,EAAEC,aAAa,EAAEC,WAAW,EAAE;MAC3D,KAAK,CAACF,qBAAqB,EAAEC,aAAa,EAAEC,WAAW,CAAC;IAC5D;IACAC,qBAAqBA,CAACC,OAAO,EAAE;MAC3B,IAAIC,OAAO;MACX,IAAId,SAAS,CAAC,CAAC,EAAE;QACb,IAAI;UACAc,OAAO,GAAG,IAAI,CAACH,WAAW,CAACI,gBAAgB,CAAC,QAAQ,EAAEF,OAAO,CAAC;QAClE,CAAC,CACD,OAAOG,CAAC,EAAE;UACNjB,IAAI,CAAC,yIAAyI,CAAC;QACnJ;MACJ,CAAC,MACI;QACD,MAAMkB,kBAAkB,GAAG,IAAI,CAACC,qBAAqB,CAACL,OAAO,CAAC;QAC9D,IAAII,kBAAkB,EAAE;UACpBH,OAAO,GAAG;YACNK,OAAO,EAAGC,GAAG,IAAK;cACd,MAAMC,WAAW,GAAGJ,kBAAkB,CAACK,UAAU,CAAC,CAAC;cACnD,IAAID,WAAW,IAAIA,WAAW,CAACD,GAAG,CAAC,EAAE;gBACjC,OAAOC,WAAW,CAACD,GAAG,CAAC;cAC3B;cACA,OAAO,IAAI;YACf,CAAC;YACDG,OAAO,EAAEA,CAACH,GAAG,EAAEI,GAAG,KAAK;cACnB,MAAMH,WAAW,GAAGJ,kBAAkB,CAACK,UAAU,CAAC,CAAC;cACnD,IAAI,CAACD,WAAW,EAAE;gBACd,MAAM,IAAInB,YAAY,CAAC,uDAAuD,CAAC;cACnF;cACAmB,WAAW,CAACD,GAAG,CAAC,GAAGI,GAAG;cACtBP,kBAAkB,CAACQ,UAAU,CAACJ,WAAW,CAAC;YAC9C,CAAC;YACDK,UAAU,EAAGN,GAAG,IAAK;cACjB,MAAMC,WAAW,GAAGJ,kBAAkB,CAACK,UAAU,CAAC,CAAC;cACnD,IAAI,CAACD,WAAW,EAAE;gBACd;cACJ;cACA,OAAOA,WAAW,CAACD,GAAG,CAAC;cACvBH,kBAAkB,CAACQ,UAAU,CAACJ,WAAW,CAAC;YAC9C;UACJ,CAAC;QACL;MACJ;MACA,IAAI,CAACP,OAAO,EAAE;QACV,OAAO,IAAI;MACf;MACA,OAAO,IAAIX,WAAW,CAACW,OAAO,EAAEb,yBAAyB,CAAC;IAC9D;EACJ,CAAC;AACL;AAEA,SAASI,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}