{"ast":null,"code":"import { Collection } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport BaseForm from '../../internals/BaseForm.js';\nimport '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport AuthenticatorVerifyOptions from '../../components/AuthenticatorVerifyOptions.js';\nimport { getAuthenticatorDataForVerification } from '../../utils/AuthenticatorUtil.js';\nimport { AUTHENTICATOR_KEY } from '../../../ion/RemediationConstants.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\nimport { Body as Body$1 } from '../SelectAuthenticatorVerifyView.js';\n\n// Common view for OV push and custom app.\nconst Body = Body$1.extend({\n  getUISchema: function () {\n    // Change the UI schema to not display radios here.\n    const uiSchemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    const methodsSchema = uiSchemas.find(schema => schema.name === 'authenticator.methodType');\n    this._sortMethodOptionsIfDeviceKnown(methodsSchema.options);\n    const methodOptions = methodsSchema.options.map(option => {\n      return Object.assign({}, option, getAuthenticatorDataForVerification({\n        authenticatorKey: this.isOV() ? AUTHENTICATOR_KEY.OV : AUTHENTICATOR_KEY.CUSTOM_APP,\n        value: {\n          methodType: option.value\n        }\n      }));\n    });\n    return [{\n      View: AuthenticatorVerifyOptions,\n      options: {\n        name: methodsSchema.name,\n        collection: new Collection(methodOptions)\n      }\n    }];\n  },\n  // If the `deviceKnown` attribute is true, we should put the signed_nonce method to the top of authenticator list.\n  // This is in sync with v2/ion/ui-schema/ion-object-handler.js - createOVOptions\n  _sortMethodOptionsIfDeviceKnown: function (methodOptions) {\n    var _this$options, _this$options$current, _this$options$current2, _this$options$current3;\n    // Check if the `deviceKnown` attribute is true\n    const deviceKnown = (_this$options = this.options) === null || _this$options === void 0 ? void 0 : (_this$options$current = _this$options.currentViewState) === null || _this$options$current === void 0 ? void 0 : (_this$options$current2 = _this$options$current.relatesTo) === null || _this$options$current2 === void 0 ? void 0 : (_this$options$current3 = _this$options$current2.value) === null || _this$options$current3 === void 0 ? void 0 : _this$options$current3.deviceKnown;\n    if (deviceKnown) {\n      const signedNonceIndex = methodOptions.findIndex(e => e.value === 'signed_nonce');\n      if (signedNonceIndex > 0) {\n        const signedNonceModel = methodOptions[signedNonceIndex];\n\n        // Put the 'signed_nonce' option to the top of the list\n        methodOptions.splice(signedNonceIndex, 1);\n        methodOptions.unshift(signedNonceModel);\n      }\n    }\n  },\n  isOV: function () {\n    return this.options.appState.get('authenticatorKey') === AUTHENTICATOR_KEY.OV;\n  }\n});\nexport { Body as default };","map":{"version":3,"names":["Collection","BaseForm","AuthenticatorVerifyOptions","getAuthenticatorDataForVerification","AUTHENTICATOR_KEY","Body","Body$1","extend","getUISchema","uiSchemas","prototype","apply","arguments","methodsSchema","find","schema","name","_sortMethodOptionsIfDeviceKnown","options","methodOptions","map","option","Object","assign","authenticatorKey","isOV","OV","CUSTOM_APP","value","methodType","View","collection","_this$options","_this$options$current","_this$options$current2","_this$options$current3","deviceKnown","currentViewState","relatesTo","signedNonceIndex","findIndex","e","signedNonceModel","splice","unshift","appState","get","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/views/shared/ChallengeOktaVerifyCustomAppFormView.js"],"sourcesContent":["import { Collection } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport BaseForm from '../../internals/BaseForm.js';\nimport '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport AuthenticatorVerifyOptions from '../../components/AuthenticatorVerifyOptions.js';\nimport { getAuthenticatorDataForVerification } from '../../utils/AuthenticatorUtil.js';\nimport { AUTHENTICATOR_KEY } from '../../../ion/RemediationConstants.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\nimport { Body as Body$1 } from '../SelectAuthenticatorVerifyView.js';\n\n// Common view for OV push and custom app.\nconst Body = Body$1.extend({\n  getUISchema: function () {\n    // Change the UI schema to not display radios here.\n    const uiSchemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    const methodsSchema = uiSchemas.find(schema => schema.name === 'authenticator.methodType');\n    this._sortMethodOptionsIfDeviceKnown(methodsSchema.options);\n    const methodOptions = methodsSchema.options.map(option => {\n      return Object.assign({}, option, getAuthenticatorDataForVerification({\n        authenticatorKey: this.isOV() ? AUTHENTICATOR_KEY.OV : AUTHENTICATOR_KEY.CUSTOM_APP,\n        value: {\n          methodType: option.value\n        }\n      }));\n    });\n    return [{\n      View: AuthenticatorVerifyOptions,\n      options: {\n        name: methodsSchema.name,\n        collection: new Collection(methodOptions)\n      }\n    }];\n  },\n  // If the `deviceKnown` attribute is true, we should put the signed_nonce method to the top of authenticator list.\n  // This is in sync with v2/ion/ui-schema/ion-object-handler.js - createOVOptions\n  _sortMethodOptionsIfDeviceKnown: function (methodOptions) {\n    var _this$options, _this$options$current, _this$options$current2, _this$options$current3;\n    // Check if the `deviceKnown` attribute is true\n    const deviceKnown = (_this$options = this.options) === null || _this$options === void 0 ? void 0 : (_this$options$current = _this$options.currentViewState) === null || _this$options$current === void 0 ? void 0 : (_this$options$current2 = _this$options$current.relatesTo) === null || _this$options$current2 === void 0 ? void 0 : (_this$options$current3 = _this$options$current2.value) === null || _this$options$current3 === void 0 ? void 0 : _this$options$current3.deviceKnown;\n    if (deviceKnown) {\n      const signedNonceIndex = methodOptions.findIndex(e => e.value === 'signed_nonce');\n      if (signedNonceIndex > 0) {\n        const signedNonceModel = methodOptions[signedNonceIndex];\n\n        // Put the 'signed_nonce' option to the top of the list\n        methodOptions.splice(signedNonceIndex, 1);\n        methodOptions.unshift(signedNonceModel);\n      }\n    }\n  },\n  isOV: function () {\n    return this.options.appState.get('authenticatorKey') === AUTHENTICATOR_KEY.OV;\n  }\n});\n\nexport { Body as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}