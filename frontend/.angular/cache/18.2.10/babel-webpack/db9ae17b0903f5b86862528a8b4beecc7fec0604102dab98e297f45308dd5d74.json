{"ast":null,"code":"import { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport '../../internals/BaseForm.js';\nimport BaseFormWithPolling from '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport '../../components/AuthenticatorVerifyOptions.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';\nimport 'cross-fetch';\nimport '../../../../util/BrowserFeatures.js';\nimport '../../../../util/FactorUtil.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView.js';\nimport polling from '../shared/polling.js';\nimport OVResendView from './OVResendView.js';\nimport SwitchEnrollChannelLinkView from './SwitchEnrollChannelLinkView.js';\nimport EnrollChannelPollDescriptionView from './EnrollChannelPollDescriptionView.js';\nconst OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS = 'oie.authenticator.app.non_fips_compliant_enrollment_device_incompatible';\nconst OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS = 'oie.authenticator.app.non_fips_compliant_enrollment_app_update_required';\nconst OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY = 'oie.authenticator.app.method.push.enroll.enable.biometrics';\nlet shouldStartPolling = true;\nconst Body = BaseFormWithPolling.extend(Object.assign({\n  title: function () {\n    const selectedChannel = this.options.appState.get('currentAuthenticator').contextualData.selectedChannel;\n    let title;\n    switch (selectedChannel) {\n      case 'email':\n        title = loc('oie.enroll.okta_verify.setup.email.title', 'login');\n        break;\n      case 'sms':\n        title = loc('oie.enroll.okta_verify.setup.sms.title', 'login');\n        break;\n      default:\n        title = loc('oie.enroll.okta_verify.setup.title', 'login');\n    }\n    return title;\n  },\n  className: 'oie-enroll-ov-poll',\n  noButtonBar: true,\n  initialize: function () {\n    BaseFormWithPolling.prototype.initialize.apply(this, arguments);\n    this.listenTo(this.model, 'error', this.stopPolling);\n    if (shouldStartPolling) {\n      this.startPolling();\n    }\n  },\n  showMessages: function () {\n    // override showMessages to display custom callout\n    const calloutOptions = {};\n    if (this.options.appState.containsMessageWithI18nKey(OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS) || this.options.appState.containsMessageWithI18nKey(OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS)) {\n      // add a title for ov force upgrade\n      calloutOptions.title = loc('oie.okta_verify.enroll.force.upgrade.title', 'login');\n    } else if (this.options.appState.containsMessageWithI18nKey(OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY)) {\n      // add a title for OV enable biometrics message during enrollment\n      calloutOptions.title = loc('oie.authenticator.app.method.push.enroll.enable.biometrics.title', 'login');\n    }\n    BaseFormWithPolling.prototype.showMessages.call(this, calloutOptions);\n  },\n  getUISchema: function () {\n    const schema = [];\n    const contextualData = this.options.appState.get('currentAuthenticator').contextualData;\n    const selectedChannel = contextualData.selectedChannel;\n    let selector;\n    if (selectedChannel === 'qrcode') {\n      selector = '.qrcode-container';\n      shouldStartPolling = true;\n    } else if (['email', 'sms'].includes(selectedChannel)) {\n      selector = '.switch-channel-content';\n      shouldStartPolling = true;\n    } else if (['samedevice'].includes(selectedChannel)) {\n      // no selector if the channel is same device\n      shouldStartPolling = true;\n    } else if (['devicebootstrap'].includes(selectedChannel)) {\n      // no selector if the channel is device bootstrap\n      shouldStartPolling = false;\n    }\n    schema.push({\n      View: EnrollChannelPollDescriptionView\n    });\n    schema.push({\n      View: SwitchEnrollChannelLinkView,\n      options: {\n        selectedChannel: selectedChannel\n      },\n      selector: selector\n    });\n    if (['email', 'sms'].includes(selectedChannel)) {\n      schema.push({\n        View: OVResendView,\n        selector: '.o-form-error-container'\n      });\n    }\n    return schema;\n  },\n  remove: function () {\n    BaseFormWithPolling.prototype.remove.apply(this, arguments);\n    this.stopPolling();\n  }\n}, polling));\nvar EnrollPollOktaVerifyView = BaseAuthenticatorView.extend({\n  Body: Body\n});\nexport { EnrollPollOktaVerifyView as default };","map":{"version":3,"names":["loc","BaseFormWithPolling","BaseAuthenticatorView","polling","OVResendView","SwitchEnrollChannelLinkView","EnrollChannelPollDescriptionView","OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS","OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS","OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY","shouldStartPolling","Body","extend","Object","assign","title","selectedChannel","options","appState","get","contextualData","className","noButtonBar","initialize","prototype","apply","arguments","listenTo","model","stopPolling","startPolling","showMessages","calloutOptions","containsMessageWithI18nKey","call","getUISchema","schema","selector","includes","push","View","remove","EnrollPollOktaVerifyView","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/views/ov/EnrollPollOktaVerifyView.js"],"sourcesContent":["import { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport '../../internals/BaseForm.js';\nimport BaseFormWithPolling from '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport '../../components/AuthenticatorVerifyOptions.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';\nimport 'cross-fetch';\nimport '../../../../util/BrowserFeatures.js';\nimport '../../../../util/FactorUtil.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView.js';\nimport polling from '../shared/polling.js';\nimport OVResendView from './OVResendView.js';\nimport SwitchEnrollChannelLinkView from './SwitchEnrollChannelLinkView.js';\nimport EnrollChannelPollDescriptionView from './EnrollChannelPollDescriptionView.js';\n\nconst OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS = 'oie.authenticator.app.non_fips_compliant_enrollment_device_incompatible';\nconst OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS = 'oie.authenticator.app.non_fips_compliant_enrollment_app_update_required';\nconst OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY = 'oie.authenticator.app.method.push.enroll.enable.biometrics';\nlet shouldStartPolling = true;\nconst Body = BaseFormWithPolling.extend(Object.assign({\n  title: function () {\n    const selectedChannel = this.options.appState.get('currentAuthenticator').contextualData.selectedChannel;\n    let title;\n    switch (selectedChannel) {\n      case 'email':\n        title = loc('oie.enroll.okta_verify.setup.email.title', 'login');\n        break;\n      case 'sms':\n        title = loc('oie.enroll.okta_verify.setup.sms.title', 'login');\n        break;\n      default:\n        title = loc('oie.enroll.okta_verify.setup.title', 'login');\n    }\n    return title;\n  },\n  className: 'oie-enroll-ov-poll',\n  noButtonBar: true,\n  initialize: function () {\n    BaseFormWithPolling.prototype.initialize.apply(this, arguments);\n    this.listenTo(this.model, 'error', this.stopPolling);\n    if (shouldStartPolling) {\n      this.startPolling();\n    }\n  },\n  showMessages: function () {\n    // override showMessages to display custom callout\n    const calloutOptions = {};\n    if (this.options.appState.containsMessageWithI18nKey(OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS) || this.options.appState.containsMessageWithI18nKey(OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS)) {\n      // add a title for ov force upgrade\n      calloutOptions.title = loc('oie.okta_verify.enroll.force.upgrade.title', 'login');\n    } else if (this.options.appState.containsMessageWithI18nKey(OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY)) {\n      // add a title for OV enable biometrics message during enrollment\n      calloutOptions.title = loc('oie.authenticator.app.method.push.enroll.enable.biometrics.title', 'login');\n    }\n    BaseFormWithPolling.prototype.showMessages.call(this, calloutOptions);\n  },\n  getUISchema: function () {\n    const schema = [];\n    const contextualData = this.options.appState.get('currentAuthenticator').contextualData;\n    const selectedChannel = contextualData.selectedChannel;\n    let selector;\n    if (selectedChannel === 'qrcode') {\n      selector = '.qrcode-container';\n      shouldStartPolling = true;\n    } else if (['email', 'sms'].includes(selectedChannel)) {\n      selector = '.switch-channel-content';\n      shouldStartPolling = true;\n    } else if (['samedevice'].includes(selectedChannel)) {\n      // no selector if the channel is same device\n      shouldStartPolling = true;\n    } else if (['devicebootstrap'].includes(selectedChannel)) {\n      // no selector if the channel is device bootstrap\n      shouldStartPolling = false;\n    }\n    schema.push({\n      View: EnrollChannelPollDescriptionView\n    });\n    schema.push({\n      View: SwitchEnrollChannelLinkView,\n      options: {\n        selectedChannel: selectedChannel\n      },\n      selector: selector\n    });\n    if (['email', 'sms'].includes(selectedChannel)) {\n      schema.push({\n        View: OVResendView,\n        selector: '.o-form-error-container'\n      });\n    }\n    return schema;\n  },\n  remove: function () {\n    BaseFormWithPolling.prototype.remove.apply(this, arguments);\n    this.stopPolling();\n  }\n}, polling));\nvar EnrollPollOktaVerifyView = BaseAuthenticatorView.extend({\n  Body: Body\n});\n\nexport { EnrollPollOktaVerifyView as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}