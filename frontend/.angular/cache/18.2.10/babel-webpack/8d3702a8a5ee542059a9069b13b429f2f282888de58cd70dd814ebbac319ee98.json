{"ast":null,"code":"import oktaUnderscore from '../../../util/underscore-wrapper.js';\nimport Keys from '../../../util/Keys.js';\nimport Logger from '../../../util/Logger.js';\nimport StringUtil from '../../../util/StringUtil.js';\nimport ViewUtil from '../../../util/ViewUtil.js';\nimport BaseView from '../../BaseView.js';\n\n/* eslint max-params: [2, 6] */\nconst LABEL_OPTIONS = ['model', 'id', 'inputId', 'type', 'label', 'sublabel', 'tooltip', 'name', 'group'];\nconst CONTAINER_OPTIONS = ['wide', 'multi', 'input', 'label-top', 'explain', 'explain-top', 'customExplain', 'model', 'name', 'type', 'autoRender', 'multirowError'];\nconst WRAPPER_OPTIONS = ['model', 'name', 'label-top', 'readOnly', 'events', 'initialize', 'showWhen', 'bindings', 'render', 'className', 'data-se', 'toggleWhen', 'group'];\nconst INPUT_OPTIONS = ['model', 'name', 'inputId', 'type',\n// base options\n'input',\n// custom input\n'placeholder', 'label',\n// labels\n'readOnly', 'read', 'disabled', 'readModeString',\n// modes\n'options',\n// select/radio\n'deps',\n// used to specify inputs that have dependencies and show a callout to user on select\n'from', 'to',\n// model transformers,\n'autoRender',\n// model attributes change event to trigger rerendering of the input\n'inlineValidation',\n// control inline validating against the model on focus lost\n'validateOnlyIfDirty',\n// check if field has been interacted with and then validate\n'ariaLabel',\n// 508 compliance for inputs that do not have label associated with them\n'params', 'autoComplete',\n// autocomplete attribute\n'sortByKey'];\nconst OTHER_OPTIONS = ['errorField' // widgets params - for input specific widgets\n];\nconst ALL_OPTIONS = oktaUnderscore.uniq(oktaUnderscore.union(LABEL_OPTIONS, CONTAINER_OPTIONS, WRAPPER_OPTIONS, INPUT_OPTIONS, OTHER_OPTIONS));\nconst SAVE_BUTTON_PHASES = ['•         ', '•  •      ', '•  •  •   ', '•  •  •  •', '   •  •  •', '      •  •', '         •', '          ', '          ', '          '];\nfunction decorateDoWhen(doWhen) {\n  if (doWhen && !doWhen['__edit__']) {\n    return oktaUnderscore.extend({\n      __edit__: oktaUnderscore.constant(true)\n    }, doWhen);\n  }\n}\nfunction createButton(options) {\n  options = oktaUnderscore.pick(options || {}, 'action', 'id', 'className', 'text', 'type');\n  let timeoutId;\n  let intervalId;\n  let phaseCount;\n  return BaseView.extend({\n    tagName: 'input',\n    className: 'button',\n    events: {\n      click: function () {\n        if (options.action && !this.disabled()) {\n          options.action.call(this);\n        }\n      },\n      keyup: function (e) {\n        if (Keys.isEnter(e) && options.action && !this.disabled()) {\n          options.action.call(this);\n        }\n      }\n    },\n    disabled: function () {\n      return this.$el.prop('disabled') === true;\n    },\n    disable: function () {\n      this.$el.prop('disabled', true);\n      this.$el.addClass('btn-disabled');\n    },\n    enable: function () {\n      this.$el.prop('disabled', false);\n      this.$el.removeClass('btn-disabled');\n    },\n    initialize: function () {\n      const self = this;\n      this.$el.attr('type', options.type === 'save' ? 'submit' : 'button');\n      this.$el.val(options.text);\n      if (options.id) {\n        this.$el.attr('id', options.id);\n      }\n      if (options.className) {\n        this.$el.addClass(options.className);\n      }\n      if (options.type) {\n        this.$el.attr('data-type', options.type);\n      }\n      this.$el.mousedown(function () {\n        self.model.set('__pending__', true);\n      });\n      this.$el.mouseup(function () {\n        self.model.set('__pending__', false);\n      });\n      this.listenTo(this.model, 'form:set-saving-state', function () {\n        this.disable();\n        if (options.type === 'save') {\n          clearTimeout(timeoutId);\n          timeoutId = setTimeout(oktaUnderscore.bind(this.__changeSaveText, this), 1000);\n        }\n      });\n      this.listenTo(this.model, 'form:clear-saving-state', function () {\n        this.enable();\n        if (options.type === 'save') {\n          clearTimeout(timeoutId);\n          clearInterval(intervalId);\n          this.$el.val(options.text);\n        }\n      });\n    },\n    __changeSaveText: function () {\n      phaseCount = 0;\n      clearInterval(intervalId);\n      intervalId = setInterval(oktaUnderscore.bind(this.__showLoadingText, this), 200);\n    },\n    __showLoadingText: function () {\n      this.$el.val(SAVE_BUTTON_PHASES[phaseCount++ % SAVE_BUTTON_PHASES.length]);\n    }\n  });\n}\nfunction validateInput(options, model) {\n  /* eslint max-statements: 0, complexity: 0 */\n  options || (options = {});\n  if (options.type === 'label') {\n    if (!options.label) {\n      Logger.warn('A label input must have a \"label\" parameter', options);\n    }\n    return;\n  }\n  if (options.type === 'button') {\n    if (!options.title && !options.icon) {\n      Logger.warn('A button input must have a \"title\" and/or an \"icon\" parameter', options);\n    }\n    if (!options.click && !options.href) {\n      Logger.warn('A button input must have a \"click\" and/or an \"href\" parameter', options);\n    }\n    return;\n  }\n  if (!options.name && !options.input) {\n    Logger.warn('Missing \"name\" or \"input\" parameters', options);\n  }\n  if (oktaUnderscore.isArray(options.name) && oktaUnderscore.isArray(options.input)) {\n    throw new Error('Not allowed to have both \"name\" and \"input\" defined as array.');\n  }\n  if (options.type !== 'list' && options.name && model && model.allows) {\n    let names = [];\n    if (oktaUnderscore.isArray(options.name)) {\n      names = options.name;\n    } else {\n      names.push(options.name);\n    }\n    oktaUnderscore.each(names, function (name) {\n      if (!model.allows(name)) {\n        throw new Error('field not allowed: ' + options.name);\n      }\n    });\n  }\n  if (oktaUnderscore.isArray(options.input) && options.type !== 'list') {\n    oktaUnderscore.each(options.input, function (input) {\n      validateInput(input, model);\n    });\n  }\n  const keys = oktaUnderscore.keys(options);\n  const intersection = oktaUnderscore.intersection(keys, ALL_OPTIONS);\n  if (oktaUnderscore.size(intersection) !== oktaUnderscore.size(options)) {\n    const fields = oktaUnderscore.clone(ALL_OPTIONS);\n    Logger.warn('Invalid input parameters', oktaUnderscore.without(keys, ...fields), options);\n  }\n}\nfunction generateInputOptions(options, form, createFn) {\n  options = oktaUnderscore.clone(options);\n  if (oktaUnderscore.contains(['list', 'group'], options.type)) {\n    options.params = oktaUnderscore.defaults({\n      create: createFn,\n      inputs: oktaUnderscore.map(oktaUnderscore.isArray(options.input) ? options.input : [options.input], function (input) {\n        return oktaUnderscore.first(generateInputOptions(input, form, createFn));\n      })\n    }, options.params || {});\n    delete options.input;\n  }\n  const inputs = oktaUnderscore.isArray(options.input) ? oktaUnderscore.clone(options.input) : [options];\n  return oktaUnderscore.map(inputs, function (input) {\n    const target = oktaUnderscore.defaults({\n      model: form.model\n    }, input, oktaUnderscore.omit(options, 'input', 'inputs'), form.options, {\n      id: oktaUnderscore.uniqueId('input'),\n      readOnly: form.isReadOnly(),\n      read: form.hasReadMode()\n    });\n    if (form.isReadOnly()) {\n      target.read = target.readOnly = true;\n    }\n    return target;\n  });\n}\nvar FormUtil = {\n  LABEL_OPTIONS: LABEL_OPTIONS,\n  CONTAINER_OPTIONS: CONTAINER_OPTIONS,\n  WRAPPER_OPTIONS: WRAPPER_OPTIONS,\n  INPUT_OPTIONS: INPUT_OPTIONS,\n  generateInputOptions: generateInputOptions,\n  changeEventString: function (fieldNames) {\n    return 'change:' + fieldNames.join(' change:');\n  },\n  createReadFormButton: function (options) {\n    let action;\n    let text;\n    let ariaLabel;\n    if (options.type === 'cancel') {\n      text = ariaLabel = StringUtil.localize('oform.cancel', 'courage');\n      action = function () {\n        this.model.trigger('form:cancel');\n      };\n    } else {\n      text = StringUtil.localize('oform.edit', 'courage');\n      ariaLabel = text + ' ' + options.formTitle;\n      action = function () {\n        this.model.set('__edit__', true);\n      };\n    }\n    return BaseView.extend({\n      tagName: 'a',\n      className: options.className,\n      attributes: {\n        href: '#',\n        'aria-label': ariaLabel\n      },\n      // TODO: refactor to enforce precompiled templates OKTA-309852\n      // eslint-disable-next-line @okta/okta-ui/no-bare-templates\n      template: function () {\n        return oktaUnderscore.escape(text);\n      },\n      events: {\n        click: function (e) {\n          e.preventDefault();\n          action.call(this);\n        }\n      }\n    });\n  },\n  createButton: function (options) {\n    options = oktaUnderscore.clone(options);\n    switch (options.type) {\n      case 'save':\n        oktaUnderscore.defaults(options, {\n          className: 'button-primary'\n        });\n        break;\n      case 'cancel':\n        oktaUnderscore.defaults(options, {\n          className: 'button-clear',\n          text: StringUtil.localize('oform.cancel', 'courage'),\n          action: function () {\n            this.model.trigger('form:cancel');\n          }\n        });\n        break;\n      case 'previous':\n        oktaUnderscore.defaults(options, {\n          text: StringUtil.localize('oform.previous', 'courage'),\n          action: function () {\n            this.model.trigger('form:previous');\n          }\n        });\n        break;\n    }\n    return createButton(options);\n  },\n  validateInput: validateInput,\n  /**\n   * Applies a show-when logic on a view instance.\n   * The show-when is a map of a model field name -> a boolean or a function that returns a boolean.\n   * The view will toggle based on the field value.\n   *\n   * @param  {Okta.View} view a view instance that has a this.model attached to it\n   * @param  {Object} showWhen\n   */\n  applyShowWhen: function (view, showWhen) {\n    const toggleAndResize = function (bool) {\n      return function () {\n        // The `toggle` is here since an event may be triggered before the el is in the DOM\n        // and in that case slide events may not function as expected.\n        view.$el.toggle(bool);\n        view.model.trigger('form:resize');\n      };\n    };\n    ViewUtil.applyDoWhen(view, decorateDoWhen(showWhen), function (bool, options) {\n      if (!options.animate) {\n        view.$el.toggle(bool);\n      } else {\n        view.$el['slide' + (bool ? 'Down' : 'Up')](200, toggleAndResize(bool));\n      }\n    });\n  },\n  applyToggleWhen: function (view, toggleWhen) {\n    ViewUtil.applyDoWhen(view, decorateDoWhen(toggleWhen), function (bool, options) {\n      view.$el.toggle(bool);\n      view.model.trigger('form:resize');\n      if (options.animate) {\n        view.render();\n      }\n    });\n  }\n};\nexport { FormUtil as default };","map":{"version":3,"names":["oktaUnderscore","Keys","Logger","StringUtil","ViewUtil","BaseView","LABEL_OPTIONS","CONTAINER_OPTIONS","WRAPPER_OPTIONS","INPUT_OPTIONS","OTHER_OPTIONS","ALL_OPTIONS","uniq","union","SAVE_BUTTON_PHASES","decorateDoWhen","doWhen","extend","__edit__","constant","createButton","options","pick","timeoutId","intervalId","phaseCount","tagName","className","events","click","action","disabled","call","keyup","e","isEnter","$el","prop","disable","addClass","enable","removeClass","initialize","self","attr","type","val","text","id","mousedown","model","set","mouseup","listenTo","clearTimeout","setTimeout","bind","__changeSaveText","clearInterval","setInterval","__showLoadingText","length","validateInput","label","warn","title","icon","href","name","input","isArray","Error","allows","names","push","each","keys","intersection","size","fields","clone","without","generateInputOptions","form","createFn","contains","params","defaults","create","inputs","map","first","target","omit","uniqueId","readOnly","isReadOnly","read","hasReadMode","FormUtil","changeEventString","fieldNames","join","createReadFormButton","ariaLabel","localize","trigger","formTitle","attributes","template","escape","preventDefault","applyShowWhen","view","showWhen","toggleAndResize","bool","toggle","applyDoWhen","animate","applyToggleWhen","toggleWhen","render","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/packages/@okta/courage-dist/esm/src/courage/views/forms/helpers/FormUtil.js"],"sourcesContent":["import oktaUnderscore from '../../../util/underscore-wrapper.js';\nimport Keys from '../../../util/Keys.js';\nimport Logger from '../../../util/Logger.js';\nimport StringUtil from '../../../util/StringUtil.js';\nimport ViewUtil from '../../../util/ViewUtil.js';\nimport BaseView from '../../BaseView.js';\n\n/* eslint max-params: [2, 6] */\nconst LABEL_OPTIONS = ['model', 'id', 'inputId', 'type', 'label', 'sublabel', 'tooltip', 'name', 'group'];\nconst CONTAINER_OPTIONS = ['wide', 'multi', 'input', 'label-top', 'explain', 'explain-top', 'customExplain', 'model', 'name', 'type', 'autoRender', 'multirowError'];\nconst WRAPPER_OPTIONS = ['model', 'name', 'label-top', 'readOnly', 'events', 'initialize', 'showWhen', 'bindings', 'render', 'className', 'data-se', 'toggleWhen', 'group'];\nconst INPUT_OPTIONS = ['model', 'name', 'inputId', 'type',\n// base options\n'input',\n// custom input\n'placeholder', 'label',\n// labels\n'readOnly', 'read', 'disabled', 'readModeString',\n// modes\n'options',\n// select/radio\n'deps',\n// used to specify inputs that have dependencies and show a callout to user on select\n'from', 'to',\n// model transformers,\n'autoRender',\n// model attributes change event to trigger rerendering of the input\n'inlineValidation',\n// control inline validating against the model on focus lost\n'validateOnlyIfDirty',\n// check if field has been interacted with and then validate\n'ariaLabel',\n// 508 compliance for inputs that do not have label associated with them\n'params', 'autoComplete',\n// autocomplete attribute\n'sortByKey'];\nconst OTHER_OPTIONS = ['errorField' // widgets params - for input specific widgets\n];\n\nconst ALL_OPTIONS = oktaUnderscore.uniq(oktaUnderscore.union(LABEL_OPTIONS, CONTAINER_OPTIONS, WRAPPER_OPTIONS, INPUT_OPTIONS, OTHER_OPTIONS));\nconst SAVE_BUTTON_PHASES = ['•         ', '•  •      ', '•  •  •   ', '•  •  •  •', '   •  •  •', '      •  •', '         •', '          ', '          ', '          '];\nfunction decorateDoWhen(doWhen) {\n  if (doWhen && !doWhen['__edit__']) {\n    return oktaUnderscore.extend({\n      __edit__: oktaUnderscore.constant(true)\n    }, doWhen);\n  }\n}\nfunction createButton(options) {\n  options = oktaUnderscore.pick(options || {}, 'action', 'id', 'className', 'text', 'type');\n  let timeoutId;\n  let intervalId;\n  let phaseCount;\n  return BaseView.extend({\n    tagName: 'input',\n    className: 'button',\n    events: {\n      click: function () {\n        if (options.action && !this.disabled()) {\n          options.action.call(this);\n        }\n      },\n      keyup: function (e) {\n        if (Keys.isEnter(e) && options.action && !this.disabled()) {\n          options.action.call(this);\n        }\n      }\n    },\n    disabled: function () {\n      return this.$el.prop('disabled') === true;\n    },\n    disable: function () {\n      this.$el.prop('disabled', true);\n      this.$el.addClass('btn-disabled');\n    },\n    enable: function () {\n      this.$el.prop('disabled', false);\n      this.$el.removeClass('btn-disabled');\n    },\n    initialize: function () {\n      const self = this;\n      this.$el.attr('type', options.type === 'save' ? 'submit' : 'button');\n      this.$el.val(options.text);\n      if (options.id) {\n        this.$el.attr('id', options.id);\n      }\n      if (options.className) {\n        this.$el.addClass(options.className);\n      }\n      if (options.type) {\n        this.$el.attr('data-type', options.type);\n      }\n      this.$el.mousedown(function () {\n        self.model.set('__pending__', true);\n      });\n      this.$el.mouseup(function () {\n        self.model.set('__pending__', false);\n      });\n      this.listenTo(this.model, 'form:set-saving-state', function () {\n        this.disable();\n        if (options.type === 'save') {\n          clearTimeout(timeoutId);\n          timeoutId = setTimeout(oktaUnderscore.bind(this.__changeSaveText, this), 1000);\n        }\n      });\n      this.listenTo(this.model, 'form:clear-saving-state', function () {\n        this.enable();\n        if (options.type === 'save') {\n          clearTimeout(timeoutId);\n          clearInterval(intervalId);\n          this.$el.val(options.text);\n        }\n      });\n    },\n    __changeSaveText: function () {\n      phaseCount = 0;\n      clearInterval(intervalId);\n      intervalId = setInterval(oktaUnderscore.bind(this.__showLoadingText, this), 200);\n    },\n    __showLoadingText: function () {\n      this.$el.val(SAVE_BUTTON_PHASES[phaseCount++ % SAVE_BUTTON_PHASES.length]);\n    }\n  });\n}\nfunction validateInput(options, model) {\n  /* eslint max-statements: 0, complexity: 0 */\n  options || (options = {});\n  if (options.type === 'label') {\n    if (!options.label) {\n      Logger.warn('A label input must have a \"label\" parameter', options);\n    }\n    return;\n  }\n  if (options.type === 'button') {\n    if (!options.title && !options.icon) {\n      Logger.warn('A button input must have a \"title\" and/or an \"icon\" parameter', options);\n    }\n    if (!options.click && !options.href) {\n      Logger.warn('A button input must have a \"click\" and/or an \"href\" parameter', options);\n    }\n    return;\n  }\n  if (!options.name && !options.input) {\n    Logger.warn('Missing \"name\" or \"input\" parameters', options);\n  }\n  if (oktaUnderscore.isArray(options.name) && oktaUnderscore.isArray(options.input)) {\n    throw new Error('Not allowed to have both \"name\" and \"input\" defined as array.');\n  }\n  if (options.type !== 'list' && options.name && model && model.allows) {\n    let names = [];\n    if (oktaUnderscore.isArray(options.name)) {\n      names = options.name;\n    } else {\n      names.push(options.name);\n    }\n    oktaUnderscore.each(names, function (name) {\n      if (!model.allows(name)) {\n        throw new Error('field not allowed: ' + options.name);\n      }\n    });\n  }\n  if (oktaUnderscore.isArray(options.input) && options.type !== 'list') {\n    oktaUnderscore.each(options.input, function (input) {\n      validateInput(input, model);\n    });\n  }\n  const keys = oktaUnderscore.keys(options);\n  const intersection = oktaUnderscore.intersection(keys, ALL_OPTIONS);\n  if (oktaUnderscore.size(intersection) !== oktaUnderscore.size(options)) {\n    const fields = oktaUnderscore.clone(ALL_OPTIONS);\n    Logger.warn('Invalid input parameters', oktaUnderscore.without(keys, ...fields), options);\n  }\n}\nfunction generateInputOptions(options, form, createFn) {\n  options = oktaUnderscore.clone(options);\n  if (oktaUnderscore.contains(['list', 'group'], options.type)) {\n    options.params = oktaUnderscore.defaults({\n      create: createFn,\n      inputs: oktaUnderscore.map(oktaUnderscore.isArray(options.input) ? options.input : [options.input], function (input) {\n        return oktaUnderscore.first(generateInputOptions(input, form, createFn));\n      })\n    }, options.params || {});\n    delete options.input;\n  }\n  const inputs = oktaUnderscore.isArray(options.input) ? oktaUnderscore.clone(options.input) : [options];\n  return oktaUnderscore.map(inputs, function (input) {\n    const target = oktaUnderscore.defaults({\n      model: form.model\n    }, input, oktaUnderscore.omit(options, 'input', 'inputs'), form.options, {\n      id: oktaUnderscore.uniqueId('input'),\n      readOnly: form.isReadOnly(),\n      read: form.hasReadMode()\n    });\n    if (form.isReadOnly()) {\n      target.read = target.readOnly = true;\n    }\n    return target;\n  });\n}\nvar FormUtil = {\n  LABEL_OPTIONS: LABEL_OPTIONS,\n  CONTAINER_OPTIONS: CONTAINER_OPTIONS,\n  WRAPPER_OPTIONS: WRAPPER_OPTIONS,\n  INPUT_OPTIONS: INPUT_OPTIONS,\n  generateInputOptions: generateInputOptions,\n  changeEventString: function (fieldNames) {\n    return 'change:' + fieldNames.join(' change:');\n  },\n  createReadFormButton: function (options) {\n    let action;\n    let text;\n    let ariaLabel;\n    if (options.type === 'cancel') {\n      text = ariaLabel = StringUtil.localize('oform.cancel', 'courage');\n      action = function () {\n        this.model.trigger('form:cancel');\n      };\n    } else {\n      text = StringUtil.localize('oform.edit', 'courage');\n      ariaLabel = text + ' ' + options.formTitle;\n      action = function () {\n        this.model.set('__edit__', true);\n      };\n    }\n    return BaseView.extend({\n      tagName: 'a',\n      className: options.className,\n      attributes: {\n        href: '#',\n        'aria-label': ariaLabel\n      },\n      // TODO: refactor to enforce precompiled templates OKTA-309852\n      // eslint-disable-next-line @okta/okta-ui/no-bare-templates\n      template: function () {\n        return oktaUnderscore.escape(text);\n      },\n      events: {\n        click: function (e) {\n          e.preventDefault();\n          action.call(this);\n        }\n      }\n    });\n  },\n  createButton: function (options) {\n    options = oktaUnderscore.clone(options);\n    switch (options.type) {\n      case 'save':\n        oktaUnderscore.defaults(options, {\n          className: 'button-primary'\n        });\n        break;\n      case 'cancel':\n        oktaUnderscore.defaults(options, {\n          className: 'button-clear',\n          text: StringUtil.localize('oform.cancel', 'courage'),\n          action: function () {\n            this.model.trigger('form:cancel');\n          }\n        });\n        break;\n      case 'previous':\n        oktaUnderscore.defaults(options, {\n          text: StringUtil.localize('oform.previous', 'courage'),\n          action: function () {\n            this.model.trigger('form:previous');\n          }\n        });\n        break;\n    }\n    return createButton(options);\n  },\n  validateInput: validateInput,\n  /**\n   * Applies a show-when logic on a view instance.\n   * The show-when is a map of a model field name -> a boolean or a function that returns a boolean.\n   * The view will toggle based on the field value.\n   *\n   * @param  {Okta.View} view a view instance that has a this.model attached to it\n   * @param  {Object} showWhen\n   */\n  applyShowWhen: function (view, showWhen) {\n    const toggleAndResize = function (bool) {\n      return function () {\n        // The `toggle` is here since an event may be triggered before the el is in the DOM\n        // and in that case slide events may not function as expected.\n        view.$el.toggle(bool);\n        view.model.trigger('form:resize');\n      };\n    };\n    ViewUtil.applyDoWhen(view, decorateDoWhen(showWhen), function (bool, options) {\n      if (!options.animate) {\n        view.$el.toggle(bool);\n      } else {\n        view.$el['slide' + (bool ? 'Down' : 'Up')](200, toggleAndResize(bool));\n      }\n    });\n  },\n  applyToggleWhen: function (view, toggleWhen) {\n    ViewUtil.applyDoWhen(view, decorateDoWhen(toggleWhen), function (bool, options) {\n      view.$el.toggle(bool);\n      view.model.trigger('form:resize');\n      if (options.animate) {\n        view.render();\n      }\n    });\n  }\n};\n\nexport { FormUtil as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}