{"ast":null,"code":"import { ConfigError } from '../util/Errors.js';\nimport Util from '../util/Util.js';\nimport config from '../config/config.json.js';\nfunction getAuthClientInstance(OktaAuth, options = {}) {\n  // if authClient is set, authParams are disregarded\n  let {\n    authClient: authClient,\n    authParams: authParams\n  } = options;\n  if (!authClient) {\n    // Create an authClient using widget options and optional authParams\n    const {\n      issuer: issuer,\n      clientId: clientId,\n      redirectUri: redirectUri,\n      state: state,\n      scopes: scopes,\n      flow: flow,\n      codeChallenge: codeChallenge,\n      codeChallengeMethod: codeChallengeMethod,\n      recoveryToken: recoveryToken\n    } = options;\n    authParams = {\n      issuer: issuer,\n      clientId: clientId,\n      redirectUri: redirectUri,\n      state: state,\n      scopes: scopes,\n      flow: flow,\n      codeChallenge: codeChallenge,\n      codeChallengeMethod: codeChallengeMethod,\n      transformErrorXHR: Util.transformErrorXHR,\n      recoveryToken: recoveryToken,\n      ...authParams\n    };\n    if (!authParams.issuer) {\n      authParams.issuer = options.baseUrl + '/oauth2/default';\n    }\n    authClient = new OktaAuth(authParams);\n  }\n\n  // Add widget version to extended user agent header\n  if (!authClient._oktaUserAgent) {\n    throw new ConfigError('The passed in authClient should be version 5.4.0 or above.');\n  } else {\n    authClient._oktaUserAgent.addEnvironment(`okta-signin-widget-${config.version}`);\n  }\n  return authClient;\n}\nexport { getAuthClientInstance as default };","map":{"version":3,"names":["ConfigError","Util","config","getAuthClientInstance","OktaAuth","options","authClient","authParams","issuer","clientId","redirectUri","state","scopes","flow","codeChallenge","codeChallengeMethod","recoveryToken","transformErrorXHR","baseUrl","_oktaUserAgent","addEnvironment","version","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/widget/getAuthClient.js"],"sourcesContent":["import { ConfigError } from '../util/Errors.js';\nimport Util from '../util/Util.js';\nimport config from '../config/config.json.js';\n\nfunction getAuthClientInstance(OktaAuth, options = {}) {\n  // if authClient is set, authParams are disregarded\n  let {\n    authClient: authClient,\n    authParams: authParams\n  } = options;\n  if (!authClient) {\n    // Create an authClient using widget options and optional authParams\n    const {\n      issuer: issuer,\n      clientId: clientId,\n      redirectUri: redirectUri,\n      state: state,\n      scopes: scopes,\n      flow: flow,\n      codeChallenge: codeChallenge,\n      codeChallengeMethod: codeChallengeMethod,\n      recoveryToken: recoveryToken\n    } = options;\n    authParams = {\n      issuer: issuer,\n      clientId: clientId,\n      redirectUri: redirectUri,\n      state: state,\n      scopes: scopes,\n      flow: flow,\n      codeChallenge: codeChallenge,\n      codeChallengeMethod: codeChallengeMethod,\n      transformErrorXHR: Util.transformErrorXHR,\n      recoveryToken: recoveryToken,\n      ...authParams\n    };\n    if (!authParams.issuer) {\n      authParams.issuer = options.baseUrl + '/oauth2/default';\n    }\n    authClient = new OktaAuth(authParams);\n  }\n\n  // Add widget version to extended user agent header\n  if (!authClient._oktaUserAgent) {\n    throw new ConfigError('The passed in authClient should be version 5.4.0 or above.');\n  } else {\n    authClient._oktaUserAgent.addEnvironment(`okta-signin-widget-${config.version}`);\n  }\n  return authClient;\n}\n\nexport { getAuthClientInstance as default };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,MAAM,MAAM,0BAA0B;AAE7C,SAASC,qBAAqBA,CAACC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACrD;EACA,IAAI;IACFC,UAAU,EAAEA,UAAU;IACtBC,UAAU,EAAEA;EACd,CAAC,GAAGF,OAAO;EACX,IAAI,CAACC,UAAU,EAAE;IACf;IACA,MAAM;MACJE,MAAM,EAAEA,MAAM;MACdC,QAAQ,EAAEA,QAAQ;MAClBC,WAAW,EAAEA,WAAW;MACxBC,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACdC,IAAI,EAAEA,IAAI;MACVC,aAAa,EAAEA,aAAa;MAC5BC,mBAAmB,EAAEA,mBAAmB;MACxCC,aAAa,EAAEA;IACjB,CAAC,GAAGX,OAAO;IACXE,UAAU,GAAG;MACXC,MAAM,EAAEA,MAAM;MACdC,QAAQ,EAAEA,QAAQ;MAClBC,WAAW,EAAEA,WAAW;MACxBC,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACdC,IAAI,EAAEA,IAAI;MACVC,aAAa,EAAEA,aAAa;MAC5BC,mBAAmB,EAAEA,mBAAmB;MACxCE,iBAAiB,EAAEhB,IAAI,CAACgB,iBAAiB;MACzCD,aAAa,EAAEA,aAAa;MAC5B,GAAGT;IACL,CAAC;IACD,IAAI,CAACA,UAAU,CAACC,MAAM,EAAE;MACtBD,UAAU,CAACC,MAAM,GAAGH,OAAO,CAACa,OAAO,GAAG,iBAAiB;IACzD;IACAZ,UAAU,GAAG,IAAIF,QAAQ,CAACG,UAAU,CAAC;EACvC;;EAEA;EACA,IAAI,CAACD,UAAU,CAACa,cAAc,EAAE;IAC9B,MAAM,IAAInB,WAAW,CAAC,4DAA4D,CAAC;EACrF,CAAC,MAAM;IACLM,UAAU,CAACa,cAAc,CAACC,cAAc,CAAC,sBAAsBlB,MAAM,CAACmB,OAAO,EAAE,CAAC;EAClF;EACA,OAAOf,UAAU;AACnB;AAEA,SAASH,qBAAqB,IAAImB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}