{"ast":null,"code":"import _asyncToGenerator from \"C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { stringToBase64Url, stringToBuffer, base64ToBase64Url, bufferToBase64Url } from '../crypto/base64.js';\nimport { webcrypto as c, btoa as b } from '../crypto/browser.js';\nimport { isOAuthError, isWWWAuthError } from '../errors/index.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nconst INDEXEDDB_NAME = 'OktaAuthJs';\nconst DB_KEY = 'DPoPKeys';\nfunction isDPoPNonceError(obj) {\n  return (isOAuthError(obj) || isWWWAuthError(obj)) && obj.errorCode === 'use_dpop_nonce';\n}\nfunction createJwt(_x, _x2, _x3) {\n  return _createJwt.apply(this, arguments);\n}\nfunction _createJwt() {\n  _createJwt = _asyncToGenerator(function* (header, claims, signingKey) {\n    const head = stringToBase64Url(JSON.stringify(header));\n    const body = stringToBase64Url(JSON.stringify(claims));\n    const signature = yield c.subtle.sign({\n      name: signingKey.algorithm.name\n    }, signingKey, stringToBuffer(`${head}.${body}`));\n    return `${head}.${body}.${base64ToBase64Url(bufferToBase64Url(signature))}`;\n  });\n  return _createJwt.apply(this, arguments);\n}\nfunction cryptoRandomValue(byteLen = 32) {\n  return [...c.getRandomValues(new Uint8Array(byteLen))].map(v => v.toString(16)).join('');\n}\nfunction generateKeyPair() {\n  return _generateKeyPair.apply(this, arguments);\n}\nfunction _generateKeyPair() {\n  _generateKeyPair = _asyncToGenerator(function* () {\n    const algorithm = {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: 'SHA-256',\n      modulusLength: 2048,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01])\n    };\n    return c.subtle.generateKey(algorithm, false, ['sign', 'verify']);\n  });\n  return _generateKeyPair.apply(this, arguments);\n}\nfunction hashAccessToken(_x4) {\n  return _hashAccessToken.apply(this, arguments);\n}\nfunction _hashAccessToken() {\n  _hashAccessToken = _asyncToGenerator(function* (accessToken) {\n    const buffer = new TextEncoder().encode(accessToken);\n    const hash = yield c.subtle.digest('SHA-256', buffer);\n    return b(String.fromCharCode.apply(null, new Uint8Array(hash))).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  });\n  return _hashAccessToken.apply(this, arguments);\n}\nfunction keyStore() {\n  return new Promise((resolve, reject) => {\n    try {\n      const indexedDB = window.indexedDB;\n      const req = indexedDB.open(INDEXEDDB_NAME, 1);\n      req.onerror = function () {\n        reject(req.error);\n      };\n      req.onupgradeneeded = function () {\n        const db = req.result;\n        db.createObjectStore(DB_KEY);\n      };\n      req.onsuccess = function () {\n        const db = req.result;\n        const tx = db.transaction(DB_KEY, 'readwrite');\n        tx.onerror = function () {\n          reject(tx.error);\n        };\n        const store = tx.objectStore(DB_KEY);\n        resolve(store);\n        tx.oncomplete = function () {\n          db.close();\n        };\n      };\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\nfunction invokeStoreMethod(_x5) {\n  return _invokeStoreMethod.apply(this, arguments);\n}\nfunction _invokeStoreMethod() {\n  _invokeStoreMethod = _asyncToGenerator(function* (method, ...args) {\n    const store = yield keyStore();\n    return new Promise((resolve, reject) => {\n      const req = store[method](...args);\n      req.onsuccess = function () {\n        resolve(req);\n      };\n      req.onerror = function () {\n        reject(req.error);\n      };\n    });\n  });\n  return _invokeStoreMethod.apply(this, arguments);\n}\nfunction storeKeyPair(_x6, _x7) {\n  return _storeKeyPair.apply(this, arguments);\n}\nfunction _storeKeyPair() {\n  _storeKeyPair = _asyncToGenerator(function* (pairId, keyPair) {\n    yield invokeStoreMethod('add', keyPair, pairId);\n    return keyPair;\n  });\n  return _storeKeyPair.apply(this, arguments);\n}\nfunction findKeyPair(_x8) {\n  return _findKeyPair.apply(this, arguments);\n}\nfunction _findKeyPair() {\n  _findKeyPair = _asyncToGenerator(function* (pairId) {\n    if (pairId) {\n      const req = yield invokeStoreMethod('get', pairId);\n      if (req.result) {\n        return req.result;\n      }\n    }\n    throw new AuthSdkError(`Unable to locate dpop key pair required for refresh${pairId ? ` (${pairId})` : ''}`);\n  });\n  return _findKeyPair.apply(this, arguments);\n}\nfunction clearDPoPKeyPair(_x9) {\n  return _clearDPoPKeyPair.apply(this, arguments);\n}\nfunction _clearDPoPKeyPair() {\n  _clearDPoPKeyPair = _asyncToGenerator(function* (pairId) {\n    yield invokeStoreMethod('delete', pairId);\n  });\n  return _clearDPoPKeyPair.apply(this, arguments);\n}\nfunction clearAllDPoPKeyPairs() {\n  return _clearAllDPoPKeyPairs.apply(this, arguments);\n}\nfunction _clearAllDPoPKeyPairs() {\n  _clearAllDPoPKeyPairs = _asyncToGenerator(function* () {\n    yield invokeStoreMethod('clear');\n  });\n  return _clearAllDPoPKeyPairs.apply(this, arguments);\n}\nfunction createDPoPKeyPair() {\n  return _createDPoPKeyPair.apply(this, arguments);\n}\nfunction _createDPoPKeyPair() {\n  _createDPoPKeyPair = _asyncToGenerator(function* () {\n    const keyPairId = cryptoRandomValue(4);\n    const keyPair = yield generateKeyPair();\n    yield storeKeyPair(keyPairId, keyPair);\n    return {\n      keyPair,\n      keyPairId\n    };\n  });\n  return _createDPoPKeyPair.apply(this, arguments);\n}\nfunction clearDPoPKeyPairAfterRevoke(_x10, _x11) {\n  return _clearDPoPKeyPairAfterRevoke.apply(this, arguments);\n}\nfunction _clearDPoPKeyPairAfterRevoke() {\n  _clearDPoPKeyPairAfterRevoke = _asyncToGenerator(function* (revokedToken, tokens) {\n    var _a;\n    let shouldClear = false;\n    const {\n      accessToken,\n      refreshToken\n    } = tokens;\n    if (revokedToken === 'access' && accessToken && accessToken.tokenType === 'DPoP' && !refreshToken) {\n      shouldClear = true;\n    }\n    if (revokedToken === 'refresh' && refreshToken && !accessToken) {\n      shouldClear = true;\n    }\n    const pairId = (_a = accessToken === null || accessToken === void 0 ? void 0 : accessToken.dpopPairId) !== null && _a !== void 0 ? _a : refreshToken === null || refreshToken === void 0 ? void 0 : refreshToken.dpopPairId;\n    if (shouldClear && pairId) {\n      yield clearDPoPKeyPair(pairId);\n    }\n  });\n  return _clearDPoPKeyPairAfterRevoke.apply(this, arguments);\n}\nfunction generateDPoPProof(_x12) {\n  return _generateDPoPProof.apply(this, arguments);\n}\nfunction _generateDPoPProof() {\n  _generateDPoPProof = _asyncToGenerator(function* ({\n    keyPair,\n    url,\n    method,\n    nonce,\n    accessToken\n  }) {\n    const {\n      kty,\n      crv,\n      e,\n      n,\n      x,\n      y\n    } = yield c.subtle.exportKey('jwk', keyPair.publicKey);\n    const header = {\n      alg: 'RS256',\n      typ: 'dpop+jwt',\n      jwk: {\n        kty,\n        crv,\n        e,\n        n,\n        x,\n        y\n      }\n    };\n    const claims = {\n      htm: method,\n      htu: url,\n      iat: Math.floor(Date.now() / 1000),\n      jti: cryptoRandomValue()\n    };\n    if (nonce) {\n      claims.nonce = nonce;\n    }\n    if (accessToken) {\n      claims.ath = yield hashAccessToken(accessToken);\n    }\n    return createJwt(header, claims, keyPair.privateKey);\n  });\n  return _generateDPoPProof.apply(this, arguments);\n}\nfunction generateDPoPForTokenRequest(_x13) {\n  return _generateDPoPForTokenRequest.apply(this, arguments);\n}\nfunction _generateDPoPForTokenRequest() {\n  _generateDPoPForTokenRequest = _asyncToGenerator(function* ({\n    keyPair,\n    url,\n    method,\n    nonce\n  }) {\n    const params = {\n      keyPair,\n      url,\n      method\n    };\n    if (nonce) {\n      params.nonce = nonce;\n    }\n    return generateDPoPProof(params);\n  });\n  return _generateDPoPForTokenRequest.apply(this, arguments);\n}\nexport { clearAllDPoPKeyPairs, clearDPoPKeyPair, clearDPoPKeyPairAfterRevoke, createDPoPKeyPair, createJwt, cryptoRandomValue, findKeyPair, generateDPoPForTokenRequest, generateDPoPProof, generateKeyPair, isDPoPNonceError };","map":{"version":3,"names":["stringToBase64Url","stringToBuffer","base64ToBase64Url","bufferToBase64Url","webcrypto","c","btoa","b","isOAuthError","isWWWAuthError","AuthSdkError","INDEXEDDB_NAME","DB_KEY","isDPoPNonceError","obj","errorCode","createJwt","_x","_x2","_x3","_createJwt","apply","arguments","_asyncToGenerator","header","claims","signingKey","head","JSON","stringify","body","signature","subtle","sign","name","algorithm","cryptoRandomValue","byteLen","getRandomValues","Uint8Array","map","v","toString","join","generateKeyPair","_generateKeyPair","hash","modulusLength","publicExponent","generateKey","hashAccessToken","_x4","_hashAccessToken","accessToken","buffer","TextEncoder","encode","digest","String","fromCharCode","replace","keyStore","Promise","resolve","reject","indexedDB","window","req","open","onerror","error","onupgradeneeded","db","result","createObjectStore","onsuccess","tx","transaction","store","objectStore","oncomplete","close","err","invokeStoreMethod","_x5","_invokeStoreMethod","method","args","storeKeyPair","_x6","_x7","_storeKeyPair","pairId","keyPair","findKeyPair","_x8","_findKeyPair","clearDPoPKeyPair","_x9","_clearDPoPKeyPair","clearAllDPoPKeyPairs","_clearAllDPoPKeyPairs","createDPoPKeyPair","_createDPoPKeyPair","keyPairId","clearDPoPKeyPairAfterRevoke","_x10","_x11","_clearDPoPKeyPairAfterRevoke","revokedToken","tokens","_a","shouldClear","refreshToken","tokenType","dpopPairId","generateDPoPProof","_x12","_generateDPoPProof","url","nonce","kty","crv","e","n","x","y","exportKey","publicKey","alg","typ","jwk","htm","htu","iat","Math","floor","Date","now","jti","ath","privateKey","generateDPoPForTokenRequest","_x13","_generateDPoPForTokenRequest","params"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/oidc/dpop.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { stringToBase64Url, stringToBuffer, base64ToBase64Url, bufferToBase64Url } from '../crypto/base64.js';\nimport { webcrypto as c, btoa as b } from '../crypto/browser.js';\nimport { isOAuthError, isWWWAuthError } from '../errors/index.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\n\nconst INDEXEDDB_NAME = 'OktaAuthJs';\nconst DB_KEY = 'DPoPKeys';\nfunction isDPoPNonceError(obj) {\n    return ((isOAuthError(obj) || isWWWAuthError(obj)) &&\n        obj.errorCode === 'use_dpop_nonce');\n}\nasync function createJwt(header, claims, signingKey) {\n    const head = stringToBase64Url(JSON.stringify(header));\n    const body = stringToBase64Url(JSON.stringify(claims));\n    const signature = await c.subtle.sign({ name: signingKey.algorithm.name }, signingKey, stringToBuffer(`${head}.${body}`));\n    return `${head}.${body}.${base64ToBase64Url(bufferToBase64Url(signature))}`;\n}\nfunction cryptoRandomValue(byteLen = 32) {\n    return [...c.getRandomValues(new Uint8Array(byteLen))].map(v => v.toString(16)).join('');\n}\nasync function generateKeyPair() {\n    const algorithm = {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: 'SHA-256',\n        modulusLength: 2048,\n        publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n    };\n    return c.subtle.generateKey(algorithm, false, ['sign', 'verify']);\n}\nasync function hashAccessToken(accessToken) {\n    const buffer = new TextEncoder().encode(accessToken);\n    const hash = await c.subtle.digest('SHA-256', buffer);\n    return b(String.fromCharCode.apply(null, new Uint8Array(hash)))\n        .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nfunction keyStore() {\n    return new Promise((resolve, reject) => {\n        try {\n            const indexedDB = window.indexedDB;\n            const req = indexedDB.open(INDEXEDDB_NAME, 1);\n            req.onerror = function () {\n                reject(req.error);\n            };\n            req.onupgradeneeded = function () {\n                const db = req.result;\n                db.createObjectStore(DB_KEY);\n            };\n            req.onsuccess = function () {\n                const db = req.result;\n                const tx = db.transaction(DB_KEY, 'readwrite');\n                tx.onerror = function () {\n                    reject(tx.error);\n                };\n                const store = tx.objectStore(DB_KEY);\n                resolve(store);\n                tx.oncomplete = function () {\n                    db.close();\n                };\n            };\n        }\n        catch (err) {\n            reject(err);\n        }\n    });\n}\nasync function invokeStoreMethod(method, ...args) {\n    const store = await keyStore();\n    return new Promise((resolve, reject) => {\n        const req = store[method](...args);\n        req.onsuccess = function () {\n            resolve(req);\n        };\n        req.onerror = function () {\n            reject(req.error);\n        };\n    });\n}\nasync function storeKeyPair(pairId, keyPair) {\n    await invokeStoreMethod('add', keyPair, pairId);\n    return keyPair;\n}\nasync function findKeyPair(pairId) {\n    if (pairId) {\n        const req = await invokeStoreMethod('get', pairId);\n        if (req.result) {\n            return req.result;\n        }\n    }\n    throw new AuthSdkError(`Unable to locate dpop key pair required for refresh${pairId ? ` (${pairId})` : ''}`);\n}\nasync function clearDPoPKeyPair(pairId) {\n    await invokeStoreMethod('delete', pairId);\n}\nasync function clearAllDPoPKeyPairs() {\n    await invokeStoreMethod('clear');\n}\nasync function createDPoPKeyPair() {\n    const keyPairId = cryptoRandomValue(4);\n    const keyPair = await generateKeyPair();\n    await storeKeyPair(keyPairId, keyPair);\n    return { keyPair, keyPairId };\n}\nasync function clearDPoPKeyPairAfterRevoke(revokedToken, tokens) {\n    var _a;\n    let shouldClear = false;\n    const { accessToken, refreshToken } = tokens;\n    if (revokedToken === 'access' && accessToken && accessToken.tokenType === 'DPoP' && !refreshToken) {\n        shouldClear = true;\n    }\n    if (revokedToken === 'refresh' && refreshToken && !accessToken) {\n        shouldClear = true;\n    }\n    const pairId = (_a = accessToken === null || accessToken === void 0 ? void 0 : accessToken.dpopPairId) !== null && _a !== void 0 ? _a : refreshToken === null || refreshToken === void 0 ? void 0 : refreshToken.dpopPairId;\n    if (shouldClear && pairId) {\n        await clearDPoPKeyPair(pairId);\n    }\n}\nasync function generateDPoPProof({ keyPair, url, method, nonce, accessToken }) {\n    const { kty, crv, e, n, x, y } = await c.subtle.exportKey('jwk', keyPair.publicKey);\n    const header = {\n        alg: 'RS256',\n        typ: 'dpop+jwt',\n        jwk: { kty, crv, e, n, x, y }\n    };\n    const claims = {\n        htm: method,\n        htu: url,\n        iat: Math.floor(Date.now() / 1000),\n        jti: cryptoRandomValue(),\n    };\n    if (nonce) {\n        claims.nonce = nonce;\n    }\n    if (accessToken) {\n        claims.ath = await hashAccessToken(accessToken);\n    }\n    return createJwt(header, claims, keyPair.privateKey);\n}\nasync function generateDPoPForTokenRequest({ keyPair, url, method, nonce }) {\n    const params = { keyPair, url, method };\n    if (nonce) {\n        params.nonce = nonce;\n    }\n    return generateDPoPProof(params);\n}\n\nexport { clearAllDPoPKeyPairs, clearDPoPKeyPair, clearDPoPKeyPairAfterRevoke, createDPoPKeyPair, createJwt, cryptoRandomValue, findKeyPair, generateDPoPForTokenRequest, generateDPoPProof, generateKeyPair, isDPoPNonceError };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}