{"ast":null,"code":"import AccountUnlockedController from './controllers/AccountUnlockedController.js';\nimport ActivateTotpController from './controllers/ActivateTotpController.js';\nimport AdminConsentRequiredController from './controllers/AdminConsentRequiredController.js';\nimport BarcodePushController from './controllers/BarcodePushController.js';\nimport BarcodeTotpController from './controllers/BarcodeTotpController.js';\nimport ConsentRequiredController from './controllers/ConsentRequiredController.js';\nimport CustomPasswordExpiredController from './controllers/CustomPasswordExpiredController.js';\nimport DeviceActivateController from './controllers/DeviceActivateController.js';\nimport DeviceActivateTerminalController from './controllers/DeviceActivateTerminalController.js';\nimport EnrollActivateCustomFactorController from './controllers/EnrollActivateCustomFactorController.js';\nimport EnrollActivateEmailController from './controllers/EnrollActivateEmailController.js';\nimport EnrollCallAndSmsController from './controllers/EnrollCallAndSmsController.js';\nimport EnrollChoicesController from './controllers/EnrollChoicesController.js';\nimport EnrollCustomFactorController from './controllers/EnrollCustomFactorController.js';\nimport EnrollDuoController from './controllers/EnrollDuoController.js';\nimport EnrollEmailController from './controllers/EnrollEmailController.js';\nimport EnrollHotpController from './controllers/EnrollHotpController.js';\nimport EnrollOnPremController from './controllers/EnrollOnPremController.js';\nimport EnrollPasswordController from './controllers/EnrollPasswordController.js';\nimport EnrollQuestionController from './controllers/EnrollQuestionController.js';\nimport EnrollSymantecVipController from './controllers/EnrollSymantecVipController.js';\nimport EnrollTotpControllerEnrollTotpController from './controllers/EnrollTotpController.js';\nimport EnrollU2FController from './controllers/EnrollU2FController.js';\nimport EnrollUserController from './controllers/EnrollUserController.js';\nimport EnrollWebauthnController from './controllers/EnrollWebauthnController.js';\nimport EnrollWindowsHelloController from './controllers/EnrollWindowsHelloController.js';\nimport EnrollYubikeyController from './controllers/EnrollYubikeyController.js';\nimport EnrollmentLinkSentController from './controllers/EnrollmentLinkSentController.js';\nimport EnterPasscodePushFlowController from './controllers/EnterPasscodePushFlowController.js';\nimport ForgotPasswordController from './controllers/ForgotPasswordController.js';\nimport IDPDiscoveryController from './controllers/IDPDiscoveryController.js';\nimport ForceIDPDiscoveryController from './controllers/ForceIDPDiscoveryController.js';\nimport ManualSetupPushController from './controllers/ManualSetupPushController.js';\nimport ManualSetupTotpController from './controllers/ManualSetupTotpController.js';\nimport MfaVerifyController from './controllers/MfaVerifyController.js';\nimport PasswordExpiredController from './controllers/PasswordExpiredController.js';\nimport PasswordResetController from './controllers/PasswordResetController.js';\nimport PollController from './controllers/PollController.js';\nimport PrimaryAuthController from './controllers/PrimaryAuthController.js';\nimport PwdResetEmailSentController from './controllers/PwdResetEmailSentController.js';\nimport RecoveryChallengeController from './controllers/RecoveryChallengeController.js';\nimport RecoveryLoadingController from './controllers/RecoveryLoadingController.js';\nimport RecoveryQuestionController from './controllers/RecoveryQuestionController.js';\nimport RefreshAuthStateController from './controllers/RefreshAuthStateController.js';\nimport RegistrationCompleteController from './controllers/RegistrationCompleteController.js';\nimport RegistrationController from './controllers/RegistrationController.js';\nimport UnlockAccountController from './controllers/UnlockAccountController.js';\nimport UnlockEmailSentController from './controllers/UnlockEmailSentController.js';\nimport VerifyCustomFactorController from './controllers/VerifyCustomFactorController.js';\nimport VerifyDuoController from './controllers/VerifyDuoController.js';\nimport VerifyPIVController from './controllers/VerifyPIVController.js';\nimport VerifyU2FController from './controllers/VerifyU2FController.js';\nimport VerifyWebauthnController from './controllers/VerifyWebauthnController.js';\nimport VerifyWindowsHelloController from './controllers/VerifyWindowsHelloController.js';\nimport ErrorStateController from './controllers/ErrorStateController.js';\nimport BaseLoginRouter from './BaseLoginRouter.js';\nimport FactorBeacon from './views/shared/FactorBeacon.js';\nimport PIVBeacon from './views/shared/PIVBeacon.js';\nimport SecurityBeacon from './views/shared/SecurityBeacon.js';\nimport Enums from '../util/Enums.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar V1Router = BaseLoginRouter.extend({\n  routes: {\n    '': 'defaultAuth',\n    signin: 'primaryAuth',\n    'signin/okta/:username': 'primaryAuth',\n    'signin/verify/duo/web': 'verifyDuo',\n    'signin/verify/piv': 'verifyPIV',\n    'signin/poll': 'poll',\n    'signin/verify/fido/webauthn': 'verifyWebauthn',\n    'signin/verify/webauthn': 'verifyWebauthn',\n    'signin/verify/fido/u2f': 'verifyU2F',\n    'signin/verify/u2f': 'verifyU2F',\n    'signin/verify/generic_saml/assertion:saml2': 'verifySAMLFactor',\n    'signin/verify/generic_oidc/assertion:oidc': 'verifyOIDCFactor',\n    'signin/verify/custom/claims_provider': 'verifyClaimsFactor',\n    'signin/verify/:factorType': 'verifyNoProvider',\n    'signin/verify/:provider/:factorType(/:factorIndex)': 'verify',\n    'signin/enroll': 'enrollChoices',\n    'signin/enroll/duo/web': 'enrollDuo',\n    'signin/enroll/okta/question': 'enrollQuestion',\n    'signin/enroll/okta/password': 'enrollPassword',\n    'signin/enroll/okta/sms': 'enrollSms',\n    'signin/enroll/okta/call': 'enrollCall',\n    'signin/enroll/okta/email': 'enrollEmail',\n    'signin/enroll-activate/okta/sms': 'enrollSms',\n    'signin/enroll-activate/okta/call': 'enrollCall',\n    'signin/enroll/rsa/token': 'enrollRsa',\n    'signin/enroll/del_oath/token': 'enrollOnPrem',\n    'signin/enroll/symantec/token': 'enrollSymantecVip',\n    'signin/enroll/yubico/token:hardware': 'enrollYubikey',\n    'signin/enroll/fido/webauthn': 'enrollWebauthn',\n    'signin/enroll/fido/u2f': 'enrollU2F',\n    'signin/enroll/generic_saml/assertion:saml2': 'enrollSAMLFactor',\n    'signin/enroll/generic_oidc/assertion:oidc': 'enrollOIDCFactor',\n    'signin/enroll/custom/claims_provider': 'enrollClaimsFactor',\n    'signin/enroll/custom/token:hotp': 'enrollHotpFactor',\n    'signin/enroll/:provider/:factorType': 'enrollTotpFactor',\n    'signin/enroll-activate/okta/email': 'enrollActivateEmail',\n    'signin/enroll-activate/okta/push': 'scanBarcodePushFactor',\n    'signin/enroll-activate/okta/push/manual': 'manualSetupPushFactor',\n    'signin/enroll-activate/okta/push/sent': 'activationLinkSent',\n    'signin/enroll-activate/okta/token:software:totp/passcode': 'enterPasscodeInPushEnrollmentFlow',\n    'signin/enroll-activate/custom/claims_provider': 'enrollActivateClaimsFactor',\n    'signin/enroll-activate/:provider/:factorType': 'scanBarcodeTotpFactor',\n    'signin/enroll-activate/:provider/:factorType/activate': 'activateTotpFactor',\n    'signin/enroll-activate/:provider/:factorType/manual': 'manualSetupTotpFactor',\n    'signin/password-expired': 'passwordExpired',\n    'signin/custom-password-expired': 'customPasswordExpired',\n    'signin/forgot-password': 'forgotPassword',\n    'signin/recovery-challenge': 'recoveryChallenge',\n    'signin/recovery-emailed': 'recoveryEmailSent',\n    'signin/recovery-question': 'recoveryQuestion',\n    'signin/password-reset': 'passwordReset',\n    'signin/reset-password/:token': 'recoveryLoading',\n    'signin/user-unlock/:token': 'recoveryLoading',\n    'signin/recovery/:token': 'recoveryLoading',\n    'signin/unlock-emailed': 'unlockEmailSent',\n    'signin/unlock': 'unlockAccount',\n    'signin/account-unlocked': 'accountUnlocked',\n    'signin/refresh-auth-state(/:token)': 'refreshAuthState',\n    'signin/register': 'register',\n    'signin/register-complete': 'registerComplete',\n    'signin/error': 'errorState',\n    'signin/consent': 'consentRequired',\n    'signin/admin-consent': 'adminConsentRequired',\n    'signin/enroll-user': 'enrollUser',\n    'signin/device-activate-complete': 'deviceActivateComplete',\n    'signin/device-activate': 'deviceActivate',\n    'signin/idp-discovery-check': 'idpDiscoveryCheck',\n    '*wildcard': 'defaultAuth'\n  },\n  // Route handlers that do not require a stateToken. If the page is refreshed,\n  // these functions will not require a status call to refresh the stateToken.\n  stateLessRouteHandlers: ['defaultAuth', 'idpDiscovery', 'primaryAuth', 'forgotPassword', 'recoveryLoading', 'unlockAccount', 'refreshAuthState', 'register', 'registerComplete', 'errorState', 'verifyPIV'],\n  defaultAuth: function () {\n    if (window.location.hash === `#${Enums.WIDGET_CONTAINER_ID}`) {\n      document.getElementById(Enums.WIDGET_CONTAINER_ID).focus();\n      return;\n    }\n    if (this.settings.get('features.idpDiscovery')) {\n      this.idpDiscovery();\n    } else {\n      this.primaryAuth();\n    }\n  },\n  idpDiscoveryCheck: function () {\n    this.render(ForceIDPDiscoveryController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  idpDiscovery: function () {\n    this.render(IDPDiscoveryController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  primaryAuth: function (username) {\n    this.render(PrimaryAuthController, {\n      Beacon: SecurityBeacon,\n      username: username\n    });\n  },\n  verifyDuo: function () {\n    this.render(VerifyDuoController, {\n      provider: 'DUO',\n      factorType: 'web',\n      Beacon: FactorBeacon\n    });\n  },\n  verifyPIV: function () {\n    this.render(VerifyPIVController, {\n      Beacon: PIVBeacon\n    });\n  },\n  poll: function () {\n    this.render(PollController);\n  },\n  verifyWebauthn: function () {\n    if (this.settings.get('features.webauthn')) {\n      this.render(VerifyWebauthnController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon\n      });\n    } else {\n      this.render(VerifyWindowsHelloController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon\n      });\n    }\n  },\n  verifyU2F: function () {\n    this.render(VerifyU2FController, {\n      provider: 'FIDO',\n      factorType: 'u2f',\n      Beacon: FactorBeacon\n    });\n  },\n  verifySAMLFactor: function () {\n    this.render(VerifyCustomFactorController, {\n      provider: 'GENERIC_SAML',\n      factorType: 'assertion:saml2',\n      Beacon: FactorBeacon\n    });\n  },\n  verifyOIDCFactor: function () {\n    this.render(VerifyCustomFactorController, {\n      provider: 'GENERIC_OIDC',\n      factorType: 'assertion:oidc',\n      Beacon: FactorBeacon\n    });\n  },\n  verifyClaimsFactor: function () {\n    this.render(VerifyCustomFactorController, {\n      provider: 'CUSTOM',\n      factorType: 'claims_provider',\n      Beacon: FactorBeacon\n    });\n  },\n  verify: function (provider, factorType, factorIndex) {\n    this.render(MfaVerifyController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      factorIndex: factorIndex,\n      Beacon: FactorBeacon\n    });\n  },\n  verifyNoProvider: function (factorType) {\n    this.render(MfaVerifyController, {\n      factorType: factorType,\n      Beacon: FactorBeacon\n    });\n  },\n  enrollChoices: function () {\n    this.render(EnrollChoicesController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  enrollDuo: function () {\n    this.render(EnrollDuoController, {\n      provider: 'DUO',\n      factorType: 'web',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollQuestion: function () {\n    this.render(EnrollQuestionController, {\n      provider: 'OKTA',\n      factorType: 'question',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollPassword: function () {\n    this.render(EnrollPasswordController, {\n      provider: 'OKTA',\n      factorType: 'password',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollSms: function () {\n    this.render(EnrollCallAndSmsController, {\n      provider: 'OKTA',\n      factorType: 'sms',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollCall: function () {\n    this.render(EnrollCallAndSmsController, {\n      provider: 'OKTA',\n      factorType: 'call',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollEmail: function () {\n    this.render(EnrollEmailController, {\n      provider: 'OKTA',\n      factorType: 'email',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollActivateEmail: function () {\n    this.render(EnrollActivateEmailController, {\n      provider: 'OKTA',\n      factorType: 'email',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollRsa: function () {\n    this.render(EnrollOnPremController, {\n      provider: 'RSA',\n      factorType: 'token',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollOnPrem: function () {\n    this.render(EnrollOnPremController, {\n      provider: 'DEL_OATH',\n      factorType: 'token',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollSymantecVip: function () {\n    this.render(EnrollSymantecVipController, {\n      provider: 'SYMANTEC',\n      factorType: 'token',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollYubikey: function () {\n    this.render(EnrollYubikeyController, {\n      provider: 'YUBICO',\n      factorType: 'token:hardware',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollSAMLFactor: function () {\n    this.render(EnrollCustomFactorController, {\n      provider: 'GENERIC_SAML',\n      factorType: 'assertion:saml2',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollOIDCFactor: function () {\n    this.render(EnrollCustomFactorController, {\n      provider: 'GENERIC_OIDC',\n      factorType: 'assertion:oidc',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollClaimsFactor: function () {\n    this.render(EnrollCustomFactorController, {\n      provider: 'CUSTOM',\n      factorType: 'claims_provider',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollActivateClaimsFactor: function () {\n    this.render(EnrollActivateCustomFactorController, {\n      provider: 'CUSTOM',\n      factorType: 'claims_provider',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollTotpFactor: function (provider, factorType) {\n    this.render(EnrollTotpControllerEnrollTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon\n    });\n  },\n  enrollHotpFactor: function () {\n    this.render(EnrollHotpController, {\n      provider: 'CUSTOM',\n      factorType: 'token:hotp',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollWebauthn: function () {\n    if (this.settings.get('features.webauthn')) {\n      this.render(EnrollWebauthnController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon\n      });\n    } else {\n      this.render(EnrollWindowsHelloController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon\n      });\n    }\n  },\n  enrollU2F: function () {\n    this.render(EnrollU2FController, {\n      provider: 'FIDO',\n      factorType: 'u2f',\n      Beacon: FactorBeacon\n    });\n  },\n  scanBarcodeTotpFactor: function (provider, factorType) {\n    this.render(BarcodeTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon\n    });\n  },\n  scanBarcodePushFactor: function () {\n    this.render(BarcodePushController, {\n      provider: 'OKTA',\n      factorType: 'push',\n      Beacon: FactorBeacon\n    });\n  },\n  activateTotpFactor: function (provider, factorType) {\n    this.render(ActivateTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon\n    });\n  },\n  manualSetupTotpFactor: function (provider, factorType) {\n    this.render(ManualSetupTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon\n    });\n  },\n  manualSetupPushFactor: function () {\n    this.render(ManualSetupPushController, {\n      provider: 'OKTA',\n      factorType: 'push',\n      Beacon: FactorBeacon\n    });\n  },\n  activationLinkSent: function () {\n    this.render(EnrollmentLinkSentController, {\n      provider: 'OKTA',\n      factorType: 'push',\n      Beacon: FactorBeacon\n    });\n  },\n  enterPasscodeInPushEnrollmentFlow: function () {\n    this.render(EnterPasscodePushFlowController, {\n      provider: 'OKTA',\n      factorType: 'token:software:totp',\n      Beacon: FactorBeacon\n    });\n  },\n  passwordExpired: function () {\n    this.render(PasswordExpiredController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  customPasswordExpired: function () {\n    this.render(CustomPasswordExpiredController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  forgotPassword: function () {\n    this.render(ForgotPasswordController);\n  },\n  recoveryChallenge: function () {\n    this.render(RecoveryChallengeController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  recoveryEmailSent: function () {\n    this.render(PwdResetEmailSentController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  unlockEmailSent: function () {\n    this.render(UnlockEmailSentController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  recoveryQuestion: function () {\n    this.render(RecoveryQuestionController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  passwordReset: function () {\n    this.render(PasswordResetController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  recoveryLoading: function (token) {\n    this.render(RecoveryLoadingController, {\n      token: token,\n      Beacon: SecurityBeacon\n    });\n  },\n  unlockAccount: function () {\n    this.render(UnlockAccountController);\n  },\n  accountUnlocked: function () {\n    this.render(AccountUnlockedController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  refreshAuthState: function (token) {\n    this.render(RefreshAuthStateController, {\n      token: token,\n      Beacon: SecurityBeacon\n    });\n  },\n  register: function () {\n    this.render(RegistrationController);\n  },\n  registerComplete: function () {\n    this.render(RegistrationCompleteController);\n  },\n  errorState: function () {\n    this.render(ErrorStateController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  consentRequired: function () {\n    this.render(ConsentRequiredController);\n  },\n  adminConsentRequired: function () {\n    this.render(AdminConsentRequiredController);\n  },\n  enrollUser: function () {\n    this.render(EnrollUserController);\n  },\n  deviceActivate: function () {\n    this.render(DeviceActivateController);\n  },\n  deviceActivateComplete: function () {\n    this.render(DeviceActivateTerminalController);\n  }\n});\nexport { V1Router as default };","map":{"version":3,"names":["AccountUnlockedController","ActivateTotpController","AdminConsentRequiredController","BarcodePushController","BarcodeTotpController","ConsentRequiredController","CustomPasswordExpiredController","DeviceActivateController","DeviceActivateTerminalController","EnrollActivateCustomFactorController","EnrollActivateEmailController","EnrollCallAndSmsController","EnrollChoicesController","EnrollCustomFactorController","EnrollDuoController","EnrollEmailController","EnrollHotpController","EnrollOnPremController","EnrollPasswordController","EnrollQuestionController","EnrollSymantecVipController","EnrollTotpControllerEnrollTotpController","EnrollU2FController","EnrollUserController","EnrollWebauthnController","EnrollWindowsHelloController","EnrollYubikeyController","EnrollmentLinkSentController","EnterPasscodePushFlowController","ForgotPasswordController","IDPDiscoveryController","ForceIDPDiscoveryController","ManualSetupPushController","ManualSetupTotpController","MfaVerifyController","PasswordExpiredController","PasswordResetController","PollController","PrimaryAuthController","PwdResetEmailSentController","RecoveryChallengeController","RecoveryLoadingController","RecoveryQuestionController","RefreshAuthStateController","RegistrationCompleteController","RegistrationController","UnlockAccountController","UnlockEmailSentController","VerifyCustomFactorController","VerifyDuoController","VerifyPIVController","VerifyU2FController","VerifyWebauthnController","VerifyWindowsHelloController","ErrorStateController","BaseLoginRouter","FactorBeacon","PIVBeacon","SecurityBeacon","Enums","V1Router","extend","routes","signin","stateLessRouteHandlers","defaultAuth","window","location","hash","WIDGET_CONTAINER_ID","document","getElementById","focus","settings","get","idpDiscovery","primaryAuth","idpDiscoveryCheck","render","Beacon","username","verifyDuo","provider","factorType","verifyPIV","poll","verifyWebauthn","verifyU2F","verifySAMLFactor","verifyOIDCFactor","verifyClaimsFactor","verify","factorIndex","toUpperCase","verifyNoProvider","enrollChoices","enrollDuo","enrollQuestion","enrollPassword","enrollSms","enrollCall","enrollEmail","enrollActivateEmail","enrollRsa","enrollOnPrem","enrollSymantecVip","enrollYubikey","enrollSAMLFactor","enrollOIDCFactor","enrollClaimsFactor","enrollActivateClaimsFactor","enrollTotpFactor","enrollHotpFactor","enrollWebauthn","enrollU2F","scanBarcodeTotpFactor","scanBarcodePushFactor","activateTotpFactor","manualSetupTotpFactor","manualSetupPushFactor","activationLinkSent","enterPasscodeInPushEnrollmentFlow","passwordExpired","customPasswordExpired","forgotPassword","recoveryChallenge","recoveryEmailSent","unlockEmailSent","recoveryQuestion","passwordReset","recoveryLoading","token","unlockAccount","accountUnlocked","refreshAuthState","register","registerComplete","errorState","consentRequired","adminConsentRequired","enrollUser","deviceActivate","deviceActivateComplete","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/LoginRouter.js"],"sourcesContent":["import AccountUnlockedController from './controllers/AccountUnlockedController.js';\nimport ActivateTotpController from './controllers/ActivateTotpController.js';\nimport AdminConsentRequiredController from './controllers/AdminConsentRequiredController.js';\nimport BarcodePushController from './controllers/BarcodePushController.js';\nimport BarcodeTotpController from './controllers/BarcodeTotpController.js';\nimport ConsentRequiredController from './controllers/ConsentRequiredController.js';\nimport CustomPasswordExpiredController from './controllers/CustomPasswordExpiredController.js';\nimport DeviceActivateController from './controllers/DeviceActivateController.js';\nimport DeviceActivateTerminalController from './controllers/DeviceActivateTerminalController.js';\nimport EnrollActivateCustomFactorController from './controllers/EnrollActivateCustomFactorController.js';\nimport EnrollActivateEmailController from './controllers/EnrollActivateEmailController.js';\nimport EnrollCallAndSmsController from './controllers/EnrollCallAndSmsController.js';\nimport EnrollChoicesController from './controllers/EnrollChoicesController.js';\nimport EnrollCustomFactorController from './controllers/EnrollCustomFactorController.js';\nimport EnrollDuoController from './controllers/EnrollDuoController.js';\nimport EnrollEmailController from './controllers/EnrollEmailController.js';\nimport EnrollHotpController from './controllers/EnrollHotpController.js';\nimport EnrollOnPremController from './controllers/EnrollOnPremController.js';\nimport EnrollPasswordController from './controllers/EnrollPasswordController.js';\nimport EnrollQuestionController from './controllers/EnrollQuestionController.js';\nimport EnrollSymantecVipController from './controllers/EnrollSymantecVipController.js';\nimport EnrollTotpControllerEnrollTotpController from './controllers/EnrollTotpController.js';\nimport EnrollU2FController from './controllers/EnrollU2FController.js';\nimport EnrollUserController from './controllers/EnrollUserController.js';\nimport EnrollWebauthnController from './controllers/EnrollWebauthnController.js';\nimport EnrollWindowsHelloController from './controllers/EnrollWindowsHelloController.js';\nimport EnrollYubikeyController from './controllers/EnrollYubikeyController.js';\nimport EnrollmentLinkSentController from './controllers/EnrollmentLinkSentController.js';\nimport EnterPasscodePushFlowController from './controllers/EnterPasscodePushFlowController.js';\nimport ForgotPasswordController from './controllers/ForgotPasswordController.js';\nimport IDPDiscoveryController from './controllers/IDPDiscoveryController.js';\nimport ForceIDPDiscoveryController from './controllers/ForceIDPDiscoveryController.js';\nimport ManualSetupPushController from './controllers/ManualSetupPushController.js';\nimport ManualSetupTotpController from './controllers/ManualSetupTotpController.js';\nimport MfaVerifyController from './controllers/MfaVerifyController.js';\nimport PasswordExpiredController from './controllers/PasswordExpiredController.js';\nimport PasswordResetController from './controllers/PasswordResetController.js';\nimport PollController from './controllers/PollController.js';\nimport PrimaryAuthController from './controllers/PrimaryAuthController.js';\nimport PwdResetEmailSentController from './controllers/PwdResetEmailSentController.js';\nimport RecoveryChallengeController from './controllers/RecoveryChallengeController.js';\nimport RecoveryLoadingController from './controllers/RecoveryLoadingController.js';\nimport RecoveryQuestionController from './controllers/RecoveryQuestionController.js';\nimport RefreshAuthStateController from './controllers/RefreshAuthStateController.js';\nimport RegistrationCompleteController from './controllers/RegistrationCompleteController.js';\nimport RegistrationController from './controllers/RegistrationController.js';\nimport UnlockAccountController from './controllers/UnlockAccountController.js';\nimport UnlockEmailSentController from './controllers/UnlockEmailSentController.js';\nimport VerifyCustomFactorController from './controllers/VerifyCustomFactorController.js';\nimport VerifyDuoController from './controllers/VerifyDuoController.js';\nimport VerifyPIVController from './controllers/VerifyPIVController.js';\nimport VerifyU2FController from './controllers/VerifyU2FController.js';\nimport VerifyWebauthnController from './controllers/VerifyWebauthnController.js';\nimport VerifyWindowsHelloController from './controllers/VerifyWindowsHelloController.js';\nimport ErrorStateController from './controllers/ErrorStateController.js';\nimport BaseLoginRouter from './BaseLoginRouter.js';\nimport FactorBeacon from './views/shared/FactorBeacon.js';\nimport PIVBeacon from './views/shared/PIVBeacon.js';\nimport SecurityBeacon from './views/shared/SecurityBeacon.js';\nimport Enums from '../util/Enums.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar V1Router = BaseLoginRouter.extend({\n  routes: {\n    '': 'defaultAuth',\n    signin: 'primaryAuth',\n    'signin/okta/:username': 'primaryAuth',\n    'signin/verify/duo/web': 'verifyDuo',\n    'signin/verify/piv': 'verifyPIV',\n    'signin/poll': 'poll',\n    'signin/verify/fido/webauthn': 'verifyWebauthn',\n    'signin/verify/webauthn': 'verifyWebauthn',\n    'signin/verify/fido/u2f': 'verifyU2F',\n    'signin/verify/u2f': 'verifyU2F',\n    'signin/verify/generic_saml/assertion:saml2': 'verifySAMLFactor',\n    'signin/verify/generic_oidc/assertion:oidc': 'verifyOIDCFactor',\n    'signin/verify/custom/claims_provider': 'verifyClaimsFactor',\n    'signin/verify/:factorType': 'verifyNoProvider',\n    'signin/verify/:provider/:factorType(/:factorIndex)': 'verify',\n    'signin/enroll': 'enrollChoices',\n    'signin/enroll/duo/web': 'enrollDuo',\n    'signin/enroll/okta/question': 'enrollQuestion',\n    'signin/enroll/okta/password': 'enrollPassword',\n    'signin/enroll/okta/sms': 'enrollSms',\n    'signin/enroll/okta/call': 'enrollCall',\n    'signin/enroll/okta/email': 'enrollEmail',\n    'signin/enroll-activate/okta/sms': 'enrollSms',\n    'signin/enroll-activate/okta/call': 'enrollCall',\n    'signin/enroll/rsa/token': 'enrollRsa',\n    'signin/enroll/del_oath/token': 'enrollOnPrem',\n    'signin/enroll/symantec/token': 'enrollSymantecVip',\n    'signin/enroll/yubico/token:hardware': 'enrollYubikey',\n    'signin/enroll/fido/webauthn': 'enrollWebauthn',\n    'signin/enroll/fido/u2f': 'enrollU2F',\n    'signin/enroll/generic_saml/assertion:saml2': 'enrollSAMLFactor',\n    'signin/enroll/generic_oidc/assertion:oidc': 'enrollOIDCFactor',\n    'signin/enroll/custom/claims_provider': 'enrollClaimsFactor',\n    'signin/enroll/custom/token:hotp': 'enrollHotpFactor',\n    'signin/enroll/:provider/:factorType': 'enrollTotpFactor',\n    'signin/enroll-activate/okta/email': 'enrollActivateEmail',\n    'signin/enroll-activate/okta/push': 'scanBarcodePushFactor',\n    'signin/enroll-activate/okta/push/manual': 'manualSetupPushFactor',\n    'signin/enroll-activate/okta/push/sent': 'activationLinkSent',\n    'signin/enroll-activate/okta/token:software:totp/passcode': 'enterPasscodeInPushEnrollmentFlow',\n    'signin/enroll-activate/custom/claims_provider': 'enrollActivateClaimsFactor',\n    'signin/enroll-activate/:provider/:factorType': 'scanBarcodeTotpFactor',\n    'signin/enroll-activate/:provider/:factorType/activate': 'activateTotpFactor',\n    'signin/enroll-activate/:provider/:factorType/manual': 'manualSetupTotpFactor',\n    'signin/password-expired': 'passwordExpired',\n    'signin/custom-password-expired': 'customPasswordExpired',\n    'signin/forgot-password': 'forgotPassword',\n    'signin/recovery-challenge': 'recoveryChallenge',\n    'signin/recovery-emailed': 'recoveryEmailSent',\n    'signin/recovery-question': 'recoveryQuestion',\n    'signin/password-reset': 'passwordReset',\n    'signin/reset-password/:token': 'recoveryLoading',\n    'signin/user-unlock/:token': 'recoveryLoading',\n    'signin/recovery/:token': 'recoveryLoading',\n    'signin/unlock-emailed': 'unlockEmailSent',\n    'signin/unlock': 'unlockAccount',\n    'signin/account-unlocked': 'accountUnlocked',\n    'signin/refresh-auth-state(/:token)': 'refreshAuthState',\n    'signin/register': 'register',\n    'signin/register-complete': 'registerComplete',\n    'signin/error': 'errorState',\n    'signin/consent': 'consentRequired',\n    'signin/admin-consent': 'adminConsentRequired',\n    'signin/enroll-user': 'enrollUser',\n    'signin/device-activate-complete': 'deviceActivateComplete',\n    'signin/device-activate': 'deviceActivate',\n    'signin/idp-discovery-check': 'idpDiscoveryCheck',\n    '*wildcard': 'defaultAuth'\n  },\n  // Route handlers that do not require a stateToken. If the page is refreshed,\n  // these functions will not require a status call to refresh the stateToken.\n  stateLessRouteHandlers: ['defaultAuth', 'idpDiscovery', 'primaryAuth', 'forgotPassword', 'recoveryLoading', 'unlockAccount', 'refreshAuthState', 'register', 'registerComplete', 'errorState', 'verifyPIV'],\n  defaultAuth: function () {\n    if (window.location.hash === `#${Enums.WIDGET_CONTAINER_ID}`) {\n      document.getElementById(Enums.WIDGET_CONTAINER_ID).focus();\n      return;\n    }\n    if (this.settings.get('features.idpDiscovery')) {\n      this.idpDiscovery();\n    } else {\n      this.primaryAuth();\n    }\n  },\n  idpDiscoveryCheck: function () {\n    this.render(ForceIDPDiscoveryController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  idpDiscovery: function () {\n    this.render(IDPDiscoveryController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  primaryAuth: function (username) {\n    this.render(PrimaryAuthController, {\n      Beacon: SecurityBeacon,\n      username: username\n    });\n  },\n  verifyDuo: function () {\n    this.render(VerifyDuoController, {\n      provider: 'DUO',\n      factorType: 'web',\n      Beacon: FactorBeacon\n    });\n  },\n  verifyPIV: function () {\n    this.render(VerifyPIVController, {\n      Beacon: PIVBeacon\n    });\n  },\n  poll: function () {\n    this.render(PollController);\n  },\n  verifyWebauthn: function () {\n    if (this.settings.get('features.webauthn')) {\n      this.render(VerifyWebauthnController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon\n      });\n    } else {\n      this.render(VerifyWindowsHelloController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon\n      });\n    }\n  },\n  verifyU2F: function () {\n    this.render(VerifyU2FController, {\n      provider: 'FIDO',\n      factorType: 'u2f',\n      Beacon: FactorBeacon\n    });\n  },\n  verifySAMLFactor: function () {\n    this.render(VerifyCustomFactorController, {\n      provider: 'GENERIC_SAML',\n      factorType: 'assertion:saml2',\n      Beacon: FactorBeacon\n    });\n  },\n  verifyOIDCFactor: function () {\n    this.render(VerifyCustomFactorController, {\n      provider: 'GENERIC_OIDC',\n      factorType: 'assertion:oidc',\n      Beacon: FactorBeacon\n    });\n  },\n  verifyClaimsFactor: function () {\n    this.render(VerifyCustomFactorController, {\n      provider: 'CUSTOM',\n      factorType: 'claims_provider',\n      Beacon: FactorBeacon\n    });\n  },\n  verify: function (provider, factorType, factorIndex) {\n    this.render(MfaVerifyController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      factorIndex: factorIndex,\n      Beacon: FactorBeacon\n    });\n  },\n  verifyNoProvider: function (factorType) {\n    this.render(MfaVerifyController, {\n      factorType: factorType,\n      Beacon: FactorBeacon\n    });\n  },\n  enrollChoices: function () {\n    this.render(EnrollChoicesController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  enrollDuo: function () {\n    this.render(EnrollDuoController, {\n      provider: 'DUO',\n      factorType: 'web',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollQuestion: function () {\n    this.render(EnrollQuestionController, {\n      provider: 'OKTA',\n      factorType: 'question',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollPassword: function () {\n    this.render(EnrollPasswordController, {\n      provider: 'OKTA',\n      factorType: 'password',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollSms: function () {\n    this.render(EnrollCallAndSmsController, {\n      provider: 'OKTA',\n      factorType: 'sms',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollCall: function () {\n    this.render(EnrollCallAndSmsController, {\n      provider: 'OKTA',\n      factorType: 'call',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollEmail: function () {\n    this.render(EnrollEmailController, {\n      provider: 'OKTA',\n      factorType: 'email',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollActivateEmail: function () {\n    this.render(EnrollActivateEmailController, {\n      provider: 'OKTA',\n      factorType: 'email',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollRsa: function () {\n    this.render(EnrollOnPremController, {\n      provider: 'RSA',\n      factorType: 'token',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollOnPrem: function () {\n    this.render(EnrollOnPremController, {\n      provider: 'DEL_OATH',\n      factorType: 'token',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollSymantecVip: function () {\n    this.render(EnrollSymantecVipController, {\n      provider: 'SYMANTEC',\n      factorType: 'token',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollYubikey: function () {\n    this.render(EnrollYubikeyController, {\n      provider: 'YUBICO',\n      factorType: 'token:hardware',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollSAMLFactor: function () {\n    this.render(EnrollCustomFactorController, {\n      provider: 'GENERIC_SAML',\n      factorType: 'assertion:saml2',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollOIDCFactor: function () {\n    this.render(EnrollCustomFactorController, {\n      provider: 'GENERIC_OIDC',\n      factorType: 'assertion:oidc',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollClaimsFactor: function () {\n    this.render(EnrollCustomFactorController, {\n      provider: 'CUSTOM',\n      factorType: 'claims_provider',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollActivateClaimsFactor: function () {\n    this.render(EnrollActivateCustomFactorController, {\n      provider: 'CUSTOM',\n      factorType: 'claims_provider',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollTotpFactor: function (provider, factorType) {\n    this.render(EnrollTotpControllerEnrollTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon\n    });\n  },\n  enrollHotpFactor: function () {\n    this.render(EnrollHotpController, {\n      provider: 'CUSTOM',\n      factorType: 'token:hotp',\n      Beacon: FactorBeacon\n    });\n  },\n  enrollWebauthn: function () {\n    if (this.settings.get('features.webauthn')) {\n      this.render(EnrollWebauthnController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon\n      });\n    } else {\n      this.render(EnrollWindowsHelloController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon\n      });\n    }\n  },\n  enrollU2F: function () {\n    this.render(EnrollU2FController, {\n      provider: 'FIDO',\n      factorType: 'u2f',\n      Beacon: FactorBeacon\n    });\n  },\n  scanBarcodeTotpFactor: function (provider, factorType) {\n    this.render(BarcodeTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon\n    });\n  },\n  scanBarcodePushFactor: function () {\n    this.render(BarcodePushController, {\n      provider: 'OKTA',\n      factorType: 'push',\n      Beacon: FactorBeacon\n    });\n  },\n  activateTotpFactor: function (provider, factorType) {\n    this.render(ActivateTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon\n    });\n  },\n  manualSetupTotpFactor: function (provider, factorType) {\n    this.render(ManualSetupTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon\n    });\n  },\n  manualSetupPushFactor: function () {\n    this.render(ManualSetupPushController, {\n      provider: 'OKTA',\n      factorType: 'push',\n      Beacon: FactorBeacon\n    });\n  },\n  activationLinkSent: function () {\n    this.render(EnrollmentLinkSentController, {\n      provider: 'OKTA',\n      factorType: 'push',\n      Beacon: FactorBeacon\n    });\n  },\n  enterPasscodeInPushEnrollmentFlow: function () {\n    this.render(EnterPasscodePushFlowController, {\n      provider: 'OKTA',\n      factorType: 'token:software:totp',\n      Beacon: FactorBeacon\n    });\n  },\n  passwordExpired: function () {\n    this.render(PasswordExpiredController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  customPasswordExpired: function () {\n    this.render(CustomPasswordExpiredController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  forgotPassword: function () {\n    this.render(ForgotPasswordController);\n  },\n  recoveryChallenge: function () {\n    this.render(RecoveryChallengeController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  recoveryEmailSent: function () {\n    this.render(PwdResetEmailSentController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  unlockEmailSent: function () {\n    this.render(UnlockEmailSentController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  recoveryQuestion: function () {\n    this.render(RecoveryQuestionController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  passwordReset: function () {\n    this.render(PasswordResetController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  recoveryLoading: function (token) {\n    this.render(RecoveryLoadingController, {\n      token: token,\n      Beacon: SecurityBeacon\n    });\n  },\n  unlockAccount: function () {\n    this.render(UnlockAccountController);\n  },\n  accountUnlocked: function () {\n    this.render(AccountUnlockedController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  refreshAuthState: function (token) {\n    this.render(RefreshAuthStateController, {\n      token: token,\n      Beacon: SecurityBeacon\n    });\n  },\n  register: function () {\n    this.render(RegistrationController);\n  },\n  registerComplete: function () {\n    this.render(RegistrationCompleteController);\n  },\n  errorState: function () {\n    this.render(ErrorStateController, {\n      Beacon: SecurityBeacon\n    });\n  },\n  consentRequired: function () {\n    this.render(ConsentRequiredController);\n  },\n  adminConsentRequired: function () {\n    this.render(AdminConsentRequiredController);\n  },\n  enrollUser: function () {\n    this.render(EnrollUserController);\n  },\n  deviceActivate: function () {\n    this.render(DeviceActivateController);\n  },\n  deviceActivateComplete: function () {\n    this.render(DeviceActivateTerminalController);\n  }\n});\n\nexport { V1Router as default };\n"],"mappings":"AAAA,OAAOA,yBAAyB,MAAM,4CAA4C;AAClF,OAAOC,sBAAsB,MAAM,yCAAyC;AAC5E,OAAOC,8BAA8B,MAAM,iDAAiD;AAC5F,OAAOC,qBAAqB,MAAM,wCAAwC;AAC1E,OAAOC,qBAAqB,MAAM,wCAAwC;AAC1E,OAAOC,yBAAyB,MAAM,4CAA4C;AAClF,OAAOC,+BAA+B,MAAM,kDAAkD;AAC9F,OAAOC,wBAAwB,MAAM,2CAA2C;AAChF,OAAOC,gCAAgC,MAAM,mDAAmD;AAChG,OAAOC,oCAAoC,MAAM,uDAAuD;AACxG,OAAOC,6BAA6B,MAAM,gDAAgD;AAC1F,OAAOC,0BAA0B,MAAM,6CAA6C;AACpF,OAAOC,uBAAuB,MAAM,0CAA0C;AAC9E,OAAOC,4BAA4B,MAAM,+CAA+C;AACxF,OAAOC,mBAAmB,MAAM,sCAAsC;AACtE,OAAOC,qBAAqB,MAAM,wCAAwC;AAC1E,OAAOC,oBAAoB,MAAM,uCAAuC;AACxE,OAAOC,sBAAsB,MAAM,yCAAyC;AAC5E,OAAOC,wBAAwB,MAAM,2CAA2C;AAChF,OAAOC,wBAAwB,MAAM,2CAA2C;AAChF,OAAOC,2BAA2B,MAAM,8CAA8C;AACtF,OAAOC,wCAAwC,MAAM,uCAAuC;AAC5F,OAAOC,mBAAmB,MAAM,sCAAsC;AACtE,OAAOC,oBAAoB,MAAM,uCAAuC;AACxE,OAAOC,wBAAwB,MAAM,2CAA2C;AAChF,OAAOC,4BAA4B,MAAM,+CAA+C;AACxF,OAAOC,uBAAuB,MAAM,0CAA0C;AAC9E,OAAOC,4BAA4B,MAAM,+CAA+C;AACxF,OAAOC,+BAA+B,MAAM,kDAAkD;AAC9F,OAAOC,wBAAwB,MAAM,2CAA2C;AAChF,OAAOC,sBAAsB,MAAM,yCAAyC;AAC5E,OAAOC,2BAA2B,MAAM,8CAA8C;AACtF,OAAOC,yBAAyB,MAAM,4CAA4C;AAClF,OAAOC,yBAAyB,MAAM,4CAA4C;AAClF,OAAOC,mBAAmB,MAAM,sCAAsC;AACtE,OAAOC,yBAAyB,MAAM,4CAA4C;AAClF,OAAOC,uBAAuB,MAAM,0CAA0C;AAC9E,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,qBAAqB,MAAM,wCAAwC;AAC1E,OAAOC,2BAA2B,MAAM,8CAA8C;AACtF,OAAOC,2BAA2B,MAAM,8CAA8C;AACtF,OAAOC,yBAAyB,MAAM,4CAA4C;AAClF,OAAOC,0BAA0B,MAAM,6CAA6C;AACpF,OAAOC,0BAA0B,MAAM,6CAA6C;AACpF,OAAOC,8BAA8B,MAAM,iDAAiD;AAC5F,OAAOC,sBAAsB,MAAM,yCAAyC;AAC5E,OAAOC,uBAAuB,MAAM,0CAA0C;AAC9E,OAAOC,yBAAyB,MAAM,4CAA4C;AAClF,OAAOC,4BAA4B,MAAM,+CAA+C;AACxF,OAAOC,mBAAmB,MAAM,sCAAsC;AACtE,OAAOC,mBAAmB,MAAM,sCAAsC;AACtE,OAAOC,mBAAmB,MAAM,sCAAsC;AACtE,OAAOC,wBAAwB,MAAM,2CAA2C;AAChF,OAAOC,4BAA4B,MAAM,+CAA+C;AACxF,OAAOC,oBAAoB,MAAM,uCAAuC;AACxE,OAAOC,eAAe,MAAM,sBAAsB;AAClD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,KAAK,MAAM,kBAAkB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAGL,eAAe,CAACM,MAAM,CAAC;EACpCC,MAAM,EAAE;IACN,EAAE,EAAE,aAAa;IACjBC,MAAM,EAAE,aAAa;IACrB,uBAAuB,EAAE,aAAa;IACtC,uBAAuB,EAAE,WAAW;IACpC,mBAAmB,EAAE,WAAW;IAChC,aAAa,EAAE,MAAM;IACrB,6BAA6B,EAAE,gBAAgB;IAC/C,wBAAwB,EAAE,gBAAgB;IAC1C,wBAAwB,EAAE,WAAW;IACrC,mBAAmB,EAAE,WAAW;IAChC,4CAA4C,EAAE,kBAAkB;IAChE,2CAA2C,EAAE,kBAAkB;IAC/D,sCAAsC,EAAE,oBAAoB;IAC5D,2BAA2B,EAAE,kBAAkB;IAC/C,oDAAoD,EAAE,QAAQ;IAC9D,eAAe,EAAE,eAAe;IAChC,uBAAuB,EAAE,WAAW;IACpC,6BAA6B,EAAE,gBAAgB;IAC/C,6BAA6B,EAAE,gBAAgB;IAC/C,wBAAwB,EAAE,WAAW;IACrC,yBAAyB,EAAE,YAAY;IACvC,0BAA0B,EAAE,aAAa;IACzC,iCAAiC,EAAE,WAAW;IAC9C,kCAAkC,EAAE,YAAY;IAChD,yBAAyB,EAAE,WAAW;IACtC,8BAA8B,EAAE,cAAc;IAC9C,8BAA8B,EAAE,mBAAmB;IACnD,qCAAqC,EAAE,eAAe;IACtD,6BAA6B,EAAE,gBAAgB;IAC/C,wBAAwB,EAAE,WAAW;IACrC,4CAA4C,EAAE,kBAAkB;IAChE,2CAA2C,EAAE,kBAAkB;IAC/D,sCAAsC,EAAE,oBAAoB;IAC5D,iCAAiC,EAAE,kBAAkB;IACrD,qCAAqC,EAAE,kBAAkB;IACzD,mCAAmC,EAAE,qBAAqB;IAC1D,kCAAkC,EAAE,uBAAuB;IAC3D,yCAAyC,EAAE,uBAAuB;IAClE,uCAAuC,EAAE,oBAAoB;IAC7D,0DAA0D,EAAE,mCAAmC;IAC/F,+CAA+C,EAAE,4BAA4B;IAC7E,8CAA8C,EAAE,uBAAuB;IACvE,uDAAuD,EAAE,oBAAoB;IAC7E,qDAAqD,EAAE,uBAAuB;IAC9E,yBAAyB,EAAE,iBAAiB;IAC5C,gCAAgC,EAAE,uBAAuB;IACzD,wBAAwB,EAAE,gBAAgB;IAC1C,2BAA2B,EAAE,mBAAmB;IAChD,yBAAyB,EAAE,mBAAmB;IAC9C,0BAA0B,EAAE,kBAAkB;IAC9C,uBAAuB,EAAE,eAAe;IACxC,8BAA8B,EAAE,iBAAiB;IACjD,2BAA2B,EAAE,iBAAiB;IAC9C,wBAAwB,EAAE,iBAAiB;IAC3C,uBAAuB,EAAE,iBAAiB;IAC1C,eAAe,EAAE,eAAe;IAChC,yBAAyB,EAAE,iBAAiB;IAC5C,oCAAoC,EAAE,kBAAkB;IACxD,iBAAiB,EAAE,UAAU;IAC7B,0BAA0B,EAAE,kBAAkB;IAC9C,cAAc,EAAE,YAAY;IAC5B,gBAAgB,EAAE,iBAAiB;IACnC,sBAAsB,EAAE,sBAAsB;IAC9C,oBAAoB,EAAE,YAAY;IAClC,iCAAiC,EAAE,wBAAwB;IAC3D,wBAAwB,EAAE,gBAAgB;IAC1C,4BAA4B,EAAE,mBAAmB;IACjD,WAAW,EAAE;EACf,CAAC;EACD;EACA;EACAC,sBAAsB,EAAE,CAAC,aAAa,EAAE,cAAc,EAAE,aAAa,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,eAAe,EAAE,kBAAkB,EAAE,UAAU,EAAE,kBAAkB,EAAE,YAAY,EAAE,WAAW,CAAC;EAC3MC,WAAW,EAAE,SAAAA,CAAA,EAAY;IACvB,IAAIC,MAAM,CAACC,QAAQ,CAACC,IAAI,KAAK,IAAIT,KAAK,CAACU,mBAAmB,EAAE,EAAE;MAC5DC,QAAQ,CAACC,cAAc,CAACZ,KAAK,CAACU,mBAAmB,CAAC,CAACG,KAAK,CAAC,CAAC;MAC1D;IACF;IACA,IAAI,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAC,uBAAuB,CAAC,EAAE;MAC9C,IAAI,CAACC,YAAY,CAAC,CAAC;IACrB,CAAC,MAAM;MACL,IAAI,CAACC,WAAW,CAAC,CAAC;IACpB;EACF,CAAC;EACDC,iBAAiB,EAAE,SAAAA,CAAA,EAAY;IAC7B,IAAI,CAACC,MAAM,CAAC/C,2BAA2B,EAAE;MACvCgD,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACDiB,YAAY,EAAE,SAAAA,CAAA,EAAY;IACxB,IAAI,CAACG,MAAM,CAAChD,sBAAsB,EAAE;MAClCiD,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACDkB,WAAW,EAAE,SAAAA,CAAUI,QAAQ,EAAE;IAC/B,IAAI,CAACF,MAAM,CAACxC,qBAAqB,EAAE;MACjCyC,MAAM,EAAErB,cAAc;MACtBsB,QAAQ,EAAEA;IACZ,CAAC,CAAC;EACJ,CAAC;EACDC,SAAS,EAAE,SAAAA,CAAA,EAAY;IACrB,IAAI,CAACH,MAAM,CAAC7B,mBAAmB,EAAE;MAC/BiC,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE,KAAK;MACjBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACD4B,SAAS,EAAE,SAAAA,CAAA,EAAY;IACrB,IAAI,CAACN,MAAM,CAAC5B,mBAAmB,EAAE;MAC/B6B,MAAM,EAAEtB;IACV,CAAC,CAAC;EACJ,CAAC;EACD4B,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,IAAI,CAACP,MAAM,CAACzC,cAAc,CAAC;EAC7B,CAAC;EACDiD,cAAc,EAAE,SAAAA,CAAA,EAAY;IAC1B,IAAI,IAAI,CAACb,QAAQ,CAACC,GAAG,CAAC,mBAAmB,CAAC,EAAE;MAC1C,IAAI,CAACI,MAAM,CAAC1B,wBAAwB,EAAE;QACpC8B,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,UAAU;QACtBJ,MAAM,EAAEvB;MACV,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAI,CAACsB,MAAM,CAACzB,4BAA4B,EAAE;QACxC6B,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,UAAU;QACtBJ,MAAM,EAAEvB;MACV,CAAC,CAAC;IACJ;EACF,CAAC;EACD+B,SAAS,EAAE,SAAAA,CAAA,EAAY;IACrB,IAAI,CAACT,MAAM,CAAC3B,mBAAmB,EAAE;MAC/B+B,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,KAAK;MACjBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDgC,gBAAgB,EAAE,SAAAA,CAAA,EAAY;IAC5B,IAAI,CAACV,MAAM,CAAC9B,4BAA4B,EAAE;MACxCkC,QAAQ,EAAE,cAAc;MACxBC,UAAU,EAAE,iBAAiB;MAC7BJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDiC,gBAAgB,EAAE,SAAAA,CAAA,EAAY;IAC5B,IAAI,CAACX,MAAM,CAAC9B,4BAA4B,EAAE;MACxCkC,QAAQ,EAAE,cAAc;MACxBC,UAAU,EAAE,gBAAgB;MAC5BJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDkC,kBAAkB,EAAE,SAAAA,CAAA,EAAY;IAC9B,IAAI,CAACZ,MAAM,CAAC9B,4BAA4B,EAAE;MACxCkC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,iBAAiB;MAC7BJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDmC,MAAM,EAAE,SAAAA,CAAUT,QAAQ,EAAEC,UAAU,EAAES,WAAW,EAAE;IACnD,IAAI,CAACd,MAAM,CAAC5C,mBAAmB,EAAE;MAC/BgD,QAAQ,EAAEA,QAAQ,CAACW,WAAW,CAAC,CAAC;MAChCV,UAAU,EAAEA,UAAU;MACtBS,WAAW,EAAEA,WAAW;MACxBb,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDsC,gBAAgB,EAAE,SAAAA,CAAUX,UAAU,EAAE;IACtC,IAAI,CAACL,MAAM,CAAC5C,mBAAmB,EAAE;MAC/BiD,UAAU,EAAEA,UAAU;MACtBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDuC,aAAa,EAAE,SAAAA,CAAA,EAAY;IACzB,IAAI,CAACjB,MAAM,CAAClE,uBAAuB,EAAE;MACnCmE,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACDsC,SAAS,EAAE,SAAAA,CAAA,EAAY;IACrB,IAAI,CAAClB,MAAM,CAAChE,mBAAmB,EAAE;MAC/BoE,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE,KAAK;MACjBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDyC,cAAc,EAAE,SAAAA,CAAA,EAAY;IAC1B,IAAI,CAACnB,MAAM,CAAC3D,wBAAwB,EAAE;MACpC+D,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,UAAU;MACtBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACD0C,cAAc,EAAE,SAAAA,CAAA,EAAY;IAC1B,IAAI,CAACpB,MAAM,CAAC5D,wBAAwB,EAAE;MACpCgE,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,UAAU;MACtBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACD2C,SAAS,EAAE,SAAAA,CAAA,EAAY;IACrB,IAAI,CAACrB,MAAM,CAACnE,0BAA0B,EAAE;MACtCuE,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,KAAK;MACjBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACD4C,UAAU,EAAE,SAAAA,CAAA,EAAY;IACtB,IAAI,CAACtB,MAAM,CAACnE,0BAA0B,EAAE;MACtCuE,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,MAAM;MAClBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACD6C,WAAW,EAAE,SAAAA,CAAA,EAAY;IACvB,IAAI,CAACvB,MAAM,CAAC/D,qBAAqB,EAAE;MACjCmE,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,OAAO;MACnBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACD8C,mBAAmB,EAAE,SAAAA,CAAA,EAAY;IAC/B,IAAI,CAACxB,MAAM,CAACpE,6BAA6B,EAAE;MACzCwE,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,OAAO;MACnBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACD+C,SAAS,EAAE,SAAAA,CAAA,EAAY;IACrB,IAAI,CAACzB,MAAM,CAAC7D,sBAAsB,EAAE;MAClCiE,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE,OAAO;MACnBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDgD,YAAY,EAAE,SAAAA,CAAA,EAAY;IACxB,IAAI,CAAC1B,MAAM,CAAC7D,sBAAsB,EAAE;MAClCiE,QAAQ,EAAE,UAAU;MACpBC,UAAU,EAAE,OAAO;MACnBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDiD,iBAAiB,EAAE,SAAAA,CAAA,EAAY;IAC7B,IAAI,CAAC3B,MAAM,CAAC1D,2BAA2B,EAAE;MACvC8D,QAAQ,EAAE,UAAU;MACpBC,UAAU,EAAE,OAAO;MACnBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDkD,aAAa,EAAE,SAAAA,CAAA,EAAY;IACzB,IAAI,CAAC5B,MAAM,CAACpD,uBAAuB,EAAE;MACnCwD,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,gBAAgB;MAC5BJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDmD,gBAAgB,EAAE,SAAAA,CAAA,EAAY;IAC5B,IAAI,CAAC7B,MAAM,CAACjE,4BAA4B,EAAE;MACxCqE,QAAQ,EAAE,cAAc;MACxBC,UAAU,EAAE,iBAAiB;MAC7BJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDoD,gBAAgB,EAAE,SAAAA,CAAA,EAAY;IAC5B,IAAI,CAAC9B,MAAM,CAACjE,4BAA4B,EAAE;MACxCqE,QAAQ,EAAE,cAAc;MACxBC,UAAU,EAAE,gBAAgB;MAC5BJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDqD,kBAAkB,EAAE,SAAAA,CAAA,EAAY;IAC9B,IAAI,CAAC/B,MAAM,CAACjE,4BAA4B,EAAE;MACxCqE,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,iBAAiB;MAC7BJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDsD,0BAA0B,EAAE,SAAAA,CAAA,EAAY;IACtC,IAAI,CAAChC,MAAM,CAACrE,oCAAoC,EAAE;MAChDyE,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,iBAAiB;MAC7BJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDuD,gBAAgB,EAAE,SAAAA,CAAU7B,QAAQ,EAAEC,UAAU,EAAE;IAChD,IAAI,CAACL,MAAM,CAACzD,wCAAwC,EAAE;MACpD6D,QAAQ,EAAEA,QAAQ,CAACW,WAAW,CAAC,CAAC;MAChCV,UAAU,EAAEA,UAAU;MACtBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDwD,gBAAgB,EAAE,SAAAA,CAAA,EAAY;IAC5B,IAAI,CAAClC,MAAM,CAAC9D,oBAAoB,EAAE;MAChCkE,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,YAAY;MACxBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDyD,cAAc,EAAE,SAAAA,CAAA,EAAY;IAC1B,IAAI,IAAI,CAACxC,QAAQ,CAACC,GAAG,CAAC,mBAAmB,CAAC,EAAE;MAC1C,IAAI,CAACI,MAAM,CAACtD,wBAAwB,EAAE;QACpC0D,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,UAAU;QACtBJ,MAAM,EAAEvB;MACV,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAI,CAACsB,MAAM,CAACrD,4BAA4B,EAAE;QACxCyD,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,UAAU;QACtBJ,MAAM,EAAEvB;MACV,CAAC,CAAC;IACJ;EACF,CAAC;EACD0D,SAAS,EAAE,SAAAA,CAAA,EAAY;IACrB,IAAI,CAACpC,MAAM,CAACxD,mBAAmB,EAAE;MAC/B4D,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,KAAK;MACjBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACD2D,qBAAqB,EAAE,SAAAA,CAAUjC,QAAQ,EAAEC,UAAU,EAAE;IACrD,IAAI,CAACL,MAAM,CAAC1E,qBAAqB,EAAE;MACjC8E,QAAQ,EAAEA,QAAQ,CAACW,WAAW,CAAC,CAAC;MAChCV,UAAU,EAAEA,UAAU;MACtBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACD4D,qBAAqB,EAAE,SAAAA,CAAA,EAAY;IACjC,IAAI,CAACtC,MAAM,CAAC3E,qBAAqB,EAAE;MACjC+E,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,MAAM;MAClBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACD6D,kBAAkB,EAAE,SAAAA,CAAUnC,QAAQ,EAAEC,UAAU,EAAE;IAClD,IAAI,CAACL,MAAM,CAAC7E,sBAAsB,EAAE;MAClCiF,QAAQ,EAAEA,QAAQ,CAACW,WAAW,CAAC,CAAC;MAChCV,UAAU,EAAEA,UAAU;MACtBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACD8D,qBAAqB,EAAE,SAAAA,CAAUpC,QAAQ,EAAEC,UAAU,EAAE;IACrD,IAAI,CAACL,MAAM,CAAC7C,yBAAyB,EAAE;MACrCiD,QAAQ,EAAEA,QAAQ,CAACW,WAAW,CAAC,CAAC;MAChCV,UAAU,EAAEA,UAAU;MACtBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACD+D,qBAAqB,EAAE,SAAAA,CAAA,EAAY;IACjC,IAAI,CAACzC,MAAM,CAAC9C,yBAAyB,EAAE;MACrCkD,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,MAAM;MAClBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDgE,kBAAkB,EAAE,SAAAA,CAAA,EAAY;IAC9B,IAAI,CAAC1C,MAAM,CAACnD,4BAA4B,EAAE;MACxCuD,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,MAAM;MAClBJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDiE,iCAAiC,EAAE,SAAAA,CAAA,EAAY;IAC7C,IAAI,CAAC3C,MAAM,CAAClD,+BAA+B,EAAE;MAC3CsD,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,qBAAqB;MACjCJ,MAAM,EAAEvB;IACV,CAAC,CAAC;EACJ,CAAC;EACDkE,eAAe,EAAE,SAAAA,CAAA,EAAY;IAC3B,IAAI,CAAC5C,MAAM,CAAC3C,yBAAyB,EAAE;MACrC4C,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACDiE,qBAAqB,EAAE,SAAAA,CAAA,EAAY;IACjC,IAAI,CAAC7C,MAAM,CAACxE,+BAA+B,EAAE;MAC3CyE,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACDkE,cAAc,EAAE,SAAAA,CAAA,EAAY;IAC1B,IAAI,CAAC9C,MAAM,CAACjD,wBAAwB,CAAC;EACvC,CAAC;EACDgG,iBAAiB,EAAE,SAAAA,CAAA,EAAY;IAC7B,IAAI,CAAC/C,MAAM,CAACtC,2BAA2B,EAAE;MACvCuC,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACDoE,iBAAiB,EAAE,SAAAA,CAAA,EAAY;IAC7B,IAAI,CAAChD,MAAM,CAACvC,2BAA2B,EAAE;MACvCwC,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACDqE,eAAe,EAAE,SAAAA,CAAA,EAAY;IAC3B,IAAI,CAACjD,MAAM,CAAC/B,yBAAyB,EAAE;MACrCgC,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACDsE,gBAAgB,EAAE,SAAAA,CAAA,EAAY;IAC5B,IAAI,CAAClD,MAAM,CAACpC,0BAA0B,EAAE;MACtCqC,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACDuE,aAAa,EAAE,SAAAA,CAAA,EAAY;IACzB,IAAI,CAACnD,MAAM,CAAC1C,uBAAuB,EAAE;MACnC2C,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACDwE,eAAe,EAAE,SAAAA,CAAUC,KAAK,EAAE;IAChC,IAAI,CAACrD,MAAM,CAACrC,yBAAyB,EAAE;MACrC0F,KAAK,EAAEA,KAAK;MACZpD,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACD0E,aAAa,EAAE,SAAAA,CAAA,EAAY;IACzB,IAAI,CAACtD,MAAM,CAAChC,uBAAuB,CAAC;EACtC,CAAC;EACDuF,eAAe,EAAE,SAAAA,CAAA,EAAY;IAC3B,IAAI,CAACvD,MAAM,CAAC9E,yBAAyB,EAAE;MACrC+E,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACD4E,gBAAgB,EAAE,SAAAA,CAAUH,KAAK,EAAE;IACjC,IAAI,CAACrD,MAAM,CAACnC,0BAA0B,EAAE;MACtCwF,KAAK,EAAEA,KAAK;MACZpD,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACD6E,QAAQ,EAAE,SAAAA,CAAA,EAAY;IACpB,IAAI,CAACzD,MAAM,CAACjC,sBAAsB,CAAC;EACrC,CAAC;EACD2F,gBAAgB,EAAE,SAAAA,CAAA,EAAY;IAC5B,IAAI,CAAC1D,MAAM,CAAClC,8BAA8B,CAAC;EAC7C,CAAC;EACD6F,UAAU,EAAE,SAAAA,CAAA,EAAY;IACtB,IAAI,CAAC3D,MAAM,CAACxB,oBAAoB,EAAE;MAChCyB,MAAM,EAAErB;IACV,CAAC,CAAC;EACJ,CAAC;EACDgF,eAAe,EAAE,SAAAA,CAAA,EAAY;IAC3B,IAAI,CAAC5D,MAAM,CAACzE,yBAAyB,CAAC;EACxC,CAAC;EACDsI,oBAAoB,EAAE,SAAAA,CAAA,EAAY;IAChC,IAAI,CAAC7D,MAAM,CAAC5E,8BAA8B,CAAC;EAC7C,CAAC;EACD0I,UAAU,EAAE,SAAAA,CAAA,EAAY;IACtB,IAAI,CAAC9D,MAAM,CAACvD,oBAAoB,CAAC;EACnC,CAAC;EACDsH,cAAc,EAAE,SAAAA,CAAA,EAAY;IAC1B,IAAI,CAAC/D,MAAM,CAACvE,wBAAwB,CAAC;EACvC,CAAC;EACDuI,sBAAsB,EAAE,SAAAA,CAAA,EAAY;IAClC,IAAI,CAAChE,MAAM,CAACtE,gCAAgC,CAAC;EAC/C;AACF,CAAC,CAAC;AAEF,SAASoD,QAAQ,IAAImF,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}