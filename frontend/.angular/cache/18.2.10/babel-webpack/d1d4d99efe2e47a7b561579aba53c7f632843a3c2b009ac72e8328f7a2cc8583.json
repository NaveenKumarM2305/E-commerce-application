{"ast":null,"code":"import _asyncToGenerator from \"C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport BaseTransaction from './transactions/Base.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport '../errors/WWWAuthError.js';\nimport { httpRequest } from '../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nfunction sendRequest(_x, _x2) {\n  return _sendRequest.apply(this, arguments);\n}\nfunction _sendRequest() {\n  _sendRequest = _asyncToGenerator(function* (oktaAuth, options, TransactionClass = BaseTransaction) {\n    const {\n      accessToken: accessTokenObj\n    } = oktaAuth.tokenManager.getTokensSync();\n    const accessToken = options.accessToken || (accessTokenObj === null || accessTokenObj === void 0 ? void 0 : accessTokenObj.accessToken);\n    const issuer = oktaAuth.getIssuerOrigin();\n    const {\n      url,\n      method,\n      payload\n    } = options;\n    const requestUrl = url.startsWith(issuer) ? url : `${issuer}${url}`;\n    if (!accessToken) {\n      throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n    }\n    const res = yield httpRequest(oktaAuth, Object.assign({\n      headers: {\n        'Accept': '*/*;okta-version=1.0.0'\n      },\n      accessToken,\n      url: requestUrl,\n      method\n    }, payload && {\n      args: payload\n    }));\n    let ret;\n    if (Array.isArray(res)) {\n      ret = res.map(item => new TransactionClass(oktaAuth, {\n        res: item,\n        accessToken\n      }));\n    } else {\n      ret = new TransactionClass(oktaAuth, {\n        res,\n        accessToken\n      });\n    }\n    return ret;\n  });\n  return _sendRequest.apply(this, arguments);\n}\nfunction generateRequestFnFromLinks({\n  oktaAuth,\n  accessToken,\n  methodName,\n  links\n}, TransactionClass = BaseTransaction) {\n  for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n    if (method.toLowerCase() === methodName) {\n      const link = links.self;\n      return /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (payload) {\n          return sendRequest(oktaAuth, {\n            accessToken,\n            url: link.href,\n            method,\n            payload\n          }, TransactionClass);\n        });\n        return function (_x3) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n  }\n  const link = links[methodName];\n  if (!link) {\n    throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n  }\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (payload) {\n      return sendRequest(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method: link.hints.allow[0],\n        payload\n      }, TransactionClass);\n    });\n    return function (_x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\nexport { generateRequestFnFromLinks, sendRequest };","map":{"version":3,"names":["BaseTransaction","AuthSdkError","httpRequest","sendRequest","_x","_x2","_sendRequest","apply","arguments","_asyncToGenerator","oktaAuth","options","TransactionClass","accessToken","accessTokenObj","tokenManager","getTokensSync","issuer","getIssuerOrigin","url","method","payload","requestUrl","startsWith","res","Object","assign","headers","args","ret","Array","isArray","map","item","generateRequestFnFromLinks","methodName","links","toLowerCase","link","self","_ref","href","_x3","_ref2","hints","allow","_x4"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/myaccount/request.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport BaseTransaction from './transactions/Base.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport '../errors/WWWAuthError.js';\nimport { httpRequest } from '../http/request.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\n\nasync function sendRequest(oktaAuth, options, TransactionClass = BaseTransaction) {\n    const { accessToken: accessTokenObj } = oktaAuth.tokenManager.getTokensSync();\n    const accessToken = options.accessToken || (accessTokenObj === null || accessTokenObj === void 0 ? void 0 : accessTokenObj.accessToken);\n    const issuer = oktaAuth.getIssuerOrigin();\n    const { url, method, payload } = options;\n    const requestUrl = url.startsWith(issuer) ? url : `${issuer}${url}`;\n    if (!accessToken) {\n        throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n    }\n    const res = await httpRequest(oktaAuth, Object.assign({ headers: { 'Accept': '*/*;okta-version=1.0.0' }, accessToken, url: requestUrl, method }, (payload && { args: payload })));\n    let ret;\n    if (Array.isArray(res)) {\n        ret = res.map(item => new TransactionClass(oktaAuth, {\n            res: item,\n            accessToken\n        }));\n    }\n    else {\n        ret = new TransactionClass(oktaAuth, {\n            res,\n            accessToken\n        });\n    }\n    return ret;\n}\nfunction generateRequestFnFromLinks({ oktaAuth, accessToken, methodName, links, }, TransactionClass = BaseTransaction) {\n    for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n        if (method.toLowerCase() === methodName) {\n            const link = links.self;\n            return (async (payload) => sendRequest(oktaAuth, {\n                accessToken,\n                url: link.href,\n                method,\n                payload,\n            }, TransactionClass));\n        }\n    }\n    const link = links[methodName];\n    if (!link) {\n        throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n    }\n    return (async (payload) => sendRequest(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method: link.hints.allow[0],\n        payload,\n    }, TransactionClass));\n}\n\nexport { generateRequestFnFromLinks, sendRequest };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}