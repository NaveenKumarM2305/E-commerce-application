{"ast":null,"code":"import _asyncToGenerator from \"C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { PasswordStatus } from '../types.js';\nimport BaseTransaction from './Base.js';\nimport { generateRequestFnFromLinks } from '../request.js';\nclass PasswordTransaction extends BaseTransaction {\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n    const {\n      res,\n      accessToken\n    } = options;\n    const {\n      id,\n      status,\n      created,\n      lastUpdated,\n      _links\n    } = res;\n    this.id = id;\n    this.status = status;\n    this.created = created;\n    this.lastUpdated = lastUpdated;\n    if (this.status == PasswordStatus.NOT_ENROLLED) {\n      this.enroll = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (payload) {\n          const fn = generateRequestFnFromLinks({\n            oktaAuth,\n            accessToken,\n            methodName: 'enroll',\n            links: _links\n          }, PasswordTransaction);\n          return yield fn(payload);\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    } else {\n      this.get = /*#__PURE__*/_asyncToGenerator(function* () {\n        const fn = generateRequestFnFromLinks({\n          oktaAuth,\n          accessToken,\n          methodName: 'get',\n          links: _links\n        }, PasswordTransaction);\n        return yield fn();\n      });\n      this.update = /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* (payload) {\n          const fn = generateRequestFnFromLinks({\n            oktaAuth,\n            accessToken,\n            methodName: 'put',\n            links: _links\n          }, PasswordTransaction);\n          return yield fn(payload);\n        });\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n      this.delete = /*#__PURE__*/_asyncToGenerator(function* () {\n        const fn = generateRequestFnFromLinks({\n          oktaAuth,\n          accessToken,\n          methodName: 'delete',\n          links: _links\n        });\n        return yield fn();\n      });\n    }\n  }\n}\nexport { PasswordTransaction as default };","map":{"version":3,"names":["PasswordStatus","BaseTransaction","generateRequestFnFromLinks","PasswordTransaction","constructor","oktaAuth","options","res","accessToken","id","status","created","lastUpdated","_links","NOT_ENROLLED","enroll","_ref","_asyncToGenerator","payload","fn","methodName","links","_x","apply","arguments","get","update","_ref3","_x2","delete","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/myaccount/transactions/PasswordTransaction.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { PasswordStatus } from '../types.js';\nimport BaseTransaction from './Base.js';\nimport { generateRequestFnFromLinks } from '../request.js';\n\nclass PasswordTransaction extends BaseTransaction {\n    constructor(oktaAuth, options) {\n        super(oktaAuth, options);\n        const { res, accessToken } = options;\n        const { id, status, created, lastUpdated, _links } = res;\n        this.id = id;\n        this.status = status;\n        this.created = created;\n        this.lastUpdated = lastUpdated;\n        if (this.status == PasswordStatus.NOT_ENROLLED) {\n            this.enroll = async (payload) => {\n                const fn = generateRequestFnFromLinks({\n                    oktaAuth,\n                    accessToken,\n                    methodName: 'enroll',\n                    links: _links,\n                }, PasswordTransaction);\n                return await fn(payload);\n            };\n        }\n        else {\n            this.get = async () => {\n                const fn = generateRequestFnFromLinks({\n                    oktaAuth,\n                    accessToken,\n                    methodName: 'get',\n                    links: _links,\n                }, PasswordTransaction);\n                return await fn();\n            };\n            this.update = async (payload) => {\n                const fn = generateRequestFnFromLinks({\n                    oktaAuth,\n                    accessToken,\n                    methodName: 'put',\n                    links: _links,\n                }, PasswordTransaction);\n                return await fn(payload);\n            };\n            this.delete = async () => {\n                const fn = generateRequestFnFromLinks({\n                    oktaAuth,\n                    accessToken,\n                    methodName: 'delete',\n                    links: _links\n                });\n                return await fn();\n            };\n        }\n    }\n}\n\nexport { PasswordTransaction as default };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,QAAQ,aAAa;AAC5C,OAAOC,eAAe,MAAM,WAAW;AACvC,SAASC,0BAA0B,QAAQ,eAAe;AAE1D,MAAMC,mBAAmB,SAASF,eAAe,CAAC;EAC9CG,WAAWA,CAACC,QAAQ,EAAEC,OAAO,EAAE;IAC3B,KAAK,CAACD,QAAQ,EAAEC,OAAO,CAAC;IACxB,MAAM;MAAEC,GAAG;MAAEC;IAAY,CAAC,GAAGF,OAAO;IACpC,MAAM;MAAEG,EAAE;MAAEC,MAAM;MAAEC,OAAO;MAAEC,WAAW;MAAEC;IAAO,CAAC,GAAGN,GAAG;IACxD,IAAI,CAACE,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,IAAI,CAACF,MAAM,IAAIV,cAAc,CAACc,YAAY,EAAE;MAC5C,IAAI,CAACC,MAAM;QAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,OAAO,EAAK;UAC7B,MAAMC,EAAE,GAAGjB,0BAA0B,CAAC;YAClCG,QAAQ;YACRG,WAAW;YACXY,UAAU,EAAE,QAAQ;YACpBC,KAAK,EAAER;UACX,CAAC,EAAEV,mBAAmB,CAAC;UACvB,aAAagB,EAAE,CAACD,OAAO,CAAC;QAC5B,CAAC;QAAA,iBAAAI,EAAA;UAAA,OAAAN,IAAA,CAAAO,KAAA,OAAAC,SAAA;QAAA;MAAA;IACL,CAAC,MACI;MACD,IAAI,CAACC,GAAG,gBAAAR,iBAAA,CAAG,aAAY;QACnB,MAAME,EAAE,GAAGjB,0BAA0B,CAAC;UAClCG,QAAQ;UACRG,WAAW;UACXY,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAER;QACX,CAAC,EAAEV,mBAAmB,CAAC;QACvB,aAAagB,EAAE,CAAC,CAAC;MACrB,CAAC;MACD,IAAI,CAACO,MAAM;QAAA,IAAAC,KAAA,GAAAV,iBAAA,CAAG,WAAOC,OAAO,EAAK;UAC7B,MAAMC,EAAE,GAAGjB,0BAA0B,CAAC;YAClCG,QAAQ;YACRG,WAAW;YACXY,UAAU,EAAE,KAAK;YACjBC,KAAK,EAAER;UACX,CAAC,EAAEV,mBAAmB,CAAC;UACvB,aAAagB,EAAE,CAACD,OAAO,CAAC;QAC5B,CAAC;QAAA,iBAAAU,GAAA;UAAA,OAAAD,KAAA,CAAAJ,KAAA,OAAAC,SAAA;QAAA;MAAA;MACD,IAAI,CAACK,MAAM,gBAAAZ,iBAAA,CAAG,aAAY;QACtB,MAAME,EAAE,GAAGjB,0BAA0B,CAAC;UAClCG,QAAQ;UACRG,WAAW;UACXY,UAAU,EAAE,QAAQ;UACpBC,KAAK,EAAER;QACX,CAAC,CAAC;QACF,aAAaM,EAAE,CAAC,CAAC;MACrB,CAAC;IACL;EACJ;AACJ;AAEA,SAAShB,mBAAmB,IAAI2B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}