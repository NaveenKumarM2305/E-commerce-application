{"ast":null,"code":"import _ from '../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';\nimport { loc } from './loc.js';\nimport TimeUtil from './TimeUtil.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst fn = {};\nconst factorData = {\n  OKTA_VERIFY: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpSoft.oktaVerify',\n    description: 'factor.totpSoft.description',\n    iconClassName: 'mfa-okta-verify',\n    sortOrder: 1\n  },\n  OKTA_VERIFY_PUSH: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.oktaVerifyPush',\n    description: 'factor.push.description',\n    iconClassName: 'mfa-okta-verify',\n    sortOrder: 1\n  },\n  U2F: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.u2f',\n    description: brandName => {\n      return brandName ? 'factor.u2f.description.specific' : 'factor.u2f.description.generic';\n    },\n    iconClassName: 'mfa-u2f',\n    sortOrder: 2\n  },\n  WEBAUTHN: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.webauthn.biometric',\n    description: 'factor.webauthn.biometric.description',\n    iconClassName: 'mfa-webauthn',\n    sortOrder: 2\n  },\n  WINDOWS_HELLO: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.windowsHello',\n    description: brandName => {\n      return brandName ? 'factor.windowsHello.signin.description.specific' : 'factor.windowsHello.signin.description.generic';\n    },\n    iconClassName: 'mfa-windows-hello',\n    sortOrder: 3\n  },\n  YUBIKEY: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpHard.yubikey',\n    description: 'factor.totpHard.yubikey.description',\n    iconClassName: 'mfa-yubikey',\n    sortOrder: 4\n  },\n  GOOGLE_AUTH: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpSoft.googleAuthenticator',\n    description: 'factor.totpSoft.description',\n    iconClassName: 'mfa-google-auth',\n    sortOrder: 5\n  },\n  CUSTOM_HOTP: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: 'factor.hotp.description',\n    iconClassName: 'mfa-hotp',\n    sortOrder: 6\n  },\n  SMS: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.sms',\n    description: 'factor.sms.description',\n    iconClassName: 'mfa-okta-sms',\n    sortOrder: 7\n  },\n  CALL: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.call',\n    description: 'factor.call.description',\n    iconClassName: 'mfa-okta-call',\n    sortOrder: 8\n  },\n  EMAIL: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.email',\n    description: 'factor.email.description',\n    iconClassName: 'mfa-okta-email',\n    sortOrder: 9\n  },\n  QUESTION: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.securityQuestion',\n    description: 'factor.securityQuestion.description',\n    iconClassName: 'mfa-okta-security-question',\n    sortOrder: 10\n  },\n  DUO: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.duo',\n    description: 'factor.duo.description',\n    iconClassName: 'mfa-duo',\n    sortOrder: 11\n  },\n  SYMANTEC_VIP: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpHard.symantecVip',\n    description: 'factor.totpHard.description',\n    iconClassName: 'mfa-symantec',\n    sortOrder: 12\n  },\n  RSA_SECURID: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpHard.rsaSecurId',\n    description: 'factor.totpHard.description',\n    iconClassName: 'mfa-rsa',\n    sortOrder: 13\n  },\n  ON_PREM: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: 'factor.totpHard.description',\n    iconClassName: 'mfa-onprem',\n    sortOrder: 14\n  },\n  PASSWORD: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.password',\n    description: '',\n    iconClassName: 'mfa-okta-password',\n    sortOrder: 15\n  },\n  CUSTOM_CLAIMS: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: 'factor.customFactor.description',\n    iconClassName: 'mfa-custom-factor',\n    sortOrder: 16\n  },\n  GENERIC_SAML: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: brandName => {\n      return brandName ? 'factor.customFactor.description.specific' : 'factor.customFactor.description.generic';\n    },\n    iconClassName: 'mfa-custom-factor',\n    sortOrder: 17\n  },\n  GENERIC_OIDC: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: brandName => {\n      return brandName ? 'factor.customFactor.description.specific' : 'factor.customFactor.description.generic';\n    },\n    iconClassName: 'mfa-custom-factor',\n    sortOrder: 18\n  }\n};\nconst getPasswordComplexityRequirementsAsArray = function (policy, i18nKeys) {\n  const setExcludeAttributes = function (policyComplexity) {\n    const excludeAttributes = policyComplexity.excludeAttributes;\n    policyComplexity.excludeFirstName = _.contains(excludeAttributes, 'firstName');\n    policyComplexity.excludeLastName = _.contains(excludeAttributes, 'lastName');\n    return _.omit(policyComplexity, 'excludeAttributes');\n  };\n  if (policy.complexity) {\n    const complexityFields = i18nKeys.complexity;\n    const policyComplexity = setExcludeAttributes(policy.complexity);\n    let filteredPolicyComplexity = policyComplexity;\n\n    // If useADComplexityRequirements is true, ignore casing, number, and symbol rules since\n    // AD validator handles those requirements\n    if (policyComplexity.useADComplexityRequirements) {\n      const allowed = ['minLength', 'useADComplexityRequirements', 'excludeUsername', 'excludeFirstName', 'excludeLastName', 'excludeAttributes'];\n      filteredPolicyComplexity = _.pick(policyComplexity, allowed);\n    }\n    const requirements = _.map(filteredPolicyComplexity, function (complexityValue, complexityType) {\n      if (complexityValue <= 0) {\n        // to skip 0 and -1\n        return;\n      }\n      const params = complexityFields[complexityType];\n      return params.args ? loc(params.i18n, 'login', [complexityValue]) : loc(params.i18n, 'login');\n    });\n    return _.compact(requirements);\n  }\n  return [];\n};\nconst getPasswordHistoryRequirementDescription = function (policy, i18nKeys, isUpdatedPasswordRequirementsText) {\n  if (policy.age && policy.age.historyCount > 0) {\n    if (isUpdatedPasswordRequirementsText) {\n      return policy.age.historyCount === 1 ? loc(i18nKeys.history.one.i18n, 'login') : loc(i18nKeys.history.many.i18n, 'login', [policy.age.historyCount]);\n    } else {\n      return loc(i18nKeys.history.i18n, 'login', [policy.age.historyCount]);\n    }\n  }\n  return null;\n};\nconst getPasswordAgeRequirementDescription = function (policy, i18nKeys) {\n  const getPasswordAgeRequirement = function (displayableTime) {\n    let propertiesString;\n    switch (displayableTime.unit) {\n      case 'DAY':\n        propertiesString = i18nKeys.age.days.i18n;\n        break;\n      case 'HOUR':\n        propertiesString = i18nKeys.age.hours.i18n;\n        break;\n      case 'MINUTE':\n        propertiesString = i18nKeys.age.minutes.i18n;\n    }\n    return loc(propertiesString, 'login', [displayableTime.time]);\n  };\n  if (policy.age && policy.age.minAgeMinutes > 0) {\n    const displayableTime = TimeUtil.getTimeInHighestRelevantUnit(policy.age.minAgeMinutes, 'MINUTE');\n    return getPasswordAgeRequirement(displayableTime);\n  }\n  return null;\n};\nconst getPasswordRequirements = function (policy, i18nKeys, isUpdatedPasswordRequirementsText) {\n  const passwordRequirements = {\n    complexity: [],\n    history: [],\n    age: []\n  };\n  passwordRequirements.complexity = getPasswordComplexityRequirementsAsArray(policy, i18nKeys);\n  const historyRequirement = getPasswordHistoryRequirementDescription(policy, i18nKeys, isUpdatedPasswordRequirementsText);\n  if (historyRequirement) {\n    passwordRequirements.history.push(historyRequirement);\n  }\n  const ageRequirement = getPasswordAgeRequirementDescription(policy, i18nKeys);\n  if (ageRequirement) {\n    passwordRequirements.age.push(ageRequirement);\n  }\n  return passwordRequirements;\n};\nfn.getFactorName = function (provider, factorType) {\n  if (provider === 'OKTA' && factorType === 'token:software:totp') {\n    return 'OKTA_VERIFY';\n  }\n  if (provider === 'OKTA' && factorType === 'push') {\n    return 'OKTA_VERIFY_PUSH';\n  }\n  if (provider === 'GOOGLE') {\n    return 'GOOGLE_AUTH';\n  }\n  if (provider === 'SYMANTEC' && factorType === 'token') {\n    return 'SYMANTEC_VIP';\n  }\n  if (provider === 'RSA' && factorType === 'token') {\n    return 'RSA_SECURID';\n  }\n  if (provider === 'DEL_OATH' && factorType === 'token') {\n    return 'ON_PREM';\n  }\n  if (provider === 'DUO' && factorType === 'web') {\n    return 'DUO';\n  }\n  if (provider === 'YUBICO' && factorType === 'token:hardware') {\n    return 'YUBIKEY';\n  }\n  if (provider === 'OKTA' && factorType === 'sms') {\n    return 'SMS';\n  }\n  if (provider === 'OKTA' && factorType === 'call') {\n    return 'CALL';\n  }\n  if (provider === 'OKTA' && factorType === 'question') {\n    return 'QUESTION';\n  }\n  if (provider === 'OKTA' && factorType === 'email') {\n    return 'EMAIL';\n  }\n  if (provider === 'OKTA' && factorType === 'password') {\n    return 'PASSWORD';\n  }\n  if (provider === 'GENERIC_SAML' && factorType === 'assertion:saml2') {\n    return 'GENERIC_SAML';\n  }\n  if (provider === 'GENERIC_OIDC' && factorType === 'assertion:oidc') {\n    return 'GENERIC_OIDC';\n  }\n  return fn.getFactorNameForFactorType.call(this, factorType);\n};\nfn.getFactorNameForFactorType = function (factorType) {\n  if (factorType === 'u2f') {\n    return 'U2F';\n  }\n  if (factorType === 'token:software:totp') {\n    return 'OKTA_VERIFY';\n  }\n  if (factorType === 'webauthn') {\n    if (this.settings.get('features.webauthn')) {\n      return 'WEBAUTHN';\n    } else {\n      return 'WINDOWS_HELLO';\n    }\n  }\n  if (factorType === 'token:hotp') {\n    return 'CUSTOM_HOTP';\n  }\n  if (factorType === 'claims_provider') {\n    return 'CUSTOM_CLAIMS';\n  }\n};\nfn.isOktaVerify = function (provider, factorType) {\n  return provider === 'OKTA' && (factorType === 'token:software:totp' || factorType === 'push');\n};\nfn.getFactorLabel = function (provider, factorType) {\n  const key = factorData[fn.getFactorName.apply(this, [provider, factorType])].label;\n  return loc(key, 'login');\n};\nfn.getFactorDescription = function (provider, factorType) {\n  const descriptionKey = factorData[fn.getFactorName.apply(this, [provider, factorType])].description;\n  if (_.isFunction(descriptionKey)) {\n    const brandName = this.settings.get('brandName');\n    const key = descriptionKey(brandName);\n    return brandName ? loc(key, 'login', [brandName]) : loc(key, 'login');\n  } else {\n    return descriptionKey ? loc(descriptionKey, 'login') : '';\n  }\n};\nfn.getFactorIconClassName = function (provider, factorType) {\n  return factorData[fn.getFactorName.apply(this, [provider, factorType])].iconClassName;\n};\nfn.getFactorSortOrder = function (provider, factorType) {\n  return factorData[fn.getFactorName.apply(this, [provider, factorType])].sortOrder;\n};\nfn.getRememberDeviceValue = function (appState) {\n  return appState && appState.get('rememberDeviceByDefault');\n};\nfn.getSecurityQuestionLabel = function (questionObj) {\n  const localizedQuestion = loc('security.' + questionObj.question);\n  return localizedQuestion.indexOf('L10N_ERROR') < 0 ? localizedQuestion : questionObj.questionText;\n};\nfn.removeRequirementsFromError = function (responseJSON, policy) {\n  const passwordRequirementsAsString = this.getPasswordComplexityDescription(policy);\n  if (responseJSON.errorCauses && responseJSON.errorCauses.length > 0 && _.isString(responseJSON.errorCauses[0].errorSummary)) {\n    responseJSON.errorCauses[0].errorSummary = responseJSON.errorCauses[0].errorSummary.replace(passwordRequirementsAsString, '').trim();\n  }\n  return responseJSON;\n};\nfn.getPasswordComplexityDescriptionForHtmlList = function (policy) {\n  const passwordRequirementHtmlI18nKeys = {\n    complexity: {\n      minLength: {\n        i18n: 'password.complexity.length.description',\n        args: true\n      },\n      minLowerCase: {\n        i18n: 'password.complexity.lowercase.description'\n      },\n      minUpperCase: {\n        i18n: 'password.complexity.uppercase.description'\n      },\n      minNumber: {\n        i18n: 'password.complexity.number.description'\n      },\n      minSymbol: {\n        i18n: 'password.complexity.symbol.description'\n      },\n      excludeUsername: {\n        i18n: 'password.complexity.no_username.description'\n      },\n      excludeFirstName: {\n        i18n: 'password.complexity.no_first_name.description'\n      },\n      excludeLastName: {\n        i18n: 'password.complexity.no_last_name.description'\n      },\n      useADComplexityRequirements: {\n        i18n: 'password.complexity.adRequirements.description'\n      },\n      maxConsecutiveRepeatingCharacters: {\n        i18n: 'password.complexity.maxConsecutiveRepeatingCharacters.description',\n        args: true\n      }\n    },\n    history: {\n      one: {\n        i18n: 'password.complexity.history.one.description'\n      },\n      many: {\n        i18n: 'password.complexity.history.description'\n      }\n    },\n    age: {\n      minutes: {\n        i18n: 'password.complexity.minAgeMinutes.description'\n      },\n      hours: {\n        i18n: 'password.complexity.minAgeHours.description'\n      },\n      days: {\n        i18n: 'password.complexity.minAgeDays.description'\n      }\n    }\n  };\n  const passwordRequirements = getPasswordRequirements(policy, passwordRequirementHtmlI18nKeys, true);\n  return _.union(passwordRequirements.complexity, passwordRequirements.history, passwordRequirements.age);\n};\nfn.getPasswordComplexityDescription = function (policy) {\n  const passwordRequirementI18nKeys = {\n    complexity: {\n      minLength: {\n        i18n: 'password.complexity.length',\n        args: true\n      },\n      minLowerCase: {\n        i18n: 'password.complexity.lowercase'\n      },\n      minUpperCase: {\n        i18n: 'password.complexity.uppercase'\n      },\n      minNumber: {\n        i18n: 'password.complexity.number'\n      },\n      minSymbol: {\n        i18n: 'password.complexity.symbol'\n      },\n      excludeUsername: {\n        i18n: 'password.complexity.no_username'\n      },\n      excludeFirstName: {\n        i18n: 'password.complexity.no_first_name'\n      },\n      excludeLastName: {\n        i18n: 'password.complexity.no_last_name'\n      },\n      useADComplexityRequirements: {\n        i18n: 'password.complexity.adRequirements'\n      },\n      maxConsecutiveRepeatingCharacters: {\n        i18n: 'password.complexity.maxConsecutiveRepeatingCharacters',\n        args: true\n      }\n    },\n    history: {\n      i18n: 'password.complexity.history'\n    },\n    age: {\n      minutes: {\n        i18n: 'password.complexity.minAgeMinutes'\n      },\n      hours: {\n        i18n: 'password.complexity.minAgeHours'\n      },\n      days: {\n        i18n: 'password.complexity.minAgeDays'\n      }\n    }\n  };\n  const result = [];\n  const passwordRequirements = getPasswordRequirements(policy, passwordRequirementI18nKeys, false);\n  let requirements = passwordRequirements.complexity;\n\n  // Generate and add complexity string to result\n  if (requirements.length > 0) {\n    requirements = _.reduce(requirements, function (result, requirement) {\n      return result ? result + loc('password.complexity.list.element', 'login', [requirement]) : requirement;\n    });\n    result.push(loc('password.complexity.requirements', 'login', [requirements]));\n  }\n\n  // Only 1 value expected in history and age for now\n  result.push(passwordRequirements.history[0]);\n  result.push(passwordRequirements.age[0]);\n  return _.compact(result).join(' ');\n};\nfn.getCardinalityText = function (enrolled, required, cardinality) {\n  if (cardinality) {\n    if (enrolled) {\n      return cardinality.enrolled === 1 ? '' : loc('enroll.choices.cardinality.setup', 'login', [cardinality.enrolled]);\n    } else if (required && cardinality.maximum > 1) {\n      return loc('enroll.choices.cardinality.setup.remaining', 'login', [cardinality.enrolled, cardinality.minimum]);\n    }\n  }\n  return '';\n};\nfn.findFactorInFactorsArray = function (factors, provider, factorType) {\n  let factor = factors.findWhere({\n    provider: provider,\n    factorType: factorType\n  });\n  if (factor === undefined) {\n    //for factors that support cardinality and only have factorType\n    factor = factors.findWhere({\n      factorType: factorType\n    });\n  }\n  return factor;\n};\nexport { fn as default };","map":{"version":3,"names":["_","loc","TimeUtil","fn","factorData","OKTA_VERIFY","label","description","iconClassName","sortOrder","OKTA_VERIFY_PUSH","U2F","brandName","WEBAUTHN","WINDOWS_HELLO","YUBIKEY","GOOGLE_AUTH","CUSTOM_HOTP","SMS","CALL","EMAIL","QUESTION","DUO","SYMANTEC_VIP","RSA_SECURID","ON_PREM","PASSWORD","CUSTOM_CLAIMS","GENERIC_SAML","GENERIC_OIDC","getPasswordComplexityRequirementsAsArray","policy","i18nKeys","setExcludeAttributes","policyComplexity","excludeAttributes","excludeFirstName","contains","excludeLastName","omit","complexity","complexityFields","filteredPolicyComplexity","useADComplexityRequirements","allowed","pick","requirements","map","complexityValue","complexityType","params","args","i18n","compact","getPasswordHistoryRequirementDescription","isUpdatedPasswordRequirementsText","age","historyCount","history","one","many","getPasswordAgeRequirementDescription","getPasswordAgeRequirement","displayableTime","propertiesString","unit","days","hours","minutes","time","minAgeMinutes","getTimeInHighestRelevantUnit","getPasswordRequirements","passwordRequirements","historyRequirement","push","ageRequirement","getFactorName","provider","factorType","getFactorNameForFactorType","call","settings","get","isOktaVerify","getFactorLabel","key","apply","getFactorDescription","descriptionKey","isFunction","getFactorIconClassName","getFactorSortOrder","getRememberDeviceValue","appState","getSecurityQuestionLabel","questionObj","localizedQuestion","question","indexOf","questionText","removeRequirementsFromError","responseJSON","passwordRequirementsAsString","getPasswordComplexityDescription","errorCauses","length","isString","errorSummary","replace","trim","getPasswordComplexityDescriptionForHtmlList","passwordRequirementHtmlI18nKeys","minLength","minLowerCase","minUpperCase","minNumber","minSymbol","excludeUsername","maxConsecutiveRepeatingCharacters","union","passwordRequirementI18nKeys","result","reduce","requirement","join","getCardinalityText","enrolled","required","cardinality","maximum","minimum","findFactorInFactorsArray","factors","factor","findWhere","undefined","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/util/FactorUtil.js"],"sourcesContent":["import _ from '../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';\nimport { loc } from './loc.js';\nimport TimeUtil from './TimeUtil.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst fn = {};\nconst factorData = {\n  OKTA_VERIFY: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpSoft.oktaVerify',\n    description: 'factor.totpSoft.description',\n    iconClassName: 'mfa-okta-verify',\n    sortOrder: 1\n  },\n  OKTA_VERIFY_PUSH: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.oktaVerifyPush',\n    description: 'factor.push.description',\n    iconClassName: 'mfa-okta-verify',\n    sortOrder: 1\n  },\n  U2F: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.u2f',\n    description: brandName => {\n      return brandName ? 'factor.u2f.description.specific' : 'factor.u2f.description.generic';\n    },\n    iconClassName: 'mfa-u2f',\n    sortOrder: 2\n  },\n  WEBAUTHN: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.webauthn.biometric',\n    description: 'factor.webauthn.biometric.description',\n    iconClassName: 'mfa-webauthn',\n    sortOrder: 2\n  },\n  WINDOWS_HELLO: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.windowsHello',\n    description: brandName => {\n      return brandName ? 'factor.windowsHello.signin.description.specific' : 'factor.windowsHello.signin.description.generic';\n    },\n    iconClassName: 'mfa-windows-hello',\n    sortOrder: 3\n  },\n  YUBIKEY: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpHard.yubikey',\n    description: 'factor.totpHard.yubikey.description',\n    iconClassName: 'mfa-yubikey',\n    sortOrder: 4\n  },\n  GOOGLE_AUTH: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpSoft.googleAuthenticator',\n    description: 'factor.totpSoft.description',\n    iconClassName: 'mfa-google-auth',\n    sortOrder: 5\n  },\n  CUSTOM_HOTP: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: 'factor.hotp.description',\n    iconClassName: 'mfa-hotp',\n    sortOrder: 6\n  },\n  SMS: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.sms',\n    description: 'factor.sms.description',\n    iconClassName: 'mfa-okta-sms',\n    sortOrder: 7\n  },\n  CALL: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.call',\n    description: 'factor.call.description',\n    iconClassName: 'mfa-okta-call',\n    sortOrder: 8\n  },\n  EMAIL: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.email',\n    description: 'factor.email.description',\n    iconClassName: 'mfa-okta-email',\n    sortOrder: 9\n  },\n  QUESTION: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.securityQuestion',\n    description: 'factor.securityQuestion.description',\n    iconClassName: 'mfa-okta-security-question',\n    sortOrder: 10\n  },\n  DUO: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.duo',\n    description: 'factor.duo.description',\n    iconClassName: 'mfa-duo',\n    sortOrder: 11\n  },\n  SYMANTEC_VIP: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpHard.symantecVip',\n    description: 'factor.totpHard.description',\n    iconClassName: 'mfa-symantec',\n    sortOrder: 12\n  },\n  RSA_SECURID: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpHard.rsaSecurId',\n    description: 'factor.totpHard.description',\n    iconClassName: 'mfa-rsa',\n    sortOrder: 13\n  },\n  ON_PREM: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: 'factor.totpHard.description',\n    iconClassName: 'mfa-onprem',\n    sortOrder: 14\n  },\n  PASSWORD: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.password',\n    description: '',\n    iconClassName: 'mfa-okta-password',\n    sortOrder: 15\n  },\n  CUSTOM_CLAIMS: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: 'factor.customFactor.description',\n    iconClassName: 'mfa-custom-factor',\n    sortOrder: 16\n  },\n  GENERIC_SAML: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: brandName => {\n      return brandName ? 'factor.customFactor.description.specific' : 'factor.customFactor.description.generic';\n    },\n    iconClassName: 'mfa-custom-factor',\n    sortOrder: 17\n  },\n  GENERIC_OIDC: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: brandName => {\n      return brandName ? 'factor.customFactor.description.specific' : 'factor.customFactor.description.generic';\n    },\n    iconClassName: 'mfa-custom-factor',\n    sortOrder: 18\n  }\n};\nconst getPasswordComplexityRequirementsAsArray = function (policy, i18nKeys) {\n  const setExcludeAttributes = function (policyComplexity) {\n    const excludeAttributes = policyComplexity.excludeAttributes;\n    policyComplexity.excludeFirstName = _.contains(excludeAttributes, 'firstName');\n    policyComplexity.excludeLastName = _.contains(excludeAttributes, 'lastName');\n    return _.omit(policyComplexity, 'excludeAttributes');\n  };\n  if (policy.complexity) {\n    const complexityFields = i18nKeys.complexity;\n    const policyComplexity = setExcludeAttributes(policy.complexity);\n    let filteredPolicyComplexity = policyComplexity;\n\n    // If useADComplexityRequirements is true, ignore casing, number, and symbol rules since\n    // AD validator handles those requirements\n    if (policyComplexity.useADComplexityRequirements) {\n      const allowed = ['minLength', 'useADComplexityRequirements', 'excludeUsername', 'excludeFirstName', 'excludeLastName', 'excludeAttributes'];\n      filteredPolicyComplexity = _.pick(policyComplexity, allowed);\n    }\n    const requirements = _.map(filteredPolicyComplexity, function (complexityValue, complexityType) {\n      if (complexityValue <= 0) {\n        // to skip 0 and -1\n        return;\n      }\n      const params = complexityFields[complexityType];\n      return params.args ? loc(params.i18n, 'login', [complexityValue]) : loc(params.i18n, 'login');\n    });\n    return _.compact(requirements);\n  }\n  return [];\n};\nconst getPasswordHistoryRequirementDescription = function (policy, i18nKeys, isUpdatedPasswordRequirementsText) {\n  if (policy.age && policy.age.historyCount > 0) {\n    if (isUpdatedPasswordRequirementsText) {\n      return policy.age.historyCount === 1 ? loc(i18nKeys.history.one.i18n, 'login') : loc(i18nKeys.history.many.i18n, 'login', [policy.age.historyCount]);\n    } else {\n      return loc(i18nKeys.history.i18n, 'login', [policy.age.historyCount]);\n    }\n  }\n  return null;\n};\nconst getPasswordAgeRequirementDescription = function (policy, i18nKeys) {\n  const getPasswordAgeRequirement = function (displayableTime) {\n    let propertiesString;\n    switch (displayableTime.unit) {\n      case 'DAY':\n        propertiesString = i18nKeys.age.days.i18n;\n        break;\n      case 'HOUR':\n        propertiesString = i18nKeys.age.hours.i18n;\n        break;\n      case 'MINUTE':\n        propertiesString = i18nKeys.age.minutes.i18n;\n    }\n    return loc(propertiesString, 'login', [displayableTime.time]);\n  };\n  if (policy.age && policy.age.minAgeMinutes > 0) {\n    const displayableTime = TimeUtil.getTimeInHighestRelevantUnit(policy.age.minAgeMinutes, 'MINUTE');\n    return getPasswordAgeRequirement(displayableTime);\n  }\n  return null;\n};\nconst getPasswordRequirements = function (policy, i18nKeys, isUpdatedPasswordRequirementsText) {\n  const passwordRequirements = {\n    complexity: [],\n    history: [],\n    age: []\n  };\n  passwordRequirements.complexity = getPasswordComplexityRequirementsAsArray(policy, i18nKeys);\n  const historyRequirement = getPasswordHistoryRequirementDescription(policy, i18nKeys, isUpdatedPasswordRequirementsText);\n  if (historyRequirement) {\n    passwordRequirements.history.push(historyRequirement);\n  }\n  const ageRequirement = getPasswordAgeRequirementDescription(policy, i18nKeys);\n  if (ageRequirement) {\n    passwordRequirements.age.push(ageRequirement);\n  }\n  return passwordRequirements;\n};\nfn.getFactorName = function (provider, factorType) {\n  if (provider === 'OKTA' && factorType === 'token:software:totp') {\n    return 'OKTA_VERIFY';\n  }\n  if (provider === 'OKTA' && factorType === 'push') {\n    return 'OKTA_VERIFY_PUSH';\n  }\n  if (provider === 'GOOGLE') {\n    return 'GOOGLE_AUTH';\n  }\n  if (provider === 'SYMANTEC' && factorType === 'token') {\n    return 'SYMANTEC_VIP';\n  }\n  if (provider === 'RSA' && factorType === 'token') {\n    return 'RSA_SECURID';\n  }\n  if (provider === 'DEL_OATH' && factorType === 'token') {\n    return 'ON_PREM';\n  }\n  if (provider === 'DUO' && factorType === 'web') {\n    return 'DUO';\n  }\n  if (provider === 'YUBICO' && factorType === 'token:hardware') {\n    return 'YUBIKEY';\n  }\n  if (provider === 'OKTA' && factorType === 'sms') {\n    return 'SMS';\n  }\n  if (provider === 'OKTA' && factorType === 'call') {\n    return 'CALL';\n  }\n  if (provider === 'OKTA' && factorType === 'question') {\n    return 'QUESTION';\n  }\n  if (provider === 'OKTA' && factorType === 'email') {\n    return 'EMAIL';\n  }\n  if (provider === 'OKTA' && factorType === 'password') {\n    return 'PASSWORD';\n  }\n  if (provider === 'GENERIC_SAML' && factorType === 'assertion:saml2') {\n    return 'GENERIC_SAML';\n  }\n  if (provider === 'GENERIC_OIDC' && factorType === 'assertion:oidc') {\n    return 'GENERIC_OIDC';\n  }\n  return fn.getFactorNameForFactorType.call(this, factorType);\n};\nfn.getFactorNameForFactorType = function (factorType) {\n  if (factorType === 'u2f') {\n    return 'U2F';\n  }\n  if (factorType === 'token:software:totp') {\n    return 'OKTA_VERIFY';\n  }\n  if (factorType === 'webauthn') {\n    if (this.settings.get('features.webauthn')) {\n      return 'WEBAUTHN';\n    } else {\n      return 'WINDOWS_HELLO';\n    }\n  }\n  if (factorType === 'token:hotp') {\n    return 'CUSTOM_HOTP';\n  }\n  if (factorType === 'claims_provider') {\n    return 'CUSTOM_CLAIMS';\n  }\n};\nfn.isOktaVerify = function (provider, factorType) {\n  return provider === 'OKTA' && (factorType === 'token:software:totp' || factorType === 'push');\n};\nfn.getFactorLabel = function (provider, factorType) {\n  const key = factorData[fn.getFactorName.apply(this, [provider, factorType])].label;\n  return loc(key, 'login');\n};\nfn.getFactorDescription = function (provider, factorType) {\n  const descriptionKey = factorData[fn.getFactorName.apply(this, [provider, factorType])].description;\n  if (_.isFunction(descriptionKey)) {\n    const brandName = this.settings.get('brandName');\n    const key = descriptionKey(brandName);\n    return brandName ? loc(key, 'login', [brandName]) : loc(key, 'login');\n  } else {\n    return descriptionKey ? loc(descriptionKey, 'login') : '';\n  }\n};\nfn.getFactorIconClassName = function (provider, factorType) {\n  return factorData[fn.getFactorName.apply(this, [provider, factorType])].iconClassName;\n};\nfn.getFactorSortOrder = function (provider, factorType) {\n  return factorData[fn.getFactorName.apply(this, [provider, factorType])].sortOrder;\n};\nfn.getRememberDeviceValue = function (appState) {\n  return appState && appState.get('rememberDeviceByDefault');\n};\nfn.getSecurityQuestionLabel = function (questionObj) {\n  const localizedQuestion = loc('security.' + questionObj.question);\n  return localizedQuestion.indexOf('L10N_ERROR') < 0 ? localizedQuestion : questionObj.questionText;\n};\nfn.removeRequirementsFromError = function (responseJSON, policy) {\n  const passwordRequirementsAsString = this.getPasswordComplexityDescription(policy);\n  if (responseJSON.errorCauses && responseJSON.errorCauses.length > 0 && _.isString(responseJSON.errorCauses[0].errorSummary)) {\n    responseJSON.errorCauses[0].errorSummary = responseJSON.errorCauses[0].errorSummary.replace(passwordRequirementsAsString, '').trim();\n  }\n  return responseJSON;\n};\nfn.getPasswordComplexityDescriptionForHtmlList = function (policy) {\n  const passwordRequirementHtmlI18nKeys = {\n    complexity: {\n      minLength: {\n        i18n: 'password.complexity.length.description',\n        args: true\n      },\n      minLowerCase: {\n        i18n: 'password.complexity.lowercase.description'\n      },\n      minUpperCase: {\n        i18n: 'password.complexity.uppercase.description'\n      },\n      minNumber: {\n        i18n: 'password.complexity.number.description'\n      },\n      minSymbol: {\n        i18n: 'password.complexity.symbol.description'\n      },\n      excludeUsername: {\n        i18n: 'password.complexity.no_username.description'\n      },\n      excludeFirstName: {\n        i18n: 'password.complexity.no_first_name.description'\n      },\n      excludeLastName: {\n        i18n: 'password.complexity.no_last_name.description'\n      },\n      useADComplexityRequirements: {\n        i18n: 'password.complexity.adRequirements.description'\n      },\n      maxConsecutiveRepeatingCharacters: {\n        i18n: 'password.complexity.maxConsecutiveRepeatingCharacters.description',\n        args: true\n      }\n    },\n    history: {\n      one: {\n        i18n: 'password.complexity.history.one.description'\n      },\n      many: {\n        i18n: 'password.complexity.history.description'\n      }\n    },\n    age: {\n      minutes: {\n        i18n: 'password.complexity.minAgeMinutes.description'\n      },\n      hours: {\n        i18n: 'password.complexity.minAgeHours.description'\n      },\n      days: {\n        i18n: 'password.complexity.minAgeDays.description'\n      }\n    }\n  };\n  const passwordRequirements = getPasswordRequirements(policy, passwordRequirementHtmlI18nKeys, true);\n  return _.union(passwordRequirements.complexity, passwordRequirements.history, passwordRequirements.age);\n};\nfn.getPasswordComplexityDescription = function (policy) {\n  const passwordRequirementI18nKeys = {\n    complexity: {\n      minLength: {\n        i18n: 'password.complexity.length',\n        args: true\n      },\n      minLowerCase: {\n        i18n: 'password.complexity.lowercase'\n      },\n      minUpperCase: {\n        i18n: 'password.complexity.uppercase'\n      },\n      minNumber: {\n        i18n: 'password.complexity.number'\n      },\n      minSymbol: {\n        i18n: 'password.complexity.symbol'\n      },\n      excludeUsername: {\n        i18n: 'password.complexity.no_username'\n      },\n      excludeFirstName: {\n        i18n: 'password.complexity.no_first_name'\n      },\n      excludeLastName: {\n        i18n: 'password.complexity.no_last_name'\n      },\n      useADComplexityRequirements: {\n        i18n: 'password.complexity.adRequirements'\n      },\n      maxConsecutiveRepeatingCharacters: {\n        i18n: 'password.complexity.maxConsecutiveRepeatingCharacters',\n        args: true\n      }\n    },\n    history: {\n      i18n: 'password.complexity.history'\n    },\n    age: {\n      minutes: {\n        i18n: 'password.complexity.minAgeMinutes'\n      },\n      hours: {\n        i18n: 'password.complexity.minAgeHours'\n      },\n      days: {\n        i18n: 'password.complexity.minAgeDays'\n      }\n    }\n  };\n  const result = [];\n  const passwordRequirements = getPasswordRequirements(policy, passwordRequirementI18nKeys, false);\n  let requirements = passwordRequirements.complexity;\n\n  // Generate and add complexity string to result\n  if (requirements.length > 0) {\n    requirements = _.reduce(requirements, function (result, requirement) {\n      return result ? result + loc('password.complexity.list.element', 'login', [requirement]) : requirement;\n    });\n    result.push(loc('password.complexity.requirements', 'login', [requirements]));\n  }\n\n  // Only 1 value expected in history and age for now\n  result.push(passwordRequirements.history[0]);\n  result.push(passwordRequirements.age[0]);\n  return _.compact(result).join(' ');\n};\nfn.getCardinalityText = function (enrolled, required, cardinality) {\n  if (cardinality) {\n    if (enrolled) {\n      return cardinality.enrolled === 1 ? '' : loc('enroll.choices.cardinality.setup', 'login', [cardinality.enrolled]);\n    } else if (required && cardinality.maximum > 1) {\n      return loc('enroll.choices.cardinality.setup.remaining', 'login', [cardinality.enrolled, cardinality.minimum]);\n    }\n  }\n  return '';\n};\nfn.findFactorInFactorsArray = function (factors, provider, factorType) {\n  let factor = factors.findWhere({\n    provider: provider,\n    factorType: factorType\n  });\n  if (factor === undefined) {\n    //for factors that support cardinality and only have factorType\n    factor = factors.findWhere({\n      factorType: factorType\n    });\n  }\n  return factor;\n};\n\nexport { fn as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}