{"ast":null,"code":"import _asyncToGenerator from \"C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { sendRequest } from './request.js';\nimport PasswordTransaction from './transactions/PasswordTransaction.js';\nconst getPassword = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (oktaAuth, options) {\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/password`,\n      method: 'GET',\n      accessToken: options === null || options === void 0 ? void 0 : options.accessToken\n    }, PasswordTransaction);\n    return transaction;\n  });\n  return function getPassword(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst enrollPassword = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      accessToken,\n      payload\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: '/idp/myaccount/password',\n      method: 'POST',\n      payload,\n      accessToken\n    }, PasswordTransaction);\n    return transaction;\n  });\n  return function enrollPassword(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nconst updatePassword = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      accessToken,\n      payload\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: '/idp/myaccount/password',\n      method: 'PUT',\n      payload,\n      accessToken\n    }, PasswordTransaction);\n    return transaction;\n  });\n  return function updatePassword(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nconst deletePassword = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator(function* (oktaAuth, options) {\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/password`,\n      method: 'DELETE',\n      accessToken: options === null || options === void 0 ? void 0 : options.accessToken\n    });\n    return transaction;\n  });\n  return function deletePassword(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport { deletePassword, enrollPassword, getPassword, updatePassword };","map":{"version":3,"names":["sendRequest","PasswordTransaction","getPassword","_ref","_asyncToGenerator","oktaAuth","options","transaction","url","method","accessToken","_x","_x2","apply","arguments","enrollPassword","_ref2","payload","_x3","_x4","updatePassword","_ref3","_x5","_x6","deletePassword","_ref4","_x7","_x8"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/myaccount/passwordApi.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { sendRequest } from './request.js';\nimport PasswordTransaction from './transactions/PasswordTransaction.js';\n\nconst getPassword = async (oktaAuth, options) => {\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/password`,\n        method: 'GET',\n        accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n    }, PasswordTransaction);\n    return transaction;\n};\nconst enrollPassword = async (oktaAuth, options) => {\n    const { accessToken, payload } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: '/idp/myaccount/password',\n        method: 'POST',\n        payload,\n        accessToken,\n    }, PasswordTransaction);\n    return transaction;\n};\nconst updatePassword = async (oktaAuth, options) => {\n    const { accessToken, payload } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: '/idp/myaccount/password',\n        method: 'PUT',\n        payload,\n        accessToken,\n    }, PasswordTransaction);\n    return transaction;\n};\nconst deletePassword = async (oktaAuth, options) => {\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/password`,\n        method: 'DELETE',\n        accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n    });\n    return transaction;\n};\n\nexport { deletePassword, enrollPassword, getPassword, updatePassword };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,cAAc;AAC1C,OAAOC,mBAAmB,MAAM,uCAAuC;AAEvE,MAAMC,WAAW;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,QAAQ,EAAEC,OAAO,EAAK;IAC7C,MAAMC,WAAW,SAASP,WAAW,CAACK,QAAQ,EAAE;MAC5CG,GAAG,EAAE,yBAAyB;MAC9BC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAEJ,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI;IAC3E,CAAC,EAAET,mBAAmB,CAAC;IACvB,OAAOM,WAAW;EACtB,CAAC;EAAA,gBAPKL,WAAWA,CAAAS,EAAA,EAAAC,GAAA;IAAA,OAAAT,IAAA,CAAAU,KAAA,OAAAC,SAAA;EAAA;AAAA,GAOhB;AACD,MAAMC,cAAc;EAAA,IAAAC,KAAA,GAAAZ,iBAAA,CAAG,WAAOC,QAAQ,EAAEC,OAAO,EAAK;IAChD,MAAM;MAAEI,WAAW;MAAEO;IAAQ,CAAC,GAAGX,OAAO;IACxC,MAAMC,WAAW,SAASP,WAAW,CAACK,QAAQ,EAAE;MAC5CG,GAAG,EAAE,yBAAyB;MAC9BC,MAAM,EAAE,MAAM;MACdQ,OAAO;MACPP;IACJ,CAAC,EAAET,mBAAmB,CAAC;IACvB,OAAOM,WAAW;EACtB,CAAC;EAAA,gBATKQ,cAAcA,CAAAG,GAAA,EAAAC,GAAA;IAAA,OAAAH,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GASnB;AACD,MAAMM,cAAc;EAAA,IAAAC,KAAA,GAAAjB,iBAAA,CAAG,WAAOC,QAAQ,EAAEC,OAAO,EAAK;IAChD,MAAM;MAAEI,WAAW;MAAEO;IAAQ,CAAC,GAAGX,OAAO;IACxC,MAAMC,WAAW,SAASP,WAAW,CAACK,QAAQ,EAAE;MAC5CG,GAAG,EAAE,yBAAyB;MAC9BC,MAAM,EAAE,KAAK;MACbQ,OAAO;MACPP;IACJ,CAAC,EAAET,mBAAmB,CAAC;IACvB,OAAOM,WAAW;EACtB,CAAC;EAAA,gBATKa,cAAcA,CAAAE,GAAA,EAAAC,GAAA;IAAA,OAAAF,KAAA,CAAAR,KAAA,OAAAC,SAAA;EAAA;AAAA,GASnB;AACD,MAAMU,cAAc;EAAA,IAAAC,KAAA,GAAArB,iBAAA,CAAG,WAAOC,QAAQ,EAAEC,OAAO,EAAK;IAChD,MAAMC,WAAW,SAASP,WAAW,CAACK,QAAQ,EAAE;MAC5CG,GAAG,EAAE,yBAAyB;MAC9BC,MAAM,EAAE,QAAQ;MAChBC,WAAW,EAAEJ,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI;IAC3E,CAAC,CAAC;IACF,OAAOH,WAAW;EACtB,CAAC;EAAA,gBAPKiB,cAAcA,CAAAE,GAAA,EAAAC,GAAA;IAAA,OAAAF,KAAA,CAAAZ,KAAA,OAAAC,SAAA;EAAA;AAAA,GAOnB;AAED,SAASU,cAAc,EAAET,cAAc,EAAEb,WAAW,EAAEkB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}