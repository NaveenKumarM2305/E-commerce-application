{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { generateState } from './oauth.js';\nimport { isBrowser } from '../../features.js';\nimport { removeNils } from '../../util/object.js';\nfunction getDefaultEnrollAuthenticatorParams(sdk) {\n  const {\n    clientId,\n    redirectUri,\n    responseMode,\n    state\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseMode,\n    state: state || generateState(),\n    responseType: 'none',\n    prompt: 'enroll_authenticator'\n  });\n}\nexport { getDefaultEnrollAuthenticatorParams };","map":{"version":3,"names":["generateState","isBrowser","removeNils","getDefaultEnrollAuthenticatorParams","sdk","clientId","redirectUri","responseMode","state","options","defaultRedirectUri","window","location","href","undefined","responseType","prompt"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/oidc/util/defaultEnrollAuthenticatorParams.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { generateState } from './oauth.js';\nimport { isBrowser } from '../../features.js';\nimport { removeNils } from '../../util/object.js';\n\nfunction getDefaultEnrollAuthenticatorParams(sdk) {\n    const { clientId, redirectUri, responseMode, state, } = sdk.options;\n    const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n    return removeNils({\n        clientId,\n        redirectUri: redirectUri || defaultRedirectUri,\n        responseMode,\n        state: state || generateState(),\n        responseType: 'none',\n        prompt: 'enroll_authenticator',\n    });\n}\n\nexport { getDefaultEnrollAuthenticatorParams };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,QAAQ,YAAY;AAC1C,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,mCAAmCA,CAACC,GAAG,EAAE;EAC9C,MAAM;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,YAAY;IAAEC;EAAO,CAAC,GAAGJ,GAAG,CAACK,OAAO;EACnE,MAAMC,kBAAkB,GAAGT,SAAS,CAAC,CAAC,GAAGU,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGC,SAAS;EACzE,OAAOZ,UAAU,CAAC;IACdG,QAAQ;IACRC,WAAW,EAAEA,WAAW,IAAII,kBAAkB;IAC9CH,YAAY;IACZC,KAAK,EAAEA,KAAK,IAAIR,aAAa,CAAC,CAAC;IAC/Be,YAAY,EAAE,MAAM;IACpBC,MAAM,EAAE;EACZ,CAAC,CAAC;AACN;AAEA,SAASb,mCAAmC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}