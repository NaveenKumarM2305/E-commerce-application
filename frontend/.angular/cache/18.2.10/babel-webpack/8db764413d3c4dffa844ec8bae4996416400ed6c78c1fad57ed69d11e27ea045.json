{"ast":null,"code":"/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nconst STATE_HANDLE_SESSION_STORAGE_KEY = 'osw-oie-state-handle';\nconst LAST_INITIATED_LOGIN_URL_SESSION_STORAGE_KEY = 'osw-oie-last-initiated-login-url';\nconst RESEND_TIMESTAMP_SESSION_STORAGE_KEY = 'osw-oie-resend-timestamp';\nconst removeStateHandle = () => {\n  sessionStorage.removeItem(STATE_HANDLE_SESSION_STORAGE_KEY);\n  sessionStorage.removeItem(LAST_INITIATED_LOGIN_URL_SESSION_STORAGE_KEY);\n};\nconst setStateHandle = token => {\n  sessionStorage.setItem(STATE_HANDLE_SESSION_STORAGE_KEY, token);\n  sessionStorage.setItem(LAST_INITIATED_LOGIN_URL_SESSION_STORAGE_KEY, window.location.href);\n};\nconst getStateHandle = () => {\n  return sessionStorage.getItem(STATE_HANDLE_SESSION_STORAGE_KEY);\n};\nconst getLastInitiatedLoginUrl = () => {\n  return sessionStorage.getItem(LAST_INITIATED_LOGIN_URL_SESSION_STORAGE_KEY);\n};\nconst removeResendTimestamp = () => {\n  sessionStorage.removeItem(RESEND_TIMESTAMP_SESSION_STORAGE_KEY);\n};\nconst setResendTimestamp = token => {\n  sessionStorage.setItem(RESEND_TIMESTAMP_SESSION_STORAGE_KEY, token);\n};\nconst getResendTimestamp = () => {\n  return sessionStorage.getItem(RESEND_TIMESTAMP_SESSION_STORAGE_KEY);\n};\nvar sessionStorageHelper = {\n  removeStateHandle: removeStateHandle,\n  setStateHandle: setStateHandle,\n  getStateHandle: getStateHandle,\n  getLastInitiatedLoginUrl: getLastInitiatedLoginUrl,\n  removeResendTimestamp: removeResendTimestamp,\n  setResendTimestamp: setResendTimestamp,\n  getResendTimestamp: getResendTimestamp\n};\nexport { sessionStorageHelper as default };","map":{"version":3,"names":["STATE_HANDLE_SESSION_STORAGE_KEY","LAST_INITIATED_LOGIN_URL_SESSION_STORAGE_KEY","RESEND_TIMESTAMP_SESSION_STORAGE_KEY","removeStateHandle","sessionStorage","removeItem","setStateHandle","token","setItem","window","location","href","getStateHandle","getItem","getLastInitiatedLoginUrl","removeResendTimestamp","setResendTimestamp","getResendTimestamp","sessionStorageHelper","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/client/sessionStorageHelper.js"],"sourcesContent":["/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nconst STATE_HANDLE_SESSION_STORAGE_KEY = 'osw-oie-state-handle';\nconst LAST_INITIATED_LOGIN_URL_SESSION_STORAGE_KEY = 'osw-oie-last-initiated-login-url';\nconst RESEND_TIMESTAMP_SESSION_STORAGE_KEY = 'osw-oie-resend-timestamp';\nconst removeStateHandle = () => {\n  sessionStorage.removeItem(STATE_HANDLE_SESSION_STORAGE_KEY);\n  sessionStorage.removeItem(LAST_INITIATED_LOGIN_URL_SESSION_STORAGE_KEY);\n};\nconst setStateHandle = token => {\n  sessionStorage.setItem(STATE_HANDLE_SESSION_STORAGE_KEY, token);\n  sessionStorage.setItem(LAST_INITIATED_LOGIN_URL_SESSION_STORAGE_KEY, window.location.href);\n};\nconst getStateHandle = () => {\n  return sessionStorage.getItem(STATE_HANDLE_SESSION_STORAGE_KEY);\n};\nconst getLastInitiatedLoginUrl = () => {\n  return sessionStorage.getItem(LAST_INITIATED_LOGIN_URL_SESSION_STORAGE_KEY);\n};\nconst removeResendTimestamp = () => {\n  sessionStorage.removeItem(RESEND_TIMESTAMP_SESSION_STORAGE_KEY);\n};\nconst setResendTimestamp = token => {\n  sessionStorage.setItem(RESEND_TIMESTAMP_SESSION_STORAGE_KEY, token);\n};\nconst getResendTimestamp = () => {\n  return sessionStorage.getItem(RESEND_TIMESTAMP_SESSION_STORAGE_KEY);\n};\nvar sessionStorageHelper = {\n  removeStateHandle: removeStateHandle,\n  setStateHandle: setStateHandle,\n  getStateHandle: getStateHandle,\n  getLastInitiatedLoginUrl: getLastInitiatedLoginUrl,\n  removeResendTimestamp: removeResendTimestamp,\n  setResendTimestamp: setResendTimestamp,\n  getResendTimestamp: getResendTimestamp\n};\n\nexport { sessionStorageHelper as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,gCAAgC,GAAG,sBAAsB;AAC/D,MAAMC,4CAA4C,GAAG,kCAAkC;AACvF,MAAMC,oCAAoC,GAAG,0BAA0B;AACvE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9BC,cAAc,CAACC,UAAU,CAACL,gCAAgC,CAAC;EAC3DI,cAAc,CAACC,UAAU,CAACJ,4CAA4C,CAAC;AACzE,CAAC;AACD,MAAMK,cAAc,GAAGC,KAAK,IAAI;EAC9BH,cAAc,CAACI,OAAO,CAACR,gCAAgC,EAAEO,KAAK,CAAC;EAC/DH,cAAc,CAACI,OAAO,CAACP,4CAA4C,EAAEQ,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC;AAC5F,CAAC;AACD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,OAAOR,cAAc,CAACS,OAAO,CAACb,gCAAgC,CAAC;AACjE,CAAC;AACD,MAAMc,wBAAwB,GAAGA,CAAA,KAAM;EACrC,OAAOV,cAAc,CAACS,OAAO,CAACZ,4CAA4C,CAAC;AAC7E,CAAC;AACD,MAAMc,qBAAqB,GAAGA,CAAA,KAAM;EAClCX,cAAc,CAACC,UAAU,CAACH,oCAAoC,CAAC;AACjE,CAAC;AACD,MAAMc,kBAAkB,GAAGT,KAAK,IAAI;EAClCH,cAAc,CAACI,OAAO,CAACN,oCAAoC,EAAEK,KAAK,CAAC;AACrE,CAAC;AACD,MAAMU,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,OAAOb,cAAc,CAACS,OAAO,CAACX,oCAAoC,CAAC;AACrE,CAAC;AACD,IAAIgB,oBAAoB,GAAG;EACzBf,iBAAiB,EAAEA,iBAAiB;EACpCG,cAAc,EAAEA,cAAc;EAC9BM,cAAc,EAAEA,cAAc;EAC9BE,wBAAwB,EAAEA,wBAAwB;EAClDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,kBAAkB,EAAEA,kBAAkB;EACtCC,kBAAkB,EAAEA;AACtB,CAAC;AAED,SAASC,oBAAoB,IAAIC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}