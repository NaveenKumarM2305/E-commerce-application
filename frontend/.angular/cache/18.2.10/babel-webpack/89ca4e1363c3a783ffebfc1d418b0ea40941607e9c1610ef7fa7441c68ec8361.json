{"ast":null,"code":"import _Handlebars2 from '../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport { loc, internal } from '../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport Model from '../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport config from '../config/config.json.js';\nimport Q from 'q';\nimport fn from '../util/BrowserFeatures.js';\nimport { ConfigError, UnsupportedBrowserError } from '../util/Errors.js';\nimport IDP from '../util/IDP.js';\nimport Logger from '../util/Logger.js';\nimport Util from '../util/Util.js';\nimport fn$1 from '../util/CountryUtil.js';\nconst SharedUtil = internal.util.Util;\nconst assetBaseUrlTpl = _Handlebars2.template({\n  \"compiler\": [8, \">= 4.3.0\"],\n  \"main\": function (container, depth0, helpers, partials, data) {\n    var helper,\n      lookupProperty = container.lookupProperty || function (parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined;\n      };\n    return \"https://global.oktacdn.com/okta-signin-widget/\" + container.escapeExpression((helper = (helper = lookupProperty(helpers, \"version\") || (depth0 != null ? lookupProperty(depth0, \"version\") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {\n      \"name\": \"version\",\n      \"hash\": {},\n      \"data\": data,\n      \"loc\": {\n        \"start\": {\n          \"line\": 1,\n          \"column\": 46\n        },\n        \"end\": {\n          \"line\": 1,\n          \"column\": 57\n        }\n      }\n    }) : helper));\n  },\n  \"useData\": true\n});\nconst local = {\n  authClient: ['object', false, undefined],\n  baseUrl: ['string', true],\n  recoveryToken: ['string', false, undefined],\n  stateToken: ['string', false, undefined],\n  username: ['string', false],\n  relayState: ['string', false],\n  // These two settings are aliases. Setting either value will set `backToSignInUri`\n  signOutLink: ['string', false],\n  // for backward compatibility\n  backToSignInLink: ['string', false],\n  // preferred setting\n\n  redirect: {\n    type: 'string',\n    values: ['never', 'always', 'auto'],\n    value: 'auto'\n  },\n  // allows bootstrapping the Widget into a specific view such\n  // as register or forgot password\n  flow: ['string', false, 'default'],\n  // Function to transform the username before passing it to the API\n  // for Primary Auth, Forgot Password and Unlock Account.\n  transformUsername: ['function', false],\n  // CALLBACKS\n  globalSuccessFn: 'function',\n  globalErrorFn: 'function',\n  processCreds: 'function',\n  hooks: 'object',\n  // IMAGES\n  logo: 'string',\n  logoText: ['string', false],\n  helpSupportNumber: 'string',\n  // <OIE>\n  // attribute to hold proxy (fake) idx response\n  // to render static pages without initiating idx pipeline\n  proxyIdxResponse: ['object', false],\n  // <OIE>\n  // By default, state handle will be saved to session storage\n  // and will be clear when terminal error or success redirect.\n  // Set this flag to true if you want to override this behavior.\n  // a.k.a dishonor the state handle stored in session storage.\n  overrideExistingStateToken: ['boolean', false, false],\n  // FEATURES\n  'features.router': ['boolean', true, false],\n  'features.securityImage': ['boolean', true, false],\n  'features.rememberMe': ['boolean', true, true],\n  'features.autoPush': ['boolean', true, false],\n  'features.smsRecovery': ['boolean', true, false],\n  'features.callRecovery': ['boolean', true, false],\n  'features.emailRecovery': ['boolean', false, true],\n  'features.webauthn': ['boolean', true, false],\n  'features.selfServiceUnlock': ['boolean', true, false],\n  'features.multiOptionalFactorEnroll': ['boolean', true, false],\n  'features.deviceFingerprinting': ['boolean', false, false],\n  'features.hideSignOutLinkInMFA': ['boolean', false, false],\n  'features.skipIdpFactorVerificationBtn': ['boolean', false, false],\n  'features.hideBackToSignInForReset': ['boolean', false, false],\n  'features.customExpiredPassword': ['boolean', true, false],\n  'features.registration': ['boolean', false, false],\n  'features.idpDiscovery': ['boolean', false, false],\n  'features.passwordlessAuth': ['boolean', false, false],\n  'features.showPasswordToggleOnSignInPage': ['boolean', false, false],\n  'features.trackTypingPattern': ['boolean', false, false],\n  'features.redirectByFormSubmit': ['boolean', false, false],\n  'features.useDeviceFingerprintForSecurityImage': ['boolean', false, true],\n  'features.showPasswordRequirementsAsHtmlList': ['boolean', false, false],\n  'features.mfaOnlyFlow': ['boolean', false, false],\n  'features.scrollOnError': ['boolean', false, true],\n  'features.showKeepMeSignedIn': ['boolean', false, true],\n  'features.showIdentifier': ['boolean', false, true],\n  'features.autoFocus': ['boolean', false, true],\n  'features.sameDeviceOVEnrollmentEnabled': ['boolean', false, false],\n  'features.showSessionRevocation': ['boolean', false, false],\n  'features.disableAutocomplete': ['boolean', false, false],\n  defaultCountryCode: ['string', false, 'US'],\n  // I18N\n  language: ['any', false],\n  // Can be a string or a function\n  i18n: ['object', false],\n  // ASSETS\n  'assets.baseUrl': ['string', false],\n  'assets.rewrite': {\n    type: 'function',\n    value: oktaUnderscore.identity\n  },\n  'assets.languages': ['array', false],\n  // OAUTH2\n  issuer: 'string',\n  clientId: 'string',\n  redirectUri: 'string',\n  state: 'string',\n  nonce: 'string',\n  scopes: 'array',\n  codeChallenge: 'string',\n  codeChallengeMethod: ['string', false],\n  oAuthTimeout: ['number', false],\n  authScheme: ['string', false, 'OAUTH2'],\n  // External IdPs\n  idps: ['array', false, []],\n  idpDisplay: {\n    type: 'string',\n    values: ['PRIMARY', 'SECONDARY'],\n    value: 'SECONDARY'\n  },\n  // HELP LINKS\n  'helpLinks.help': 'string',\n  'helpLinks.forgotPassword': 'string',\n  'helpLinks.unlock': 'string',\n  'helpLinks.custom': 'array',\n  'helpLinks.factorPage.href': 'string',\n  'helpLinks.factorPage.text': 'string',\n  //Custom Buttons\n  customButtons: ['array', false, []],\n  //Registration\n  policyId: 'string',\n  'registration.click': 'function',\n  'registration.parseSchema': 'function',\n  'registration.preSubmit': 'function',\n  'registration.postSubmit': 'function',\n  //Consent\n  'consent.cancel': 'function',\n  //IDP Discovery\n  'idpDiscovery.requestContext': 'string',\n  //Colors\n  'colors.brand': 'string',\n  //cspNonce\n  'cspNonce': 'string',\n  //Descriptions\n  brandName: 'string',\n  //PIV\n  piv: ['object', false, {}],\n  //Email verify callback\n  otp: 'string',\n  //Support classic engine\n  useClassicEngine: ['boolean', false, false],\n  //hCaptcha script source URI\n  'hcaptcha.scriptSource': ['string', false],\n  //query params for hCaptcha script source URI\n  'hcaptcha.scriptParams': ['object', false, {}],\n  //reCAPTCHA script source URI\n  'recaptcha.scriptSource': ['string', false]\n};\nconst derived = {\n  backToSignInUri: {\n    deps: ['backToSignInLink', 'signOutLink'],\n    fn: function (backToSignInLink, signOutLink) {\n      return backToSignInLink || signOutLink; // prefer backToSignInLink over signOutLink, but they are aliases\n    }\n  },\n  showPasswordToggle: {\n    deps: ['features.showPasswordToggleOnSignInPage'],\n    fn: function () {\n      var _this$options$feature, _this$options, _this$options$feature2, _this$options2;\n      // showPasswordToggle is for OIE only.\n      // Used to default showPasswordToggleOnSignInPage to true.\n      const defaultValue = true;\n      const customizedValue = (_this$options$feature = (_this$options = this.options) === null || _this$options === void 0 ? void 0 : (_this$options$feature2 = _this$options.features) === null || _this$options$feature2 === void 0 ? void 0 : _this$options$feature2.showPasswordToggleOnSignInPage) !== null && _this$options$feature !== void 0 ? _this$options$feature : (_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2['features.showPasswordToggleOnSignInPage'];\n      return customizedValue !== null && customizedValue !== void 0 ? customizedValue : defaultValue;\n    },\n    cache: true\n  },\n  redirectUtilFn: {\n    deps: ['features.redirectByFormSubmit'],\n    fn: function (redirectByFormSubmit) {\n      return redirectByFormSubmit ? Util.redirectWithFormGet.bind(Util) : SharedUtil.redirect.bind(SharedUtil);\n    },\n    cache: true\n  },\n  supportedLanguages: {\n    deps: ['i18n', 'language', 'assets.languages'],\n    fn: function (i18n, language, hostedLanguages) {\n      // By default, the language be automatically detected from the browser\n      // Developers can specify the language. It will be added to the supportedLanguages list.\n      // Developers can also provide a list of languages with hosted assets, these replace the default list\n      const supportedLanguages = hostedLanguages || config.supportedLanguages;\n      return oktaUnderscore.union(supportedLanguages, oktaUnderscore.keys(i18n), oktaUnderscore.isString(language) ? [language] : []);\n    },\n    cache: true\n  },\n  languageCode: {\n    deps: ['language', 'supportedLanguages'],\n    fn: function (language, supportedLanguages) {\n      const userLanguages = fn.getUserLanguages();\n\n      // TODO: revisit this fix - OKTA-491150\n      userLanguages.forEach((val, idx) => {\n        if (val === 'nl') {\n          userLanguages[idx] = 'nl-NL';\n        } else if (val === 'pt') {\n          userLanguages[idx] = 'pt-BR';\n        }\n      });\n      const preferred = oktaUnderscore.clone(userLanguages);\n      const supportedLowerCase = Util.toLower(supportedLanguages);\n\n      // Any developer defined \"language\" takes highest priority:\n      // As a string, i.e. 'en', 'ja', 'zh-CN'\n      if (oktaUnderscore.isString(language)) {\n        preferred.unshift(language);\n      } else if (oktaUnderscore.isFunction(language)) {\n        // As a callback function, which is passed the list of supported\n        // languages and detected user languages. This function must return\n        // a languageCode, i.e. 'en', 'ja', 'zh-CN'\n        preferred.unshift(language(supportedLanguages, userLanguages));\n      }\n\n      // Add default language, and expand to include any language\n      // codes that do not include region, dialect, etc.\n      preferred.push(config.defaultLanguage);\n      const expanded = Util.toLower(Util.expandLanguages(preferred));\n\n      // Perform a case insensitive search - this is necessary in the case\n      // of browsers like Safari\n      let i;\n      let supportedPos;\n      for (i = 0; i < expanded.length; i++) {\n        supportedPos = supportedLowerCase.indexOf(expanded[i]);\n        if (supportedPos > -1) {\n          return supportedLanguages[supportedPos];\n        }\n      }\n    }\n  },\n  countryCode: {\n    deps: ['defaultCountryCode'],\n    fn: function (defaultCountryCode) {\n      const countries = fn$1.getCountries();\n      return Object.keys(countries).includes(defaultCountryCode) ? defaultCountryCode : 'US';\n    }\n  },\n  mode: {\n    deps: ['codeChallenge'],\n    fn: function (codeChallenge) {\n      if (codeChallenge) {\n        return 'remediation';\n      }\n      return 'relying-party';\n    }\n  },\n  oauth2Enabled: {\n    deps: ['clientId', 'authScheme', 'authClient'],\n    fn: function (clientId, authScheme, authClient) {\n      if (!clientId && authClient) {\n        clientId = authClient.options.clientId;\n      }\n      return !!clientId && authScheme.toLowerCase() === 'oauth2';\n    },\n    cache: true\n  },\n  // Redirect Uri to provide in the oauth API\n  oauthRedirectUri: {\n    deps: ['redirectUri'],\n    fn: function (redirectUri) {\n      if (redirectUri) {\n        return redirectUri;\n      }\n      let origin = window.location.origin;\n\n      // IE8\n      if (!origin) {\n        const href = window.location.href;\n        const path = window.location.pathname;\n        if (path !== '') {\n          origin = href.substring(0, href.lastIndexOf(path));\n        }\n      }\n      return encodeURI(origin);\n    }\n  },\n  // Adjusts the idps passed into the widget based on if they get explicit support\n  configuredSocialIdps: {\n    deps: ['idps'],\n    fn: function (idps) {\n      return oktaUnderscore.map(idps, function (idpConfig) {\n        const idp = oktaUnderscore.clone(idpConfig);\n        let type = idp.type && idp.type.toLowerCase();\n        if (!(type && oktaUnderscore.contains(IDP.SUPPORTED_SOCIAL_IDPS, type))) {\n          type = 'general-idp';\n          idp.text = idp.text || '{ Please provide a text value }';\n        }\n        idp.className = ['social-auth-button', 'social-auth-' + type + '-button ', idp.className ? idp.className : ''].join(' ');\n        idp.dataAttr = 'social-auth-' + type + '-button';\n        idp.i18nKey = 'socialauth.' + type + '.label';\n        return idp;\n      });\n    },\n    cache: true\n  },\n  // Can support piv authentication\n  hasPivCard: {\n    deps: ['piv'],\n    fn: function (piv) {\n      return piv && piv.certAuthUrl;\n    },\n    cache: true\n  },\n  // social auth buttons order - 'above'/'below' the primary auth form (boolean)\n  socialAuthPositionTop: {\n    deps: ['configuredSocialIdps', 'hasPivCard', 'idpDisplay'],\n    fn: function (configuredSocialIdps, hasPivCard, idpDisplay) {\n      return (!oktaUnderscore.isEmpty(configuredSocialIdps) || hasPivCard) && idpDisplay.toUpperCase() === 'PRIMARY';\n    },\n    cache: true\n  },\n  hasConfiguredButtons: {\n    deps: ['configuredSocialIdps', 'customButtons', 'hasPivCard'],\n    fn: function (configuredSocialIdps, customButtons, hasPivCard) {\n      return !oktaUnderscore.isEmpty(configuredSocialIdps) || !oktaUnderscore.isEmpty(customButtons) || hasPivCard;\n    },\n    cache: true\n  }\n};\nclass Settings extends Model {\n  constructor(attributes, options) {\n    // base class constructor will call preinitialize() and initialize() and compute derived properties\n    super(attributes, options);\n\n    // apply languageCode\n    this.authClient = void 0;\n    const authClient = this.getAuthClient();\n    this.setAcceptLanguageHeader(authClient);\n  }\n  get(attributeName) {\n    return Model.prototype.get.call(this, attributeName);\n  }\n  preinitialize(...args) {\n    this.local = local;\n    this.derived = derived;\n    Model.prototype.preinitialize.apply(this, args);\n  }\n  initialize(options) {\n    options = options || {};\n    const {\n      colors: colors,\n      authClient: authClient,\n      flow: flow\n    } = options;\n    let {\n      baseUrl: baseUrl\n    } = options;\n    if (!baseUrl) {\n      // infer baseUrl from the issuer\n      // favor authClient API first\n      if (authClient) {\n        baseUrl = authClient.getIssuerOrigin();\n      } else {\n        var _issuer;\n        // issuer can also be passed a top-level option or exist in authParams\n        const {\n          authParams: authParams\n        } = options;\n        let {\n          issuer: issuer\n        } = options;\n        issuer = issuer || (authParams === null || authParams === void 0 ? void 0 : authParams.issuer);\n        baseUrl = (_issuer = issuer) === null || _issuer === void 0 ? void 0 : _issuer.split('/oauth2/')[0];\n      }\n      this.set('baseUrl', baseUrl);\n    }\n\n    // If `flow` and `authClient` instance are passed to settings, set flow in auth client\n    if (authClient && flow) {\n      authClient.idx.setFlow(flow);\n    }\n    if (!baseUrl) {\n      this.callGlobalError(new ConfigError(loc('error.required.baseUrl')));\n    } else if (colors && oktaUnderscore.isString(colors.brand) && !colors.brand.match(/^#[0-9A-Fa-f]{6}$/)) {\n      this.callGlobalError(new ConfigError(loc('error.invalid.colors.brand')));\n    } else if (fn.corsIsNotSupported()) {\n      this.callGlobalError(new UnsupportedBrowserError(loc('error.unsupported.cors')));\n    }\n  }\n  setAcceptLanguageHeader(authClient) {\n    if (authClient) {\n      authClient.http.setRequestHeader('Accept-Language', this.get('languageCode'));\n    }\n  }\n  setAuthClient(authClient) {\n    this.set('authClient', authClient);\n    this.setAcceptLanguageHeader(authClient);\n  }\n  getAuthClient() {\n    return this.get('authClient');\n  }\n  set(...args) {\n    try {\n      return Model.prototype.set.apply(this, args);\n    } catch (e) {\n      const message = e.message ? e.message : e;\n      this.callGlobalError(new ConfigError(message));\n    }\n  }\n\n  // Invokes the global success function. This should only be called on a\n  // terminal part of the code (i.e. authStatus SUCCESS or after sending\n  // a recovery email)\n  callGlobalSuccess(status, data) {\n    const res = oktaUnderscore.extend(data, {\n      status: status\n    });\n    // Defer this to ensure that our functions have rendered completely\n    // before invoking their function\n\n    oktaUnderscore.defer(oktaUnderscore.partial(this.get('globalSuccessFn'), res));\n  }\n\n  // Invokes the global error function. This should only be called on non\n  // recoverable errors (i.e. configuration errors, browser unsupported\n  // errors, etc)\n  callGlobalError(err) {\n    const globalErrorFn = this.get('globalErrorFn') || this.options.globalErrorFn;\n    // Note: Must use \"this.options.globalErrorFn\" when they've passed invalid\n    // arguments - globalErrorFn will not have been set yet\n\n    if (globalErrorFn) {\n      globalErrorFn(err);\n    } else {\n      // Only throw the error if they have not registered a globalErrorFn\n      throw err;\n    }\n  }\n\n  // Get the username by applying the transform function if it exists.\n  transformUsername(username, operation) {\n    const transformFn = this.get('transformUsername');\n    if (transformFn && oktaUnderscore.isFunction(transformFn)) {\n      return transformFn(username, operation);\n    }\n    return username;\n  }\n  processCreds(creds) {\n    const processCreds = this.get('processCreds');\n    return Q.Promise(function (resolve) {\n      if (!oktaUnderscore.isFunction(processCreds)) {\n        resolve();\n      } else if (processCreds.length === 2) {\n        processCreds(creds, resolve);\n      } else {\n        processCreds(creds);\n        resolve();\n      }\n    });\n  }\n  parseRegistrationSchema(schema, onSuccess, onFailure) {\n    const parseSchema = this.get('registration.parseSchema');\n\n    //check for parseSchema callback\n    if (oktaUnderscore.isFunction(parseSchema)) {\n      parseSchema(schema, function (schema) {\n        onSuccess(schema);\n      }, function (error) {\n        error = error || {\n          errorSummary: loc('registration.default.callbackhook.error')\n        };\n        error['callback'] = 'parseSchema';\n        onFailure(error);\n      });\n    } else {\n      //no callback\n      onSuccess(schema);\n    }\n  }\n  preRegistrationSubmit(postData, onSuccess, onFailure) {\n    const preSubmit = this.get('registration.preSubmit');\n\n    //check for preSubmit callback\n    if (oktaUnderscore.isFunction(preSubmit)) {\n      preSubmit(postData, function (postData) {\n        onSuccess(postData);\n      }, function (error) {\n        error = error || {\n          errorSummary: loc('registration.default.callbackhook.error')\n        };\n        error['callback'] = 'preSubmit';\n        onFailure(error);\n      });\n    } else {\n      //no callback\n      onSuccess(postData);\n    }\n  }\n  postRegistrationSubmit(response, onSuccess, onFailure) {\n    const postSubmit = this.get('registration.postSubmit');\n\n    //check for postSubmit callback\n    if (oktaUnderscore.isFunction(postSubmit)) {\n      postSubmit(response, function (response) {\n        onSuccess(response);\n      }, function (error) {\n        error = error || {\n          errorSummary: loc('registration.default.callbackhook.error')\n        };\n        error['callback'] = 'postSubmit';\n        onFailure(error);\n      });\n    } else {\n      //no callback\n      onSuccess(response);\n    }\n  }\n\n  // Use the parse function to transform config options to the standard\n  // settings we currently support. This is a good place to deprecate old\n  // option formats.\n  parse(options) {\n    if (options.labels || options.country) {\n      Logger.deprecate('Use \"i18n\" instead of \"labels\" and \"country\"');\n      const overrides = options.labels || {};\n      oktaUnderscore.each(options.country, function (val, key) {\n        overrides['country.' + key] = val;\n      });\n      // Old behavior is to treat the override as a global override, so we\n      // need to add these overrides to each language\n      options.i18n = {};\n      oktaUnderscore.each(config.supportedLanguages, function (language) {\n        options.i18n[language] = overrides;\n      });\n      delete options.labels;\n      delete options.country;\n    }\n\n    // Default the assets.baseUrl to the cdn, or remove any trailing slashes\n    if (!options.assets) {\n      options.assets = {};\n    }\n    const abu = options.assets.baseUrl;\n    if (!abu) {\n      options.assets.baseUrl = assetBaseUrlTpl({\n        version: config.version\n      });\n    } else if (abu[abu.length - 1] === '/') {\n      options.assets.baseUrl = abu.substring(0, abu.length - 1);\n    }\n    return options;\n  }\n  isDsTheme() {\n    return false;\n  }\n}\nexport { Settings as default };","map":{"version":3,"names":["_Handlebars2","loc","internal","oktaUnderscore","Model","config","Q","fn","ConfigError","UnsupportedBrowserError","IDP","Logger","Util","fn$1","SharedUtil","util","assetBaseUrlTpl","template","main","container","depth0","helpers","partials","data","helper","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","undefined","escapeExpression","hooks","helperMissing","nullContext","local","authClient","baseUrl","recoveryToken","stateToken","username","relayState","signOutLink","backToSignInLink","redirect","type","values","value","flow","transformUsername","globalSuccessFn","globalErrorFn","processCreds","logo","logoText","helpSupportNumber","proxyIdxResponse","overrideExistingStateToken","defaultCountryCode","language","i18n","identity","issuer","clientId","redirectUri","state","nonce","scopes","codeChallenge","codeChallengeMethod","oAuthTimeout","authScheme","idps","idpDisplay","customButtons","policyId","brandName","piv","otp","useClassicEngine","derived","backToSignInUri","deps","showPasswordToggle","_this$options$feature","_this$options","_this$options$feature2","_this$options2","defaultValue","customizedValue","options","features","showPasswordToggleOnSignInPage","cache","redirectUtilFn","redirectByFormSubmit","redirectWithFormGet","bind","supportedLanguages","hostedLanguages","union","keys","isString","languageCode","userLanguages","getUserLanguages","forEach","val","idx","preferred","clone","supportedLowerCase","toLower","unshift","isFunction","push","defaultLanguage","expanded","expandLanguages","i","supportedPos","length","indexOf","countryCode","countries","getCountries","includes","mode","oauth2Enabled","toLowerCase","oauthRedirectUri","origin","window","location","href","path","pathname","substring","lastIndexOf","encodeURI","configuredSocialIdps","map","idpConfig","idp","contains","SUPPORTED_SOCIAL_IDPS","text","className","join","dataAttr","i18nKey","hasPivCard","certAuthUrl","socialAuthPositionTop","isEmpty","toUpperCase","hasConfiguredButtons","Settings","constructor","attributes","getAuthClient","setAcceptLanguageHeader","get","attributeName","preinitialize","args","apply","initialize","colors","getIssuerOrigin","_issuer","authParams","split","set","setFlow","callGlobalError","brand","match","corsIsNotSupported","http","setRequestHeader","setAuthClient","e","message","callGlobalSuccess","status","res","extend","defer","partial","err","operation","transformFn","creds","Promise","resolve","parseRegistrationSchema","schema","onSuccess","onFailure","parseSchema","error","errorSummary","preRegistrationSubmit","postData","preSubmit","postRegistrationSubmit","response","postSubmit","parse","labels","country","deprecate","overrides","each","key","assets","abu","version","isDsTheme","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/models/Settings.js"],"sourcesContent":["import _Handlebars2 from '../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport { loc, internal } from '../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport Model from '../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport config from '../config/config.json.js';\nimport Q from 'q';\nimport fn from '../util/BrowserFeatures.js';\nimport { ConfigError, UnsupportedBrowserError } from '../util/Errors.js';\nimport IDP from '../util/IDP.js';\nimport Logger from '../util/Logger.js';\nimport Util from '../util/Util.js';\nimport fn$1 from '../util/CountryUtil.js';\n\nconst SharedUtil = internal.util.Util;\nconst assetBaseUrlTpl = _Handlebars2.template({\n  \"compiler\": [8, \">= 4.3.0\"],\n  \"main\": function (container, depth0, helpers, partials, data) {\n    var helper,\n      lookupProperty = container.lookupProperty || function (parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined;\n      };\n    return \"https://global.oktacdn.com/okta-signin-widget/\" + container.escapeExpression((helper = (helper = lookupProperty(helpers, \"version\") || (depth0 != null ? lookupProperty(depth0, \"version\") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {\n      \"name\": \"version\",\n      \"hash\": {},\n      \"data\": data,\n      \"loc\": {\n        \"start\": {\n          \"line\": 1,\n          \"column\": 46\n        },\n        \"end\": {\n          \"line\": 1,\n          \"column\": 57\n        }\n      }\n    }) : helper));\n  },\n  \"useData\": true\n});\nconst local = {\n  authClient: ['object', false, undefined],\n  baseUrl: ['string', true],\n  recoveryToken: ['string', false, undefined],\n  stateToken: ['string', false, undefined],\n  username: ['string', false],\n  relayState: ['string', false],\n  // These two settings are aliases. Setting either value will set `backToSignInUri`\n  signOutLink: ['string', false],\n  // for backward compatibility\n  backToSignInLink: ['string', false],\n  // preferred setting\n\n  redirect: {\n    type: 'string',\n    values: ['never', 'always', 'auto'],\n    value: 'auto'\n  },\n  // allows bootstrapping the Widget into a specific view such\n  // as register or forgot password\n  flow: ['string', false, 'default'],\n  // Function to transform the username before passing it to the API\n  // for Primary Auth, Forgot Password and Unlock Account.\n  transformUsername: ['function', false],\n  // CALLBACKS\n  globalSuccessFn: 'function',\n  globalErrorFn: 'function',\n  processCreds: 'function',\n  hooks: 'object',\n  // IMAGES\n  logo: 'string',\n  logoText: ['string', false],\n  helpSupportNumber: 'string',\n  // <OIE>\n  // attribute to hold proxy (fake) idx response\n  // to render static pages without initiating idx pipeline\n  proxyIdxResponse: ['object', false],\n  // <OIE>\n  // By default, state handle will be saved to session storage\n  // and will be clear when terminal error or success redirect.\n  // Set this flag to true if you want to override this behavior.\n  // a.k.a dishonor the state handle stored in session storage.\n  overrideExistingStateToken: ['boolean', false, false],\n  // FEATURES\n  'features.router': ['boolean', true, false],\n  'features.securityImage': ['boolean', true, false],\n  'features.rememberMe': ['boolean', true, true],\n  'features.autoPush': ['boolean', true, false],\n  'features.smsRecovery': ['boolean', true, false],\n  'features.callRecovery': ['boolean', true, false],\n  'features.emailRecovery': ['boolean', false, true],\n  'features.webauthn': ['boolean', true, false],\n  'features.selfServiceUnlock': ['boolean', true, false],\n  'features.multiOptionalFactorEnroll': ['boolean', true, false],\n  'features.deviceFingerprinting': ['boolean', false, false],\n  'features.hideSignOutLinkInMFA': ['boolean', false, false],\n  'features.skipIdpFactorVerificationBtn': ['boolean', false, false],\n  'features.hideBackToSignInForReset': ['boolean', false, false],\n  'features.customExpiredPassword': ['boolean', true, false],\n  'features.registration': ['boolean', false, false],\n  'features.idpDiscovery': ['boolean', false, false],\n  'features.passwordlessAuth': ['boolean', false, false],\n  'features.showPasswordToggleOnSignInPage': ['boolean', false, false],\n  'features.trackTypingPattern': ['boolean', false, false],\n  'features.redirectByFormSubmit': ['boolean', false, false],\n  'features.useDeviceFingerprintForSecurityImage': ['boolean', false, true],\n  'features.showPasswordRequirementsAsHtmlList': ['boolean', false, false],\n  'features.mfaOnlyFlow': ['boolean', false, false],\n  'features.scrollOnError': ['boolean', false, true],\n  'features.showKeepMeSignedIn': ['boolean', false, true],\n  'features.showIdentifier': ['boolean', false, true],\n  'features.autoFocus': ['boolean', false, true],\n  'features.sameDeviceOVEnrollmentEnabled': ['boolean', false, false],\n  'features.showSessionRevocation': ['boolean', false, false],\n  'features.disableAutocomplete': ['boolean', false, false],\n  defaultCountryCode: ['string', false, 'US'],\n  // I18N\n  language: ['any', false],\n  // Can be a string or a function\n  i18n: ['object', false],\n  // ASSETS\n  'assets.baseUrl': ['string', false],\n  'assets.rewrite': {\n    type: 'function',\n    value: oktaUnderscore.identity\n  },\n  'assets.languages': ['array', false],\n  // OAUTH2\n  issuer: 'string',\n  clientId: 'string',\n  redirectUri: 'string',\n  state: 'string',\n  nonce: 'string',\n  scopes: 'array',\n  codeChallenge: 'string',\n  codeChallengeMethod: ['string', false],\n  oAuthTimeout: ['number', false],\n  authScheme: ['string', false, 'OAUTH2'],\n  // External IdPs\n  idps: ['array', false, []],\n  idpDisplay: {\n    type: 'string',\n    values: ['PRIMARY', 'SECONDARY'],\n    value: 'SECONDARY'\n  },\n  // HELP LINKS\n  'helpLinks.help': 'string',\n  'helpLinks.forgotPassword': 'string',\n  'helpLinks.unlock': 'string',\n  'helpLinks.custom': 'array',\n  'helpLinks.factorPage.href': 'string',\n  'helpLinks.factorPage.text': 'string',\n  //Custom Buttons\n  customButtons: ['array', false, []],\n  //Registration\n  policyId: 'string',\n  'registration.click': 'function',\n  'registration.parseSchema': 'function',\n  'registration.preSubmit': 'function',\n  'registration.postSubmit': 'function',\n  //Consent\n  'consent.cancel': 'function',\n  //IDP Discovery\n  'idpDiscovery.requestContext': 'string',\n  //Colors\n  'colors.brand': 'string',\n  //cspNonce\n  'cspNonce': 'string',\n  //Descriptions\n  brandName: 'string',\n  //PIV\n  piv: ['object', false, {}],\n  //Email verify callback\n  otp: 'string',\n  //Support classic engine\n  useClassicEngine: ['boolean', false, false],\n  //hCaptcha script source URI\n  'hcaptcha.scriptSource': ['string', false],\n  //query params for hCaptcha script source URI\n  'hcaptcha.scriptParams': ['object', false, {}],\n  //reCAPTCHA script source URI\n  'recaptcha.scriptSource': ['string', false]\n};\nconst derived = {\n  backToSignInUri: {\n    deps: ['backToSignInLink', 'signOutLink'],\n    fn: function (backToSignInLink, signOutLink) {\n      return backToSignInLink || signOutLink; // prefer backToSignInLink over signOutLink, but they are aliases\n    }\n  },\n\n  showPasswordToggle: {\n    deps: ['features.showPasswordToggleOnSignInPage'],\n    fn: function () {\n      var _this$options$feature, _this$options, _this$options$feature2, _this$options2;\n      // showPasswordToggle is for OIE only.\n      // Used to default showPasswordToggleOnSignInPage to true.\n      const defaultValue = true;\n      const customizedValue = (_this$options$feature = (_this$options = this.options) === null || _this$options === void 0 ? void 0 : (_this$options$feature2 = _this$options.features) === null || _this$options$feature2 === void 0 ? void 0 : _this$options$feature2.showPasswordToggleOnSignInPage) !== null && _this$options$feature !== void 0 ? _this$options$feature : (_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2['features.showPasswordToggleOnSignInPage'];\n      return customizedValue !== null && customizedValue !== void 0 ? customizedValue : defaultValue;\n    },\n    cache: true\n  },\n  redirectUtilFn: {\n    deps: ['features.redirectByFormSubmit'],\n    fn: function (redirectByFormSubmit) {\n      return redirectByFormSubmit ? Util.redirectWithFormGet.bind(Util) : SharedUtil.redirect.bind(SharedUtil);\n    },\n    cache: true\n  },\n  supportedLanguages: {\n    deps: ['i18n', 'language', 'assets.languages'],\n    fn: function (i18n, language, hostedLanguages) {\n      // By default, the language be automatically detected from the browser\n      // Developers can specify the language. It will be added to the supportedLanguages list.\n      // Developers can also provide a list of languages with hosted assets, these replace the default list\n      const supportedLanguages = hostedLanguages || config.supportedLanguages;\n      return oktaUnderscore.union(supportedLanguages, oktaUnderscore.keys(i18n), oktaUnderscore.isString(language) ? [language] : []);\n    },\n    cache: true\n  },\n  languageCode: {\n    deps: ['language', 'supportedLanguages'],\n    fn: function (language, supportedLanguages) {\n      const userLanguages = fn.getUserLanguages();\n\n      // TODO: revisit this fix - OKTA-491150\n      userLanguages.forEach((val, idx) => {\n        if (val === 'nl') {\n          userLanguages[idx] = 'nl-NL';\n        } else if (val === 'pt') {\n          userLanguages[idx] = 'pt-BR';\n        }\n      });\n      const preferred = oktaUnderscore.clone(userLanguages);\n      const supportedLowerCase = Util.toLower(supportedLanguages);\n\n      // Any developer defined \"language\" takes highest priority:\n      // As a string, i.e. 'en', 'ja', 'zh-CN'\n      if (oktaUnderscore.isString(language)) {\n        preferred.unshift(language);\n      } else if (oktaUnderscore.isFunction(language)) {\n        // As a callback function, which is passed the list of supported\n        // languages and detected user languages. This function must return\n        // a languageCode, i.e. 'en', 'ja', 'zh-CN'\n        preferred.unshift(language(supportedLanguages, userLanguages));\n      }\n\n      // Add default language, and expand to include any language\n      // codes that do not include region, dialect, etc.\n      preferred.push(config.defaultLanguage);\n      const expanded = Util.toLower(Util.expandLanguages(preferred));\n\n      // Perform a case insensitive search - this is necessary in the case\n      // of browsers like Safari\n      let i;\n      let supportedPos;\n      for (i = 0; i < expanded.length; i++) {\n        supportedPos = supportedLowerCase.indexOf(expanded[i]);\n        if (supportedPos > -1) {\n          return supportedLanguages[supportedPos];\n        }\n      }\n    }\n  },\n  countryCode: {\n    deps: ['defaultCountryCode'],\n    fn: function (defaultCountryCode) {\n      const countries = fn$1.getCountries();\n      return Object.keys(countries).includes(defaultCountryCode) ? defaultCountryCode : 'US';\n    }\n  },\n  mode: {\n    deps: ['codeChallenge'],\n    fn: function (codeChallenge) {\n      if (codeChallenge) {\n        return 'remediation';\n      }\n      return 'relying-party';\n    }\n  },\n  oauth2Enabled: {\n    deps: ['clientId', 'authScheme', 'authClient'],\n    fn: function (clientId, authScheme, authClient) {\n      if (!clientId && authClient) {\n        clientId = authClient.options.clientId;\n      }\n      return !!clientId && authScheme.toLowerCase() === 'oauth2';\n    },\n    cache: true\n  },\n  // Redirect Uri to provide in the oauth API\n  oauthRedirectUri: {\n    deps: ['redirectUri'],\n    fn: function (redirectUri) {\n      if (redirectUri) {\n        return redirectUri;\n      }\n      let origin = window.location.origin;\n\n      // IE8\n      if (!origin) {\n        const href = window.location.href;\n        const path = window.location.pathname;\n        if (path !== '') {\n          origin = href.substring(0, href.lastIndexOf(path));\n        }\n      }\n      return encodeURI(origin);\n    }\n  },\n  // Adjusts the idps passed into the widget based on if they get explicit support\n  configuredSocialIdps: {\n    deps: ['idps'],\n    fn: function (idps) {\n      return oktaUnderscore.map(idps, function (idpConfig) {\n        const idp = oktaUnderscore.clone(idpConfig);\n        let type = idp.type && idp.type.toLowerCase();\n        if (!(type && oktaUnderscore.contains(IDP.SUPPORTED_SOCIAL_IDPS, type))) {\n          type = 'general-idp';\n          idp.text = idp.text || '{ Please provide a text value }';\n        }\n        idp.className = ['social-auth-button', 'social-auth-' + type + '-button ', idp.className ? idp.className : ''].join(' ');\n        idp.dataAttr = 'social-auth-' + type + '-button';\n        idp.i18nKey = 'socialauth.' + type + '.label';\n        return idp;\n      });\n    },\n    cache: true\n  },\n  // Can support piv authentication\n  hasPivCard: {\n    deps: ['piv'],\n    fn: function (piv) {\n      return piv && piv.certAuthUrl;\n    },\n    cache: true\n  },\n  // social auth buttons order - 'above'/'below' the primary auth form (boolean)\n  socialAuthPositionTop: {\n    deps: ['configuredSocialIdps', 'hasPivCard', 'idpDisplay'],\n    fn: function (configuredSocialIdps, hasPivCard, idpDisplay) {\n      return (!oktaUnderscore.isEmpty(configuredSocialIdps) || hasPivCard) && idpDisplay.toUpperCase() === 'PRIMARY';\n    },\n    cache: true\n  },\n  hasConfiguredButtons: {\n    deps: ['configuredSocialIdps', 'customButtons', 'hasPivCard'],\n    fn: function (configuredSocialIdps, customButtons, hasPivCard) {\n      return !oktaUnderscore.isEmpty(configuredSocialIdps) || !oktaUnderscore.isEmpty(customButtons) || hasPivCard;\n    },\n    cache: true\n  }\n};\nclass Settings extends Model {\n  constructor(attributes, options) {\n    // base class constructor will call preinitialize() and initialize() and compute derived properties\n    super(attributes, options);\n\n    // apply languageCode\n    this.authClient = void 0;\n    const authClient = this.getAuthClient();\n    this.setAcceptLanguageHeader(authClient);\n  }\n  get(attributeName) {\n    return Model.prototype.get.call(this, attributeName);\n  }\n  preinitialize(...args) {\n    this.local = local;\n    this.derived = derived;\n    Model.prototype.preinitialize.apply(this, args);\n  }\n  initialize(options) {\n    options = options || {};\n    const {\n      colors: colors,\n      authClient: authClient,\n      flow: flow\n    } = options;\n    let {\n      baseUrl: baseUrl\n    } = options;\n    if (!baseUrl) {\n      // infer baseUrl from the issuer\n      // favor authClient API first\n      if (authClient) {\n        baseUrl = authClient.getIssuerOrigin();\n      } else {\n        var _issuer;\n        // issuer can also be passed a top-level option or exist in authParams\n        const {\n          authParams: authParams\n        } = options;\n        let {\n          issuer: issuer\n        } = options;\n        issuer = issuer || (authParams === null || authParams === void 0 ? void 0 : authParams.issuer);\n        baseUrl = (_issuer = issuer) === null || _issuer === void 0 ? void 0 : _issuer.split('/oauth2/')[0];\n      }\n      this.set('baseUrl', baseUrl);\n    }\n\n    // If `flow` and `authClient` instance are passed to settings, set flow in auth client\n    if (authClient && flow) {\n      authClient.idx.setFlow(flow);\n    }\n    if (!baseUrl) {\n      this.callGlobalError(new ConfigError(loc('error.required.baseUrl')));\n    } else if (colors && oktaUnderscore.isString(colors.brand) && !colors.brand.match(/^#[0-9A-Fa-f]{6}$/)) {\n      this.callGlobalError(new ConfigError(loc('error.invalid.colors.brand')));\n    } else if (fn.corsIsNotSupported()) {\n      this.callGlobalError(new UnsupportedBrowserError(loc('error.unsupported.cors')));\n    }\n  }\n  setAcceptLanguageHeader(authClient) {\n    if (authClient) {\n      authClient.http.setRequestHeader('Accept-Language', this.get('languageCode'));\n    }\n  }\n  setAuthClient(authClient) {\n    this.set('authClient', authClient);\n    this.setAcceptLanguageHeader(authClient);\n  }\n  getAuthClient() {\n    return this.get('authClient');\n  }\n  set(...args) {\n    try {\n      return Model.prototype.set.apply(this, args);\n    } catch (e) {\n      const message = e.message ? e.message : e;\n      this.callGlobalError(new ConfigError(message));\n    }\n  }\n\n  // Invokes the global success function. This should only be called on a\n  // terminal part of the code (i.e. authStatus SUCCESS or after sending\n  // a recovery email)\n  callGlobalSuccess(status, data) {\n    const res = oktaUnderscore.extend(data, {\n      status: status\n    });\n    // Defer this to ensure that our functions have rendered completely\n    // before invoking their function\n\n    oktaUnderscore.defer(oktaUnderscore.partial(this.get('globalSuccessFn'), res));\n  }\n\n  // Invokes the global error function. This should only be called on non\n  // recoverable errors (i.e. configuration errors, browser unsupported\n  // errors, etc)\n  callGlobalError(err) {\n    const globalErrorFn = this.get('globalErrorFn') || this.options.globalErrorFn;\n    // Note: Must use \"this.options.globalErrorFn\" when they've passed invalid\n    // arguments - globalErrorFn will not have been set yet\n\n    if (globalErrorFn) {\n      globalErrorFn(err);\n    } else {\n      // Only throw the error if they have not registered a globalErrorFn\n      throw err;\n    }\n  }\n\n  // Get the username by applying the transform function if it exists.\n  transformUsername(username, operation) {\n    const transformFn = this.get('transformUsername');\n    if (transformFn && oktaUnderscore.isFunction(transformFn)) {\n      return transformFn(username, operation);\n    }\n    return username;\n  }\n  processCreds(creds) {\n    const processCreds = this.get('processCreds');\n    return Q.Promise(function (resolve) {\n      if (!oktaUnderscore.isFunction(processCreds)) {\n        resolve();\n      } else if (processCreds.length === 2) {\n        processCreds(creds, resolve);\n      } else {\n        processCreds(creds);\n        resolve();\n      }\n    });\n  }\n  parseRegistrationSchema(schema, onSuccess, onFailure) {\n    const parseSchema = this.get('registration.parseSchema');\n\n    //check for parseSchema callback\n    if (oktaUnderscore.isFunction(parseSchema)) {\n      parseSchema(schema, function (schema) {\n        onSuccess(schema);\n      }, function (error) {\n        error = error || {\n          errorSummary: loc('registration.default.callbackhook.error')\n        };\n        error['callback'] = 'parseSchema';\n        onFailure(error);\n      });\n    } else {\n      //no callback\n      onSuccess(schema);\n    }\n  }\n  preRegistrationSubmit(postData, onSuccess, onFailure) {\n    const preSubmit = this.get('registration.preSubmit');\n\n    //check for preSubmit callback\n    if (oktaUnderscore.isFunction(preSubmit)) {\n      preSubmit(postData, function (postData) {\n        onSuccess(postData);\n      }, function (error) {\n        error = error || {\n          errorSummary: loc('registration.default.callbackhook.error')\n        };\n        error['callback'] = 'preSubmit';\n        onFailure(error);\n      });\n    } else {\n      //no callback\n      onSuccess(postData);\n    }\n  }\n  postRegistrationSubmit(response, onSuccess, onFailure) {\n    const postSubmit = this.get('registration.postSubmit');\n\n    //check for postSubmit callback\n    if (oktaUnderscore.isFunction(postSubmit)) {\n      postSubmit(response, function (response) {\n        onSuccess(response);\n      }, function (error) {\n        error = error || {\n          errorSummary: loc('registration.default.callbackhook.error')\n        };\n        error['callback'] = 'postSubmit';\n        onFailure(error);\n      });\n    } else {\n      //no callback\n      onSuccess(response);\n    }\n  }\n\n  // Use the parse function to transform config options to the standard\n  // settings we currently support. This is a good place to deprecate old\n  // option formats.\n  parse(options) {\n    if (options.labels || options.country) {\n      Logger.deprecate('Use \"i18n\" instead of \"labels\" and \"country\"');\n      const overrides = options.labels || {};\n      oktaUnderscore.each(options.country, function (val, key) {\n        overrides['country.' + key] = val;\n      });\n      // Old behavior is to treat the override as a global override, so we\n      // need to add these overrides to each language\n      options.i18n = {};\n      oktaUnderscore.each(config.supportedLanguages, function (language) {\n        options.i18n[language] = overrides;\n      });\n      delete options.labels;\n      delete options.country;\n    }\n\n    // Default the assets.baseUrl to the cdn, or remove any trailing slashes\n    if (!options.assets) {\n      options.assets = {};\n    }\n    const abu = options.assets.baseUrl;\n    if (!abu) {\n      options.assets.baseUrl = assetBaseUrlTpl({\n        version: config.version\n      });\n    } else if (abu[abu.length - 1] === '/') {\n      options.assets.baseUrl = abu.substring(0, abu.length - 1);\n    }\n    return options;\n  }\n  isDsTheme() {\n    return false;\n  }\n}\n\nexport { Settings as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}