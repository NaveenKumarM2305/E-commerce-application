{"ast":null,"code":"import _asyncToGenerator from \"C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { sendRequest } from './request.js';\nimport PhoneTransaction from './transactions/PhoneTransaction.js';\nimport './types.js';\nconst getPhones = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (oktaAuth, options) {\n    const transaction = yield sendRequest(oktaAuth, {\n      url: '/idp/myaccount/phones',\n      method: 'GET',\n      accessToken: options === null || options === void 0 ? void 0 : options.accessToken\n    }, PhoneTransaction);\n    return transaction;\n  });\n  return function getPhones(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst getPhone = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      accessToken,\n      id\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/phones/${id}`,\n      method: 'GET',\n      accessToken\n    }, PhoneTransaction);\n    return transaction;\n  });\n  return function getPhone(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nconst addPhone = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      accessToken,\n      payload\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: '/idp/myaccount/phones',\n      method: 'POST',\n      payload,\n      accessToken\n    }, PhoneTransaction);\n    return transaction;\n  });\n  return function addPhone(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nconst deletePhone = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      id,\n      accessToken\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/phones/${id}`,\n      method: 'DELETE',\n      accessToken\n    });\n    return transaction;\n  });\n  return function deletePhone(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nconst sendPhoneChallenge = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      accessToken,\n      id,\n      payload\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/phones/${id}/challenge`,\n      method: 'POST',\n      payload,\n      accessToken\n    });\n    return transaction;\n  });\n  return function sendPhoneChallenge(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nconst verifyPhoneChallenge = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      id,\n      payload,\n      accessToken\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/phones/${id}/verify`,\n      method: 'POST',\n      payload,\n      accessToken\n    });\n    return transaction;\n  });\n  return function verifyPhoneChallenge(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport { addPhone, deletePhone, getPhone, getPhones, sendPhoneChallenge, verifyPhoneChallenge };","map":{"version":3,"names":["sendRequest","PhoneTransaction","getPhones","_ref","_asyncToGenerator","oktaAuth","options","transaction","url","method","accessToken","_x","_x2","apply","arguments","getPhone","_ref2","id","_x3","_x4","addPhone","_ref3","payload","_x5","_x6","deletePhone","_ref4","_x7","_x8","sendPhoneChallenge","_ref5","_x9","_x10","verifyPhoneChallenge","_ref6","_x11","_x12"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/myaccount/phoneApi.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { sendRequest } from './request.js';\nimport PhoneTransaction from './transactions/PhoneTransaction.js';\nimport './types.js';\n\nconst getPhones = async (oktaAuth, options) => {\n    const transaction = await sendRequest(oktaAuth, {\n        url: '/idp/myaccount/phones',\n        method: 'GET',\n        accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n    }, PhoneTransaction);\n    return transaction;\n};\nconst getPhone = async (oktaAuth, options) => {\n    const { accessToken, id } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/phones/${id}`,\n        method: 'GET',\n        accessToken,\n    }, PhoneTransaction);\n    return transaction;\n};\nconst addPhone = async (oktaAuth, options) => {\n    const { accessToken, payload } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: '/idp/myaccount/phones',\n        method: 'POST',\n        payload,\n        accessToken,\n    }, PhoneTransaction);\n    return transaction;\n};\nconst deletePhone = async (oktaAuth, options) => {\n    const { id, accessToken } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/phones/${id}`,\n        method: 'DELETE',\n        accessToken,\n    });\n    return transaction;\n};\nconst sendPhoneChallenge = async (oktaAuth, options) => {\n    const { accessToken, id, payload } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/phones/${id}/challenge`,\n        method: 'POST',\n        payload,\n        accessToken\n    });\n    return transaction;\n};\nconst verifyPhoneChallenge = async (oktaAuth, options) => {\n    const { id, payload, accessToken } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/phones/${id}/verify`,\n        method: 'POST',\n        payload,\n        accessToken\n    });\n    return transaction;\n};\n\nexport { addPhone, deletePhone, getPhone, getPhones, sendPhoneChallenge, verifyPhoneChallenge };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}