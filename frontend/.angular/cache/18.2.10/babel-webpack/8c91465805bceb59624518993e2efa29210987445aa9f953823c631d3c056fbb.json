{"ast":null,"code":"import { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport BaseForm from '../../internals/BaseForm.js';\nimport '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport '../../components/AuthenticatorVerifyOptions.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';\nimport 'cross-fetch';\nimport fn from '../../../../util/BrowserFeatures.js';\nimport '../../../../util/FactorUtil.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView.js';\nimport SameDeviceEnrollLink from './SameDeviceEnrollLink.js';\nconst Body = BaseForm.extend({\n  title: function () {\n    return fn.isAndroid() || fn.isIOS() ? loc('oie.enroll.okta_verify.setup.title', 'login') : loc('oie.enroll.okta_verify.select.channel.title.updated', 'login');\n  },\n  getUISchema: function () {\n    var _channelField$options;\n    const schemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    // filter selected channel\n    const channelField = oktaUnderscore.find(schemas, schema => schema.name === 'authenticator.channel');\n    // do not show the 'samedevice' radio option, that option is displayed as a link instead\n    channelField.options = oktaUnderscore.filter(channelField === null || channelField === void 0 ? void 0 : channelField.options, option => {\n      var _this$options$appStat, _this$options$appStat2;\n      return option.value !== ((_this$options$appStat = this.options.appState.get('currentAuthenticator')) === null || _this$options$appStat === void 0 ? void 0 : (_this$options$appStat2 = _this$options$appStat.contextualData) === null || _this$options$appStat2 === void 0 ? void 0 : _this$options$appStat2.selectedChannel) && option.value !== 'samedevice';\n    });\n    channelField.value = (_channelField$options = channelField.options[0]) === null || _channelField$options === void 0 ? void 0 : _channelField$options.value;\n    channelField.sublabel = null;\n    this.model.set('authenticator.channel', channelField.value);\n    const description = {\n      View: loc('oie.enroll.okta_verify.select.channel.subtitle', 'login'),\n      selector: '.o-form-fieldset-container'\n    };\n    return [description, ...schemas];\n  }\n});\nvar SelectEnrollmentChannelOktaVerifyView = BaseAuthenticatorView.extend({\n  Body: Body,\n  postRender: function () {\n    var _this$options$current, _authenticatorFormVal;\n    const authenticatorFormValues = (_this$options$current = this.options.currentViewState.value) === null || _this$options$current === void 0 ? void 0 : _this$options$current.find(val => val.name === 'authenticator').value.form.value;\n    const sameDeviceChannelAvailable = authenticatorFormValues === null || authenticatorFormValues === void 0 ? void 0 : (_authenticatorFormVal = authenticatorFormValues.find(val => val.name === 'channel').options) === null || _authenticatorFormVal === void 0 ? void 0 : _authenticatorFormVal.find(channel => channel.value === 'samedevice');\n    // only add this link if the samedevice channel is available in the remediation\n    if (sameDeviceChannelAvailable) {\n      this.add(new SameDeviceEnrollLink({\n        model: this.model,\n        settings: this.settings,\n        appState: this.options.appState\n      }), 'form');\n    }\n  }\n});\nexport { SelectEnrollmentChannelOktaVerifyView as default };","map":{"version":3,"names":["loc","oktaUnderscore","BaseForm","fn","BaseAuthenticatorView","SameDeviceEnrollLink","Body","extend","title","isAndroid","isIOS","getUISchema","_channelField$options","schemas","prototype","apply","arguments","channelField","find","schema","name","options","filter","option","_this$options$appStat","_this$options$appStat2","value","appState","get","contextualData","selectedChannel","sublabel","model","set","description","View","selector","SelectEnrollmentChannelOktaVerifyView","postRender","_this$options$current","_authenticatorFormVal","authenticatorFormValues","currentViewState","val","form","sameDeviceChannelAvailable","channel","add","settings","default"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/views/ov/SelectEnrollmentChannelOktaVerifyView.js"],"sourcesContent":["import { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport BaseForm from '../../internals/BaseForm.js';\nimport '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport '../../components/AuthenticatorVerifyOptions.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';\nimport 'cross-fetch';\nimport fn from '../../../../util/BrowserFeatures.js';\nimport '../../../../util/FactorUtil.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView.js';\nimport SameDeviceEnrollLink from './SameDeviceEnrollLink.js';\n\nconst Body = BaseForm.extend({\n  title: function () {\n    return fn.isAndroid() || fn.isIOS() ? loc('oie.enroll.okta_verify.setup.title', 'login') : loc('oie.enroll.okta_verify.select.channel.title.updated', 'login');\n  },\n  getUISchema: function () {\n    var _channelField$options;\n    const schemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    // filter selected channel\n    const channelField = oktaUnderscore.find(schemas, schema => schema.name === 'authenticator.channel');\n    // do not show the 'samedevice' radio option, that option is displayed as a link instead\n    channelField.options = oktaUnderscore.filter(channelField === null || channelField === void 0 ? void 0 : channelField.options, option => {\n      var _this$options$appStat, _this$options$appStat2;\n      return option.value !== ((_this$options$appStat = this.options.appState.get('currentAuthenticator')) === null || _this$options$appStat === void 0 ? void 0 : (_this$options$appStat2 = _this$options$appStat.contextualData) === null || _this$options$appStat2 === void 0 ? void 0 : _this$options$appStat2.selectedChannel) && option.value !== 'samedevice';\n    });\n    channelField.value = (_channelField$options = channelField.options[0]) === null || _channelField$options === void 0 ? void 0 : _channelField$options.value;\n    channelField.sublabel = null;\n    this.model.set('authenticator.channel', channelField.value);\n    const description = {\n      View: loc('oie.enroll.okta_verify.select.channel.subtitle', 'login'),\n      selector: '.o-form-fieldset-container'\n    };\n    return [description, ...schemas];\n  }\n});\nvar SelectEnrollmentChannelOktaVerifyView = BaseAuthenticatorView.extend({\n  Body: Body,\n  postRender: function () {\n    var _this$options$current, _authenticatorFormVal;\n    const authenticatorFormValues = (_this$options$current = this.options.currentViewState.value) === null || _this$options$current === void 0 ? void 0 : _this$options$current.find(val => val.name === 'authenticator').value.form.value;\n    const sameDeviceChannelAvailable = authenticatorFormValues === null || authenticatorFormValues === void 0 ? void 0 : (_authenticatorFormVal = authenticatorFormValues.find(val => val.name === 'channel').options) === null || _authenticatorFormVal === void 0 ? void 0 : _authenticatorFormVal.find(channel => channel.value === 'samedevice');\n    // only add this link if the samedevice channel is available in the remediation\n    if (sameDeviceChannelAvailable) {\n      this.add(new SameDeviceEnrollLink({\n        model: this.model,\n        settings: this.settings,\n        appState: this.options.appState\n      }), 'form');\n    }\n  }\n});\n\nexport { SelectEnrollmentChannelOktaVerifyView as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}