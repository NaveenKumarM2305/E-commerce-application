{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util/object.js';\nimport '../errors/WWWAuthError.js';\nimport { createEnrollAuthenticatorMeta } from './util/enrollAuthenticatorMeta.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { prepareEnrollAuthenticatorParams } from './util/prepareEnrollAuthenticatorParams.js';\nimport './types/Token.js';\nimport { buildAuthorizeParams } from './endpoints/authorize.js';\nfunction enrollAuthenticator(sdk, options) {\n  options = clone(options) || {};\n  const params = prepareEnrollAuthenticatorParams(sdk, options);\n  const meta = createEnrollAuthenticatorMeta(sdk, params);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(params);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\nexport { enrollAuthenticator };","map":{"version":3,"names":["clone","createEnrollAuthenticatorMeta","prepareEnrollAuthenticatorParams","buildAuthorizeParams","enrollAuthenticator","sdk","options","params","meta","requestUrl","urls","authorizeUrl","transactionManager","save","setLocation","window","location","assign"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/oidc/enrollAuthenticator.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util/object.js';\nimport '../errors/WWWAuthError.js';\nimport { createEnrollAuthenticatorMeta } from './util/enrollAuthenticatorMeta.js';\nimport 'tiny-emitter';\nimport 'js-cookie';\nimport 'cross-fetch';\nimport { prepareEnrollAuthenticatorParams } from './util/prepareEnrollAuthenticatorParams.js';\nimport './types/Token.js';\nimport { buildAuthorizeParams } from './endpoints/authorize.js';\n\nfunction enrollAuthenticator(sdk, options) {\n    options = clone(options) || {};\n    const params = prepareEnrollAuthenticatorParams(sdk, options);\n    const meta = createEnrollAuthenticatorMeta(sdk, params);\n    const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(params);\n    sdk.transactionManager.save(meta);\n    if (sdk.options.setLocation) {\n        sdk.options.setLocation(requestUrl);\n    }\n    else {\n        window.location.assign(requestUrl);\n    }\n}\n\nexport { enrollAuthenticator };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,mBAAmB;AACzC,OAAO,2BAA2B;AAClC,SAASC,6BAA6B,QAAQ,mCAAmC;AACjF,OAAO,cAAc;AACrB,OAAO,WAAW;AAClB,OAAO,aAAa;AACpB,SAASC,gCAAgC,QAAQ,4CAA4C;AAC7F,OAAO,kBAAkB;AACzB,SAASC,oBAAoB,QAAQ,0BAA0B;AAE/D,SAASC,mBAAmBA,CAACC,GAAG,EAAEC,OAAO,EAAE;EACvCA,OAAO,GAAGN,KAAK,CAACM,OAAO,CAAC,IAAI,CAAC,CAAC;EAC9B,MAAMC,MAAM,GAAGL,gCAAgC,CAACG,GAAG,EAAEC,OAAO,CAAC;EAC7D,MAAME,IAAI,GAAGP,6BAA6B,CAACI,GAAG,EAAEE,MAAM,CAAC;EACvD,MAAME,UAAU,GAAGD,IAAI,CAACE,IAAI,CAACC,YAAY,GAAGR,oBAAoB,CAACI,MAAM,CAAC;EACxEF,GAAG,CAACO,kBAAkB,CAACC,IAAI,CAACL,IAAI,CAAC;EACjC,IAAIH,GAAG,CAACC,OAAO,CAACQ,WAAW,EAAE;IACzBT,GAAG,CAACC,OAAO,CAACQ,WAAW,CAACL,UAAU,CAAC;EACvC,CAAC,MACI;IACDM,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACR,UAAU,CAAC;EACtC;AACJ;AAEA,SAASL,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}