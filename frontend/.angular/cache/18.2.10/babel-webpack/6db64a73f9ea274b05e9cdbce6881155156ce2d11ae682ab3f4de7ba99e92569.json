{"ast":null,"code":"import { ConfigError } from '../util/Errors.js';\nimport Util from '../util/Util.js';\nimport Logger from '../util/Logger.js';\nimport getAuthClientInstance from './getAuthClient.js';\nimport buildRenderOptions from './buildRenderOptions.js';\nimport createRouter from './createRouter.js';\nimport Hooks from '../models/Hooks.js';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst EVENTS_LIST = ['ready', 'afterError', 'afterRender'];\nfunction createOktaSignIn(authClientConstructor, routerClassFactory) {\n  return class OktaSignIn {\n    // Map original event handler to wrapped one\n\n    constructor(options) {\n      this.Router = void 0;\n      this.options = void 0;\n      this.hooks = void 0;\n      this.router = void 0;\n      this.authClient = void 0;\n      this._eventCallbackMap = void 0;\n      Util.debugMessage(`\n          The Okta Sign-In Widget is running in development mode.\n          When you are ready to publish your app, embed the minified version to turn on production mode.\n          See: https://developer.okta.com/code/javascript/okta_sign-in_widget#cdn\n        `);\n      if (!options.stateToken) {\n        var _window, _window$oktaData, _window$oktaData$sign;\n        // need to set stateToken here vs in Settings to determine Router.\n        // oktaData is only available to SIW on custom domains.\n        // set stateToken in case user wipes out stateToken when overriding options.\n        options.stateToken = (_window = window) === null || _window === void 0 ? void 0 : (_window$oktaData = _window.oktaData) === null || _window$oktaData === void 0 ? void 0 : (_window$oktaData$sign = _window$oktaData.signIn) === null || _window$oktaData$sign === void 0 ? void 0 : _window$oktaData$sign.stateToken;\n      }\n      this.options = options;\n      this.authClient = getAuthClientInstance(authClientConstructor, options);\n\n      // validate authClient configuration against widget options\n      if (options.useClassicEngine !== true && this.authClient.options.clientId && this.authClient.isPKCE() === false) {\n        throw new ConfigError('OAuth2 with interaction code flow requires PKCE to be enabled on the authClient.');\n      }\n\n      // Hooks can be modified before or after render\n      this.hooks = new Hooks({\n        hooks: options.hooks\n      });\n      this.Router = routerClassFactory(options);\n      this._eventCallbackMap = new WeakMap();\n\n      // Triggers the event up the chain so it is available to the consumers of the widget.\n      this.Router.prototype.Events.listenTo.call(this, this.Router.prototype, 'all', this.trigger);\n\n      // On the first afterRender event (usually when the Widget is ready) - emit a 'ready' event\n      this.once('afterRender', function (context) {\n        this.trigger('ready', context);\n      });\n    }\n\n    /**\n     * Render the sign in widget to an element. Returns a promise that will resolve on success or reject on error.\n     * @param options - options for the signin widget.\n     *        Must have an el or $el property to render the widget to.\n     * @param success - success callback function\n     * @param error - error callback function\n     */\n    renderEl(renderOptions, successFn, errorFn) {\n      if (this.router) {\n        throw new Error('An instance of the widget has already been rendered. Call remove() first.');\n      }\n      const res = createRouter(this.Router, this.options, renderOptions, this.authClient, successFn, errorFn, this.hooks);\n      this.router = res.router;\n      return res.promise;\n    }\n    hide() {\n      if (this.router) {\n        this.router.hide();\n      }\n    }\n    show() {\n      if (this.router) {\n        this.router.show();\n      }\n    }\n    remove() {\n      if (this.router) {\n        this.router.remove();\n        this.router = undefined;\n      }\n    }\n\n    /**\n     * Renders the Widget and returns a promise that resolves to OAuth tokens\n     * @param options - options for the signin widget\n     */\n    showSignInToGetTokens(options) {\n      const renderOptions = Object.assign(buildRenderOptions(this.options, options), {\n        redirect: 'never'\n      });\n      const promise = this.renderEl(renderOptions).then(res => {\n        return res.tokens;\n      });\n      const authClient = this.router.settings.getAuthClient();\n      if (authClient.isAuthorizationCodeFlow() && !authClient.isPKCE()) {\n        throw new ConfigError('\"showSignInToGetTokens()\" should not be used for authorization_code flow. ' + 'Use \"showSignInAndRedirect()\" instead');\n      }\n      return promise;\n    }\n\n    /**\n     * Renders the widget and redirects to the OAuth callback\n     * @param options - options for the signin widget\n     */\n    showSignInAndRedirect(options) {\n      const renderOptions = Object.assign(buildRenderOptions(this.options, options), {\n        redirect: 'always'\n      });\n      return this.renderEl(renderOptions).then(() => {\n        // This method should never return, it will either redirect or reject with error\n        return;\n      });\n    }\n\n    /**\n     * Renders the widget. Either resolves the returned promise, or redirects.\n     * @param options - options for the signin widget\n     */\n    showSignIn(options) {\n      const renderOptions = Object.assign(buildRenderOptions(this.options, options));\n      return this.renderEl(renderOptions);\n    }\n\n    // Hook convenience functions\n    before(formName, callbackFn) {\n      this.hooks.mergeHook(formName, {\n        before: [callbackFn]\n      });\n    }\n    after(formName, callbackFn) {\n      this.hooks.mergeHook(formName, {\n        after: [callbackFn]\n      });\n    }\n    getUser() {\n      var _this$router, _this$router$appState;\n      return (_this$router = this.router) === null || _this$router === void 0 ? void 0 : (_this$router$appState = _this$router.appState) === null || _this$router$appState === void 0 ? void 0 : _this$router$appState.getUser();\n    }\n\n    // Events API\n\n    on(event, callback) {\n      // custom events listener on widget instance to trap third-party callback errors\n      if (EVENTS_LIST.includes(event)) {\n        const origCallback = callback;\n        callback = function (...callbackArgs) {\n          try {\n            origCallback.apply(this, callbackArgs);\n          } catch (err) {\n            Logger.error(`[okta-signin-widget] \"${event}\" event handler error:`, err);\n          }\n        };\n        this._eventCallbackMap.set(origCallback, callback);\n      }\n      this.Router.prototype.Events.on.call(this, event, callback);\n    }\n    off(event, callback) {\n      if (callback) {\n        callback = this._eventCallbackMap.get(callback) || callback;\n      }\n      this.Router.prototype.Events.off.call(this, event, callback);\n    }\n    once(event, callback) {\n      this.Router.prototype.Events.once.call(this, event, callback);\n    }\n    stopListening(event, callback) {\n      this.Router.prototype.Events.stopListening.call(this, event, callback);\n    }\n    listenTo(object, event, callback) {\n      this.Router.prototype.Events.listenTo.call(this, object, event, callback);\n    }\n    trigger(event, ...args) {\n      this.Router.prototype.Events.trigger.apply(this, [event, ...args]);\n    }\n  };\n}\nexport { createOktaSignIn };","map":{"version":3,"names":["ConfigError","Util","Logger","getAuthClientInstance","buildRenderOptions","createRouter","Hooks","EVENTS_LIST","createOktaSignIn","authClientConstructor","routerClassFactory","OktaSignIn","constructor","options","Router","hooks","router","authClient","_eventCallbackMap","debugMessage","stateToken","_window","_window$oktaData","_window$oktaData$sign","window","oktaData","signIn","useClassicEngine","clientId","isPKCE","WeakMap","prototype","Events","listenTo","call","trigger","once","context","renderEl","renderOptions","successFn","errorFn","Error","res","promise","hide","show","remove","undefined","showSignInToGetTokens","Object","assign","redirect","then","tokens","settings","getAuthClient","isAuthorizationCodeFlow","showSignInAndRedirect","showSignIn","before","formName","callbackFn","mergeHook","after","getUser","_this$router","_this$router$appState","appState","on","event","callback","includes","origCallback","callbackArgs","apply","err","error","set","off","get","stopListening","object","args"],"sources":["C:/SpringBOot/ecommerce-project/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/widget/OktaSignIn.js"],"sourcesContent":["import { ConfigError } from '../util/Errors.js';\nimport Util from '../util/Util.js';\nimport Logger from '../util/Logger.js';\nimport getAuthClientInstance from './getAuthClient.js';\nimport buildRenderOptions from './buildRenderOptions.js';\nimport createRouter from './createRouter.js';\nimport Hooks from '../models/Hooks.js';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst EVENTS_LIST = ['ready', 'afterError', 'afterRender'];\nfunction createOktaSignIn(authClientConstructor, routerClassFactory) {\n  return class OktaSignIn {\n    // Map original event handler to wrapped one\n\n    constructor(options) {\n      this.Router = void 0;\n      this.options = void 0;\n      this.hooks = void 0;\n      this.router = void 0;\n      this.authClient = void 0;\n      this._eventCallbackMap = void 0;\n      Util.debugMessage(`\n          The Okta Sign-In Widget is running in development mode.\n          When you are ready to publish your app, embed the minified version to turn on production mode.\n          See: https://developer.okta.com/code/javascript/okta_sign-in_widget#cdn\n        `);\n      if (!options.stateToken) {\n        var _window, _window$oktaData, _window$oktaData$sign;\n        // need to set stateToken here vs in Settings to determine Router.\n        // oktaData is only available to SIW on custom domains.\n        // set stateToken in case user wipes out stateToken when overriding options.\n        options.stateToken = (_window = window) === null || _window === void 0 ? void 0 : (_window$oktaData = _window.oktaData) === null || _window$oktaData === void 0 ? void 0 : (_window$oktaData$sign = _window$oktaData.signIn) === null || _window$oktaData$sign === void 0 ? void 0 : _window$oktaData$sign.stateToken;\n      }\n      this.options = options;\n      this.authClient = getAuthClientInstance(authClientConstructor, options);\n\n      // validate authClient configuration against widget options\n      if (options.useClassicEngine !== true && this.authClient.options.clientId && this.authClient.isPKCE() === false) {\n        throw new ConfigError('OAuth2 with interaction code flow requires PKCE to be enabled on the authClient.');\n      }\n\n      // Hooks can be modified before or after render\n      this.hooks = new Hooks({\n        hooks: options.hooks\n      });\n      this.Router = routerClassFactory(options);\n      this._eventCallbackMap = new WeakMap();\n\n      // Triggers the event up the chain so it is available to the consumers of the widget.\n      this.Router.prototype.Events.listenTo.call(this, this.Router.prototype, 'all', this.trigger);\n\n      // On the first afterRender event (usually when the Widget is ready) - emit a 'ready' event\n      this.once('afterRender', function (context) {\n        this.trigger('ready', context);\n      });\n    }\n\n    /**\n     * Render the sign in widget to an element. Returns a promise that will resolve on success or reject on error.\n     * @param options - options for the signin widget.\n     *        Must have an el or $el property to render the widget to.\n     * @param success - success callback function\n     * @param error - error callback function\n     */\n    renderEl(renderOptions, successFn, errorFn) {\n      if (this.router) {\n        throw new Error('An instance of the widget has already been rendered. Call remove() first.');\n      }\n      const res = createRouter(this.Router, this.options, renderOptions, this.authClient, successFn, errorFn, this.hooks);\n      this.router = res.router;\n      return res.promise;\n    }\n    hide() {\n      if (this.router) {\n        this.router.hide();\n      }\n    }\n    show() {\n      if (this.router) {\n        this.router.show();\n      }\n    }\n    remove() {\n      if (this.router) {\n        this.router.remove();\n        this.router = undefined;\n      }\n    }\n\n    /**\n     * Renders the Widget and returns a promise that resolves to OAuth tokens\n     * @param options - options for the signin widget\n     */\n    showSignInToGetTokens(options) {\n      const renderOptions = Object.assign(buildRenderOptions(this.options, options), {\n        redirect: 'never'\n      });\n      const promise = this.renderEl(renderOptions).then(res => {\n        return res.tokens;\n      });\n      const authClient = this.router.settings.getAuthClient();\n      if (authClient.isAuthorizationCodeFlow() && !authClient.isPKCE()) {\n        throw new ConfigError('\"showSignInToGetTokens()\" should not be used for authorization_code flow. ' + 'Use \"showSignInAndRedirect()\" instead');\n      }\n      return promise;\n    }\n\n    /**\n     * Renders the widget and redirects to the OAuth callback\n     * @param options - options for the signin widget\n     */\n    showSignInAndRedirect(options) {\n      const renderOptions = Object.assign(buildRenderOptions(this.options, options), {\n        redirect: 'always'\n      });\n      return this.renderEl(renderOptions).then(() => {\n        // This method should never return, it will either redirect or reject with error\n        return;\n      });\n    }\n\n    /**\n     * Renders the widget. Either resolves the returned promise, or redirects.\n     * @param options - options for the signin widget\n     */\n    showSignIn(options) {\n      const renderOptions = Object.assign(buildRenderOptions(this.options, options));\n      return this.renderEl(renderOptions);\n    }\n\n    // Hook convenience functions\n    before(formName, callbackFn) {\n      this.hooks.mergeHook(formName, {\n        before: [callbackFn]\n      });\n    }\n    after(formName, callbackFn) {\n      this.hooks.mergeHook(formName, {\n        after: [callbackFn]\n      });\n    }\n    getUser() {\n      var _this$router, _this$router$appState;\n      return (_this$router = this.router) === null || _this$router === void 0 ? void 0 : (_this$router$appState = _this$router.appState) === null || _this$router$appState === void 0 ? void 0 : _this$router$appState.getUser();\n    }\n\n    // Events API\n\n    on(event, callback) {\n      // custom events listener on widget instance to trap third-party callback errors\n      if (EVENTS_LIST.includes(event)) {\n        const origCallback = callback;\n        callback = function (...callbackArgs) {\n          try {\n            origCallback.apply(this, callbackArgs);\n          } catch (err) {\n            Logger.error(`[okta-signin-widget] \"${event}\" event handler error:`, err);\n          }\n        };\n        this._eventCallbackMap.set(origCallback, callback);\n      }\n      this.Router.prototype.Events.on.call(this, event, callback);\n    }\n    off(event, callback) {\n      if (callback) {\n        callback = this._eventCallbackMap.get(callback) || callback;\n      }\n      this.Router.prototype.Events.off.call(this, event, callback);\n    }\n    once(event, callback) {\n      this.Router.prototype.Events.once.call(this, event, callback);\n    }\n    stopListening(event, callback) {\n      this.Router.prototype.Events.stopListening.call(this, event, callback);\n    }\n    listenTo(object, event, callback) {\n      this.Router.prototype.Events.listenTo.call(this, object, event, callback);\n    }\n    trigger(event, ...args) {\n      this.Router.prototype.Events.trigger.apply(this, [event, ...args]);\n    }\n  };\n}\n\nexport { createOktaSignIn };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}